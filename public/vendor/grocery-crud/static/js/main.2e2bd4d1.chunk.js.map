{"version":3,"sources":["actions/columns-actions.js","actions/form-actions.js","utils/events.js","utils/form-fields.js","utils/urls.js","components/common/error/fatal-error-message.jsx","actions/depended-fields-actions.js","utils/themes.js","actions/column-width-actions.js","constants/field-types.js","actions/master-detail-actions.js","components/filtering/select-options/text.js","components/filtering/select-options/equal_not_equal.js","components/filtering/select-options/comparison.js","components/filtering/select-options/has_or_not.js","utils/filtering-helper.js","utils/array-helper.js","constants/prefix.js","actions/search-async-actions.js","utils/locale/language-english.js","utils/locale/i18n.js","actions/error-actions.js","actions/configuration-actions.js","constants/persist.js","actions/datagrid-actions.js","utils/redux-helper.js","utils/columns.js","reducers/datagrid-reducer.js","reducers/datagrid-rows-reducer.js","actions/filtering-actions.js","reducers/filtering-reducer.js","reducers/forms-reducer.js","utils/locale/locale-helper.js","reducers/configuration-reducer.js","reducers/loading-reducer.js","reducers/columns-reducer.js","reducers/error-reducer.js","reducers/depended-relation.js","reducers/column-width-reducer.js","reducers/master-detail-reducer.js","reducers/search-reducer.js","reducers/index.js","utils/request.js","utils/error-messages.js","middlewares/server-request-middleware.js","middlewares/url-middleware.js","middlewares/multiple-selections-middleware.js","middlewares/persist-middleware.js","components/datagrid/datagrid.skin.js","components/datagrid/datagrid.jsx","actions/tools-actions.js","containers/datagrid-container.js","components/error/error-display.jsx","containers/error-container.js","components/main.jsx","containers/main-container.js","App.js","utils/device-helper.js","middlewares/external-events.js","middlewares/callback-events.js","grocery-crud-loader.js","index.js","helpers/form-set-field-value.js"],"names":["columnsActionsPrefix","columnsActions","MODAL_OPEN","MODAL_CLOSE","TOGGLE_VISIBLE_COLUMN","SELECT_ALL_OR_NONE","ORDERING_CHANGE","RESET_ORDERING","formActionsPrefix","formActions","ADD","CLONE","DELETE","DELETE_MULTIPLE","EDIT","READ","DELETE_ACTION_ONE","DELETE_ACTION_ONE_SUCCESS","DELETE_ACTION_MULTIPLE","DELETE_ACTION_MULTIPLE_SUCCESS","ADD_LOAD","CLONE_LOAD","DELETE_LOAD","EDIT_LOAD","READ_LOAD","INSERT","UPDATE","REMOVE_ONE","INSERT_SUCCESS","UPDATE_SUCCESS","DELETE_ONE_MODAL_CLOSE","DELETE_MULTIPLE_MODAL_CLOSE","TOGGLE_CLOSE_MODAL_ON_SAVE","EVENT_SET_FIELD_VALUE","publishEvent","eventName","payload","window","dispatchEvent","CustomEvent","detail","subscribeEvent","callback","addEventListener","unsubscribeEvent","removeEventListener","fieldTypesGroupingPerOperation","rawData","groupedFieldTypes","fieldTypes","fieldTypesAddForm","fieldTypesCloneForm","fieldTypesColumns","fieldTypesEditForm","fieldTypesReadForm","fieldTypesMapping","columns","addFields","editFields","cloneFields","readFields","readOnlyOperationsMapping","Object","keys","forEach","fieldName","fieldTypeData","dataType","INVISIBLE","push","fieldTypeName","fieldTypeDataName","fieldData","currentFieldTypeData","name","displayAs","fieldTypeOperationName","readOnlyOperationName","length","includes","isReadOnly","addValuesToFieldTypes","fields","data","mergedFieldTypes","dependencyFields","field","RELATIONAL","RELATIONAL_NATIVE","DEPENDED_RELATIONAL","options","dependedFrom","dependencyField","fieldValue","valueLabel","RELATIONAL_N_N_NATIVE","RELATIONAL_N_N","value","DYNAMIC_RELATION","label","isDependencyField","formSubmitTransformation","formFields","dataToSubmit","fieldTypesByFieldName","MULTISELECT_NATIVE","MULTISELECT_SEARCHABLE","Array","isArray","join","BACKEND_CALLBACK","fieldFromDom","document","querySelector","encodeQueryData","finalUrlAsArray","queryParameter","subQueryParameter","subSubQueryParameter","undefined","key","encodeURIComponent","replace","encodeDataObjectToArrayOfGetParameters","urlGenerator","actionUrlSegment","apiUrl","columnSearchValues","sorting","sortingFor","visibleColumnsAsShortString","extendedSearchData","action","order_by","visible_columns","extended_search","search","queryData","memoPdfExportUrlGenerator","memoizeOne","state","isDeepEqual","memoExcelExportUrlGenerator","memoPrintUrlGenerator","pdfExportUrl","excelExportUrl","printUrl","getPrimaryKeyValueFromUrlString","url","match","slice","pop","getReduxActionFromUrl","currentUrl","location","href","type","primaryKeyValue","test","reason","configurationActions","INIT_SUCCESS","getBlobViewUrl","getUploadOneViewUrl","fieldOptions","filename","publicPath","getMultipleActionUrl","button","selectedIds","querySeparator","map","selectedId","idFieldQueryName","FatalErrorMessage","style","padding","border","dependedFieldsPrefix","dependedFieldsActions","UPDATE_DEPENDENCY","UPDATE_PERMITTED_VALUES","assetsUrl","GroceryCrudConfiguration","themeMapping","dark","mini","loadCSS","themeName","skinName","cssId","getElementById","head","getElementsByTagName","link","createElement","theme","id","rel","referrerpolicy","appendChild","columnWidthActions","CHANGE_WIDTH","RESET_COLUMN_WIDTH","BLOB","COLOR","DATE","DATETIME","DROPDOWN","DROPDOWN_SEARCH","EMAIL","ENUM","ENUM_SEARCHABLE","FLOAT","HIDDEN","INTEGER","NATIVE_DATE","NATIVE_DATETIME","NATIVE_TIME","NATIVE_TIMESTAMP","NUMERIC","PASSWORD","TEXT","TEXTAREA","TEXT_EDITOR","TIME","TIMESTAMP","UPLOAD","UPLOAD_MULTIPLE","masterDetailActionsPrefix","masterDetailActions","OPEN_ROW","CLOSE_ROW","TextSelectOptions","i18n","t","SelectOptionsEqualNotEqual","ComparisonSelectOptions","SelectOptionsHasOrNot","emptyFilterMapping","is_empty","is_not_empty","fieldTypesAlwaysToRefreshMapping","comparisonValueMapping","selectOptionsComponentMapping","getSelectOptionsComponentFromDataType","getFilterValueFromDataType","doTriggerFilterRefresh","oldDataType","newDataType","doTriggerFilterValueRefresh","oldValue","newValue","transformExtendedSearchData","transformedData","searchData","deepCloneArray","arrayToClone","JSON","parse","stringify","simpleReorder","list","startIndex","endIndex","result","from","splice","removed","UPLOAD_FILE_NAME_PREFIX","CSS_VARIABLE_PREFIX","searchAsyncActions","SEARCH","languageEnglish","action_delete","actions","add_item","browse_file","cancel","clear_cache","clear_filtering","clone","close_modal","close_modal_on_save","column_width_drag","confirm_delete","confirm_delete_multiple","edit","edit_item","enter_x_or_more_characters","error_empty_response","error_generic_title","error_message","error_server_response","error_text","error_unknown_response","experimental_feature_short","export_to_file","filtering_add_more","filtering_and_statement","filtering_cancel","filtering_contains","filtering_does_not_have","filtering_ends_with","filtering_equals","filtering_filter_plural","filtering_filter_single","filtering_filter_text","filtering_greater_than","filtering_greater_than_or_equal","filtering_has","filtering_is_empty","filtering_is_not_empty","filtering_less_than","filtering_less_than_or_equal","filtering_not_equals","filtering_operator","filtering_or_statement","filtering_remove_filter","filtering_remove_filters","filtering_starts_with","filtering_text","loading","modal_save","more","ordering_drag","paging_displaying","paging_filtered_from","paging_show_entries","preview_as_html","preview_as_plain_text","print","quick_search","refresh","reset_column_width","reset_ordering","select_all","select_an_option","select_some_options","settings","subject","subject_plural","tab_ordering","tab_visibility","tab_width","time_hour_text","time_minute_text","time_second_text","time_text","upload_attach_file","view","view_item","translations","debug","this","localForage","getItem","then","translationsFromLocalForage","translationsObject","setItem","catch","console","warn","translation","strRaw","args","str","argName","RegExp","errorActionsPrefix","errorActions","RESPONSE_ERROR","JAVASCRIPT_ERROR","configurationActionsPrefix","DATAGRID_FETCH","DATAGRID_LOAD_FAILURE","DATAGRID_LOAD_SUCCESS","INIT_FETCH","MAIN_CONFIGURATION","INIT_FAILURE","SET_OPEN_IN_MODAL","SET_URL_HISTORY","persistConstants","blacklistedKeys","datagridActionsPrefix","datagridActions","CLEAR_CACHE","CLEAR_FILTERING","COLUMNS_MODAL_CLOSE","COLUMNS_MODAL_OPEN","COLUMN_ORDERING","COLUMN_SEARCH","DATA_FAILURE","DATA_FETCH","DATA_RENDER","ORDERING_RESET","PAGE_CHANGE","PER_PAGE_CHANGE","READY","REHYDRATE_VALIDATION","SELECT_ROWS","SELECT_ROW_ALL_OR_NONE","SELECT_ROW_TOGGLE","handleActions","handlers","initialState","memoVisibleColumnsWithDetails","columnsWithDetails","visibleColumns","orderedColumns","detailedColumns","columnName","detailedColumn","find","column","getVisibleColumnsWithDetails","memoGetVisibleColumnsAsShortString","visibleColumnsIndexes","columnIndex","visibleColumn","getColumnsWithData","columnData","filter","filteredTotalEntries","lastPage","orderBy","page","perPage","totalEntries","lastPrimaryKeyValue","cleanFilteringState","cleanOrderingState","clearLastPrimaryKeyValue","datagridReducer","transformedVisibleColumns","orderedColumnName","sourceIndex","destinationIndex","resetOrderedColumns","filteredState","keyName","filtered_total","Math","ceil","perPageValue","pageValue","datagridRowsReducer","filteringActionsPrefix","filteringActions","FORM_SUBMIT","filteringReducer","modalOpen","resetLoading","modalLoading","loadingOverlay","formOperation","operationState","formOperationLoad","readOnly","formOperationSuccess","formsReducer","deleteOneModalOpen","deleteMultipleModalOpen","closeModalOnSave","localesMapping","Afrikaans","Arabic","Bengali","Bulgarian","Catalan","Chinese","Croatian","Czech","Danish","Dutch","English","French","German","Greek","Hindi","Hungarian","Indonesian","Italian","Japanese","Korean","Lithuanian","Mongolian","Norwegian","Persian","Polish","Romanian","Russian","Slovak","Spanish","Thai","Turkish","Ukrainian","Vietnamese","monthFirstShort","monthFirstLong","dayFirstShort","dayFirstLong","dateFormatMapping","af","ar","bg","bn","ca","cs","da","de","el","es","fr","hi","hr","hu","it","ja","ko","lt","mn","nl","nn","pl","pt","ro","ru","sk","th","tr","uk","vi","zh","getBrowserLocale","navigator","language","getDateFormatFromLocale","locale","browserLocale","substring","removeSelectedIds","configurationReducer","REHYDRATE","pagingLoading","landingPageUrl","masterPrimaryKeyValue","actionButtonsMultiple","datagridButtons","pagingOptions","paging","operations","actionButtons","hasActionButtonsMultiple","add","hasColumnsButton","hasDatagridTitle","datagridTitle","deleteMultiple","deleteSingle","exportData","exportExcel","exportPdf","filters","read","configuration","actionButtonType","urlHistory","openInModal","maxActionButtons","rightSideActions","showImagePreview","subjectPlural","masterDetail","getLocaleFromLanguage","datagridButtonsTopLeft","position","datagridButtonsTopRight","datagridButtonsBottomLeft","datagridButtonsBottomRight","backendActionButtonsMultiple","dateFormat","hasSettings","hasFilters","hasExportData","hasExportPdf","hasExportExcel","hasPrint","hasMasterDetail","hasActions","hasAdd","hasTopLeftButtons","hasTopRightButtons","hasBottomLeftButtons","hasBottomRightButtons","hasEdit","hasClone","hasDelete","hasRead","hasActionButtons","actionButtonHasIcon","actionButtonHasText","initError","rowId","indexOf","mobile","desktop","notLoading","loadingReducer","columnsReducer","columnsModalOpen","showError","validationError","failureError","message","details","errorsList","errorReducer","setPermittedValues","permittedValues","dependedRelation","resetPermittedValuesForFields","updatedPermittedValues","resetFieldName","resetColumnWidth","columnWidthReducer","columnWidth","validatedColumnWidth","isNaN","parseInt","finalColumnWidth","currentColumnWidth","masterDetailReducer","openedRows","columnSearchValuesDisplayAs","extendedSearchOperator","searchReducer","searchValue","searchValueDisplayAs","groceryCrudReducers","combineReducers","datagrid","datagridRows","error","filtering","form","ajaxRequest","methodType","myRequest","request","post","get","requestExtraHeaders","requestHeaders","headerName","set","dataToSend","subFieldName","subFieldValue","File","arrayFieldKeyName","arrayFieldValue","query","URLSearchParams","toString","sendGetRequest","sendPostRequest","dispatchUnknownResponse","dispatch","setTimeout","rawResponse","log","errorMessageUnknownResponse","serverActionMapping","serverNextActionMapping","serverResponseStatus","datagridRequestDebounced","debounce","store","datagridRequest","serverRequestMiddleware","csrfToken","next","getState","actionType","insertId","field_name","search_value","inputName","inputValue","response","body","text","resolveCallback","actionFrom","action_from","items","item","title","per_page","master_id","init","nextAction","pk_value","status","concat","primaryKeys","errors","urlSegmentNameMapping","urlMiddleware","history","pushState","URL","urlAction","newUrl","multipleSelectionsMiddleware","row","grocery_crud_extras","persistMiddleware","datagridSkin","width","display","props","content","opacity","color","background","cursor","height","useStyles","createUseStyles","Datagrid","DatagridWrapper","DatagridHeader","DatagridBody","DatagridFooter","DatagridTools","DatagridTitle","classes","useSelector","formModalOpen","showDatagrid","className","toolsActionsPrefix","toolsActions","EXPORT_PDF","EXPORT_EXCEL","DatagridContainer","connect","ownProps","rows","selectRowsAllOrNoneChecked","DatagridCheckbox","GroupButtons","isMobileDevice","loadCssThirdParty","configurationSettings","skin","pageChangeDispatch","currentPage","onFilteringModalOpen","onSelectRowToggle","onSelectRowAllOrNone","onExportToExcel","onClearFiltering","onClearCache","onClearAllCache","PURGE","onExportToPdf","onAdd","onOrderingReset","onRefresh","onEdit","onRead","onClone","onDelete","onMultipleDeleteModalOpen","columnOrdering","columnSearch","forceSearch","perPageChange","event","target","pageChange","goToFirstPage","goToPreviousPage","goToNextPage","goToLastPage","propTypes","PropTypes","func","selectShowError","selectValidationError","selectFailureError","selectErrorsList","ErrorDisplay","ErrorDialog","closeModal","summary","ErrorContainer","Main","loadCssIcons","loadCssTheme","useState","ColumnsModal","DeleteMultipleModal","DeleteSingleModal","FilteringModal","FormDialog","dynamicComponents","setDynamicComponents","fatalError","setFatalError","useEffect","loadThemeDynamically","default","missingComponents","componentName","MainContainer","filteringModalOpen","formIsReadOnly","formLoadingOverlay","formModalLoading","formState","visibleColumnsWithDetails","onFilteringSubmit","onFormSubmit","formModalClose","deleteOneModalClose","deleteMultipleModalClose","deleteOne","onFilteringModalClose","onColumnsModalClose","onMultipleDeleteModalClose","MULTIPLE_DELETE_MODAL_CLOSE","toggleVisibleColumn","selectColumnsAllOrNone","changeOrdering","resetColumnsOrdering","oneOf","generateId","counter","rule","createGenerateId","App","groceryCrudStore","groceryCrudPersistor","themeProp","publishEvents","localStorage","setTheme","prefix","headTag","styleTag","niceBlack","justWhite","selectedBackgroundColor","innerHTML","MainContainerWithTheme","matchMedia","matches","persistor","onChange","reload","marginTop","externalEvents","firstTimeEvent","rest","startsWith","endsWith","callbackEvents","callbackBeforeUpdate","callbackBeforeInsert","callbackAfterUpdate","callbackAfterInsert","callbackBeforeDelete","callbackAfterDelete","groceryCrudLoader","myElement","persistedReducer","dataset","uniqueId","rememberState","hasCache","onRowUpdate","onRowUnmount","persistConfig","storage","blacklist","persistReducer","configureStore","reducer","middleware","devTools","persistStore","render","require","__webpack_public_path__","autoLoad","querySelectorAll","groceryCrudSetFieldValue"],"mappings":"0IAAA,sCAAMA,EAAuB,UAEhBC,EAAiB,CAC5BC,WAAW,GAAD,OAAKF,EAAL,UACVG,YAAY,GAAD,OAAKH,EAAL,gBACXI,sBAAsB,GAAD,OAAKJ,EAAL,0BACrBK,mBAAmB,GAAD,OAAKL,EAAL,2BAClBM,gBAAgB,GAAD,OAAKN,EAAL,oBACfO,eAAe,GAAD,OAAKP,EAAL,mB,yECRhB,sCAAMQ,EAAoB,OAEbC,EAAc,CACzBC,IAAI,GAAD,OAAKF,EAAL,QACHG,MAAM,GAAD,OAAKH,EAAL,UACLI,OAAO,GAAD,OAAKJ,EAAL,WACNK,gBAAgB,GAAD,OAAKL,EAAL,oBACfM,KAAK,GAAD,OAAKN,EAAL,SACJO,KAAK,GAAD,OAAKP,EAAL,SAEJQ,kBAAkB,GAAD,OAAKR,EAAL,sBACjBS,0BAA0B,GAAD,OAAKT,EAAL,8BAEzBU,uBAAuB,GAAD,OAAKV,EAAL,2BACtBW,+BAA+B,GAAD,OAAKX,EAAL,mCAE9BY,SAAS,GAAD,OAAKZ,EAAL,aACRa,WAAW,GAAD,OAAKb,EAAL,eACVc,YAAY,GAAD,OAAKd,EAAL,gBACXe,UAAU,GAAD,OAAKf,EAAL,cACTgB,UAAU,GAAD,OAAKhB,EAAL,cAETiB,OAAO,GAAD,OAAKjB,EAAL,WACNkB,OAAO,GAAD,OAAKlB,EAAL,WACNmB,WAAW,GAAD,OAAKnB,EAAL,eAEVoB,eAAe,GAAD,OAAKpB,EAAL,mBACdqB,eAAe,GAAD,OAAKrB,EAAL,mBAEdL,YAAY,GAAD,OAAKK,EAAL,gBACXsB,uBAAuB,GAAD,OAAKtB,EAAL,2BACtBuB,4BAA4B,GAAD,OAAKvB,EAAL,gCAE3BwB,2BAA2B,GAAD,OAAKxB,EAAL,+B,kCCjC5B,wIAAO,IAAMyB,EAAwB,wBAExBC,EAAe,SAACC,GAA6B,IAAlBC,EAAiB,uDAAP,CAAC,EACjDC,OAAOC,cACL,IAAIC,YAAYJ,EAAW,CACzBK,OAAQJ,IAGb,EAEYK,EAAiB,SAACN,EAAWO,GACxCL,OAAOM,iBAAiBR,EAAWO,EACpC,EAEYE,EAAmB,SAACT,EAAWO,GAC1CL,OAAOQ,oBAAoBV,EAAWO,EACvC,C,0JCdM,SAASI,EAA+BC,GAC7C,IAAIC,EAAoB,CACtBC,WAAY,GACZC,kBAAmB,GACnBC,oBAAqB,GACrBC,kBAAmB,GACnBC,mBAAoB,GACpBC,mBAAoB,IAGhBC,EAAoB,CACxBC,QAAS,oBACTC,UAAW,oBACXC,WAAY,qBACZC,YAAa,sBACbC,WAAY,sBAGRC,EAA4B,CAChCX,kBAAmB,oBACnBG,mBAAoB,qBACpBF,oBAAqB,uBA6DvB,OAzDAW,OAAOC,KAAKhB,EAAQE,YAAYe,SAAQ,SAACC,GACvC,IAAMC,EAAgBnB,EAAQE,WAAWgB,GAEzC,GAAIC,EAAcC,WAAalB,IAAWmB,UACxC,OAAO,EAGTpB,EAAkBC,WAAWoB,KAA7B,aACEJ,UAAWA,GACRC,GAEN,IAEDJ,OAAOC,KAAKR,GAAmBS,SAAQ,SAACM,GACtC,IAAMC,EAAoBhB,EAAkBe,GAE5CvB,EAAQuB,GAAeN,SAAQ,SAACQ,GAC9B,IAAMC,EAAuB1B,EAAQwB,GAAmBC,EAAUE,MAC9D3B,EAAQwB,GAAmBC,EAAUE,MACrC3B,EAAQE,WAAWuB,EAAUE,MAKjC,GACEH,IAAsBhB,EAAkBC,SACxCiB,EAAqBN,WAAalB,IAAWmB,UAE7C,OAAO,EAGTpB,EAAkBuB,GAAmBF,KAArC,aACEJ,UAAWO,EAAUE,KACrBC,UAAWH,EAAUG,WAClBF,GAEN,GACF,IAEDX,OAAOC,KAAKF,GAA2BG,SAAQ,SAACY,GAC9C,IAAMC,EACJhB,EAA0Be,GAGxB7B,EAAQ8B,GAAuBC,OAAS,GAC1C9B,EAAkB4B,GAAwBZ,SACxC,SAACQ,EAAWP,GACNlB,EAAQ8B,GAAuBE,SAASP,EAAUP,aACpDjB,EAAkB4B,GAChBX,GACAe,YAAa,EAElB,GAGN,IAEMhC,CACR,CAEM,SAASiC,EAAsBC,EAAQC,GAC5C,IAAIC,EAAmB,GACnBC,EAAmB,CAAC,EAuDxB,OArDAH,EAAOlB,SAAQ,SAACsB,GACd,OAAQA,EAAMnB,UACZ,KAAKlB,IAAWsC,WAChB,KAAKtC,IAAWuC,kBAChB,KAAKvC,IAAWwC,oBACVH,EAAMI,SAAWJ,EAAMI,QAAQC,cACjCL,EAAMI,QAAQC,aAAa3B,SAAQ,SAAC4B,GAClCP,EAAiBO,IAAmB,CACrC,IAGH,MAEF,QACEP,EAAiBC,EAAMrB,YAAa,EAIzC,IAEDiB,EAAOlB,SAAQ,SAACsB,GACd,IAAIO,EACAC,EAAa,KACT7B,EAAcqB,EAAdrB,UAER,OAAQqB,EAAMnB,UACZ,KAAKlB,IAAW8C,sBAChB,KAAK9C,IAAW+C,eACdH,EAAaV,EAAKlB,GAAakB,EAAKlB,GAAa,GACjD,MAEF,KAAKhB,IAAWwC,oBACdI,EAAaV,EAAKlB,GAAakB,EAAKlB,GAAWgC,MAAQ,GACvD,MAEF,KAAKhD,IAAWiD,iBACdL,EAAaV,EAAKlB,GAAakB,EAAKlB,GAAWgC,MAAQ,GACvDH,EAAaX,EAAKlB,GAAakB,EAAKlB,GAAWkC,MAAQ,GACvD,MAEF,QACEN,EAAaV,EAAKlB,GAAakB,EAAKlB,GAAa,GAIrDmB,EAAiBf,KAAjB,2BACKiB,GADL,IAEEc,mBAAmD,IAAhCf,EAAiBpB,GACpC4B,aACAC,eAEH,IAEMV,CACR,CAEM,SAASiB,EAAyBlB,GAAwB,IAAlBmB,EAAiB,uDAAJ,GACtDC,EAAe,CAAC,EAGhBC,EAAwB,CAAC,EAqC7B,OAnCAF,EAAWtC,SAAQ,SAACsB,GAClBkB,EAAsBlB,EAAMrB,WAAaqB,EAAMnB,QAChD,IAEDL,OAAOC,KAAKoB,GAAMnB,SAAQ,SAACC,GACzB,IAAM4B,EAAaV,EAAKlB,GAExB,OAAQuC,EAAsBvC,IAC5B,KAAKhB,IAAWwD,mBAChB,KAAKxD,IAAWyD,uBACdH,EAAatC,GAAa0C,MAAMC,QAAQf,GACpCA,EAAWgB,KAAK,KAChBhB,EACJ,MAGF,KAAK5C,IAAW6D,iBACd,IAAMC,EAAeC,SAASC,cAAT,mCACShD,EADT,wCACkDA,EADlD,0CAC6FA,EAD7F,MAInBsC,EAAatC,GADM,OAAjB8C,EACwBA,EAAad,MAEb,GAE5B,MAGF,QACEM,EAAatC,GAAa4B,EAI/B,IAEMU,CACR,C,kUCjID,SAASW,EAAgB/B,GACvB,OAxD6C,SAACA,GAC9C,IAAMgC,EAAkB,GAmDxB,OAlDArD,OAAOC,KAAKoB,GAAMnB,SAAQ,SAACoD,GAES,kBAAzBjC,EAAKiC,IACa,OAAzBjC,EAAKiC,GAELtD,OAAOC,KAAKoB,EAAKiC,IAAiBpD,SAAQ,SAACqD,GAIY,kBAA5ClC,EAAKiC,GAAgBC,IACgB,OAA5ClC,EAAKiC,GAAgBC,GAErBvD,OAAOC,KAAKoB,EAAKiC,GAAgBC,IAAoBrD,SACnD,SAACsD,GACC,IAAIrB,EACFd,EAAKiC,GAAgBC,GAAmBC,GACtC5C,EAAI,UAAM0C,EAAN,YAAwBC,EAAxB,aAA8CC,EAA9C,KAQNrB,EALiB,kBAAVA,GACG,OAAVA,QACcsB,IAAdtB,EAAMuB,IAGEC,mBAAmBxB,EAAMuB,KAEzBC,mBAAmBxB,GAG7BkB,EAAgB9C,KAAhB,UAAwBK,EAAxB,YAAgCuB,GACjC,IAGHkB,EAAgB9C,KACd+C,EACE,IACAC,EACA,KACAI,mBAAmBtC,EAAKiC,GAAgBC,IAG/C,IAEDF,EAAgB9C,KACdoD,mBAAmBL,GACjB,IACAK,mBAAmBtC,EAAKiC,IAAiBM,QAAQ,OAAQ,KAGhE,IACMP,CACR,CAGQQ,CAAuCxC,GAAM0B,KAAK,IAC1D,CAED,IAAMe,EAAe,SACnBC,EADmB,GAUf,IAPFC,EAOC,EAPDA,OACAC,EAMC,EANDA,mBACAC,EAKC,EALDA,QACAC,EAIC,EAJDA,WACAC,EAGC,EAHDA,4BACAC,EAEC,EAFDA,mBAGEhD,EAAO,CACTiD,OAAQP,EACRQ,SAAUJ,EACVD,UACAM,gBAAiBJ,GAIfC,EAAmBrD,OAAS,EAC9BK,EAAKoD,gBAAkBJ,EAEvBhD,EAAKqD,OAAST,EAGhB,IAAMU,EAAYvB,EAAgB/B,GAElC,MAAM,GAAN,OAAU2C,EAAV,YAAoBW,EACrB,EAcKC,EAA4BC,aAZJ,SAACC,GAC7B,OAAOhB,EAAa,aAAcgB,EACnC,GAYCC,KAEIC,EAA8BH,aAZJ,SAACC,GAC/B,OAAOhB,EAAa,SAAUgB,EAC/B,GAYCC,KAEIE,EAAwBJ,aAZJ,SAACC,GACzB,OAAOhB,EAAa,QAASgB,EAC9B,GAU2DC,KAE/CG,EAAe,SAACJ,GAC3B,OAAOF,EAA0BE,EAClC,EAEYK,EAAiB,SAACL,GAC7B,OAAOE,EAA4BF,EACpC,EAEYM,EAAW,SAACN,GACvB,OAAOG,EAAsBH,EAC9B,EAEKO,EAAkC,SAACC,GACvC,OAAOA,EAAIC,MAAM,QAAQC,OAAO,GAAGC,KACpC,EAEYC,EAAwB,WACnC,IAAMC,EAAapH,OAAOqH,SAASC,KAE/BC,EAAO,KACPC,EAAkB,KAetB,MAbI,SAASC,KAAKL,GAChBG,EAAOnJ,IAAYC,IACV,eAAeoJ,KAAKL,IAC7BG,EAAOnJ,IAAYK,KACnB+I,EAAkBV,EAAgCM,IACzC,gBAAgBK,KAAKL,IAC9BG,EAAOnJ,IAAYE,MACnBkJ,EAAkBV,EAAgCM,IACzC,eAAeK,KAAKL,KAC7BG,EAAOnJ,IAAYM,KACnB8I,EAAkBV,EAAgCM,IAG7C,yBACLG,QACwB,OAApBC,EAA2B,CAAEA,mBAAoB,CAAC,GAFxD,IAGEE,OAAQC,IAAqBC,cAEhC,EAEYC,EAAiB,WAAkD,IAAD,yDAAP,CAAC,EAAxCpC,EAA8C,EAA9CA,OAAQ7D,EAAsC,EAAtCA,UAAW4F,EAA2B,EAA3BA,gBAClD,MAAM,GAAN,OAAU/B,EAAV,wCAAgD7D,EAAhD,qBAAsE4F,EACvE,EAEYM,EAAsB,SAAC,GAAqC,IAAD,IAAlCC,oBAAkC,MAAnB,CAAC,EAAkB,EAAfC,EAAe,EAAfA,SACvD,OAAOD,EAAaE,WAAb,UAA6BF,EAAaE,YAA1C,OAAuDD,GAAa,EAC5E,EAEYE,EAAuB,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YAC7C,OACED,EAAOpB,IACPoB,EAAOE,eACPD,EACGE,KAAI,SAACC,GAAD,gBAAmBJ,EAAOK,iBAA1B,cAAgDD,EAAhD,IACJ/D,KAAK,IAEX,C,6CC3JciE,IAnBW,WACxB,OACE,sBAAKC,MAAO,CAAEC,QAAS,OAAQC,OAAQ,iBAAvC,UACE,sDAEA,qMAMA,+IAML,C,kCCjBD,sCAAMC,EAAuB,kBAEhBC,EAAwB,CACnCC,kBAAkB,GAAD,OAAKF,EAAL,sBACjBG,wBAAwB,GAAD,OAAKH,EAAL,4B,4ECJzB,IAAMI,GACE,QAAN,EAAAjJ,cAAA,mBAAQkJ,gCAAR,eAAkCD,YAAa,yBAE3CE,EAAe,CACnB,eAAgB,CACdpC,IAAI,GAAD,OAAKkC,EAAL,mCAEL,eAAgB,CACdG,KAAK,GAAD,OAAKH,EAAL,uCACJI,KAAK,GAAD,OAAKJ,EAAL,uCACJlC,IAAI,GAAD,OAAKkC,EAAL,uCAEL,kBAAmB,CACjBlC,IAAK,2FAEP,iBAAkB,CAChBA,IAAK,oFAEP,cAAe,CACbA,IAAK,0DAEP,kBAAmB,CACjBA,IAAI,GAAD,OAAKkC,EAAL,0CAEL,mBAAoB,CAClBlC,IAAI,GAAD,OAAKkC,EAAL,kDAEL,iBAAkB,CAChBlC,IAAI,GAAD,OAAKkC,EAAL,wCAIMK,EAAU,SAACC,EAAWC,GACjC,IAAMC,EAAK,iBAAaF,GAGxB,IAAK5E,SAAS+E,eAAeD,IAAUN,EAAaI,GAAY,CAC9D,IAAMI,EAAOhF,SAASiF,qBAAqB,QAAQ,GAC7CC,EAAOlF,SAASmF,cAAc,QAC9BC,EAAQZ,EAAaI,GAC3BM,EAAKG,GAAKP,EACVI,EAAKI,IAAM,aACXJ,EAAKK,eAAiB,cAClBV,GAAYO,EAAMP,GACpBK,EAAKvC,KAAOyC,EAAMP,GAElBK,EAAKvC,KAAOyC,EAAMhD,IAGpB4C,EAAKQ,YAAYN,EAClB,CACF,C,kCCnDD,sCAAMlM,EAAuB,eAEhByM,EAAqB,CAChCC,aAAa,GAAD,OAAK1M,EAAL,iBACZ2M,mBAAmB,GAAD,OAAK3M,EAAL,uB,iCCJpB,kCAAO,IAAMiD,EAAa,CACxB6D,iBAAkB,mBAClB8F,KAAM,eACNC,MAAO,QACPC,KAAM,OACNC,SAAU,WACVtH,oBAAqB,sBACrBuH,SAAU,WACVC,gBAAiB,kBACjB/G,iBAAkB,mBAClBgH,MAAO,QACPC,KAAM,OACNC,gBAAiB,kBACjBC,MAAO,QACPC,OAAQ,SACRC,QAAS,MACTnJ,UAAW,YACXqC,mBAAoB,qBACpBC,uBAAwB,yBACxB8G,YAAa,cACbC,gBAAiB,kBACjBC,YAAa,cACbC,iBAAkB,mBAClBC,QAAS,UACTC,SAAU,WACVtI,WAAY,aACZC,kBAAmB,oBACnBQ,eAAgB,iBAChBD,sBAAuB,wBACvB+H,KAAM,UACNC,SAAU,OACVC,YAAa,aACbC,KAAM,OACNC,UAAW,YACXC,OAAQ,SACRC,gBAAiB,kB,kCCnCnB,sCAAMC,EAA4B,gBAErBC,EAAsB,CACjCC,SAAS,GAAD,OAAKF,EAAL,aACRG,UAAU,GAAD,OAAKH,EAAL,c,oRCwBII,EA1BW,WACxB,MAAO,CACL,wBAAuBxI,MAAM,WAA7B,SACGyI,IAAKC,EAAE,uBADE,YAGZ,wBAA0B1I,MAAM,cAAhC,SACGyI,IAAKC,EAAE,0BADE,eAGZ,wBAAwB1I,MAAM,YAA9B,SACGyI,IAAKC,EAAE,wBADE,aAGZ,wBAAqB1I,MAAM,SAA3B,SACGyI,IAAKC,EAAE,qBADE,UAGZ,wBAAyB1I,MAAM,aAA/B,SACGyI,IAAKC,EAAE,yBADE,cAGZ,wBAAuB1I,MAAM,WAA7B,SACGyI,IAAKC,EAAE,uBADE,YAGZ,wBAA2B1I,MAAM,eAAjC,SACGyI,IAAKC,EAAE,2BADE,gBAIf,ECPcC,EAjBoB,WACjC,MAAO,CACL,wBAAqB3I,MAAM,SAA3B,SACGyI,IAAKC,EAAE,qBADE,UAGZ,wBAAyB1I,MAAM,aAA/B,SACGyI,IAAKC,EAAE,yBADE,cAGZ,wBAAuB1I,MAAM,WAA7B,SACGyI,IAAKC,EAAE,uBADE,YAGZ,wBAA2B1I,MAAM,eAAjC,SACGyI,IAAKC,EAAE,2BADE,gBAIf,ECccE,EA7BiB,WAC9B,MAAO,CACL,wBAAqB5I,MAAM,SAA3B,SACGyI,IAAKC,EAAE,qBADE,UAGZ,wBAAyB1I,MAAM,aAA/B,SACGyI,IAAKC,EAAE,yBADE,cAGZ,wBAA2B1I,MAAM,eAAjC,SACGyI,IAAKC,EAAE,2BADE,gBAGZ,wBAAwB1I,MAAM,YAA9B,SACGyI,IAAKC,EAAE,wBADE,aAGZ,wBAAoC1I,MAAM,wBAA1C,SACGyI,IAAKC,EAAE,oCADE,yBAGZ,wBAAiC1I,MAAM,qBAAvC,SACGyI,IAAKC,EAAE,iCADE,sBAGZ,wBAAuB1I,MAAM,WAA7B,SACGyI,IAAKC,EAAE,uBADE,YAGZ,wBAA2B1I,MAAM,eAAjC,SACGyI,IAAKC,EAAE,2BADE,gBAIf,ECVcG,EAjBe,WAC5B,MAAO,CACL,wBAAkB7I,MAAM,MAAxB,SACGyI,IAAKC,EAAE,kBADE,OAGZ,wBAA4B1I,MAAM,gBAAlC,SACGyI,IAAKC,EAAE,4BADE,iBAGZ,wBAAuB1I,MAAM,WAA7B,SACGyI,IAAKC,EAAE,uBADE,YAGZ,wBAA2B1I,MAAM,eAAjC,SACGyI,IAAKC,EAAE,2BADE,gBAIf,E,OCXYI,EAAqB,CAChCC,UAAU,EACVC,cAAc,GAIdnI,EAyBE7D,IAzBF6D,iBACA+F,EAwBE5J,IAxBF4J,MACAC,EAuBE7J,IAvBF6J,KACAC,EAsBE9J,IAtBF8J,SACAtH,EAqBExC,IArBFwC,oBACAuH,EAoBE/J,IApBF+J,SACAC,EAmBEhK,IAnBFgK,gBACA/G,EAkBEjD,IAlBFiD,iBACAiH,EAiBElK,IAjBFkK,KACAC,EAgBEnK,IAhBFmK,gBACAG,EAeEtK,IAfFsK,QACA9G,EAcExD,IAdFwD,mBACAC,EAaEzD,IAbFyD,uBACA8G,EAYEvK,IAZFuK,YACAC,EAWExK,IAXFwK,gBACAC,EAUEzK,IAVFyK,YACAC,EASE1K,IATF0K,iBACAC,EAQE3K,IARF2K,QACArI,EAOEtC,IAPFsC,WACAC,EAMEvC,IANFuC,kBACAQ,EAKE/C,IALF+C,eACAD,EAIE9C,IAJF8C,sBACA+H,EAGE7K,IAHF6K,KACAG,EAEEhL,IAFFgL,KACAC,EACEjL,IADFiL,UAGIgB,GAAgC,mBACnCzJ,GAAsB,GADa,cAEnCuH,GAAW,GAFwB,cAGnCC,GAAkB,GAHiB,cAInCE,GAAO,GAJ4B,cAKnCC,GAAkB,GALiB,cAMnC7H,GAAa,GANsB,cAOnCC,GAAoB,GAPe,cAQnCQ,GAAiB,GARkB,cASnCD,GAAwB,GATW,GAYhCoJ,GAAsB,mBACzBrI,EAAmB,YADM,cAEzB+F,EAAQ,YAFiB,cAGzBE,EAAW,UAHc,cAIzBD,EAAO,UAJkB,cAKzBrH,EAAsB,UALG,cAMzBuH,EAAW,UANc,cAOzBC,EAAkB,UAPO,cAQzB/G,EAAmB,UARM,cASzBiH,EAAO,UATkB,cAUzBC,EAAkB,UAVO,cAWzBG,EAAU,UAXe,cAYzB9G,EAAqB,OAZI,cAazBC,EAAyB,OAbA,cAczB+G,EAAkB,UAdO,cAezBD,EAAc,UAfW,cAgBzBG,EAAmB,UAhBM,cAiBzBD,EAAc,UAjBW,cAkBzBE,EAAU,UAlBe,cAmBzBrI,EAAa,UAnBY,cAoBzBC,EAAoB,UApBK,cAqBzBQ,EAAiB,OArBQ,cAsBzBD,EAAwB,OAtBC,cAuBzB+H,EAAO,YAvBkB,cAwBzBI,EAAY,UAxBa,cAyBzBD,EAAO,UAzBkB,GA4BtBmB,GAA6B,mBAChCtI,EAAmB2H,GADa,cAEhC5B,EAAQ+B,GAFwB,cAGhC7B,EAAW8B,GAHqB,cAIhC/B,EAAO+B,GAJyB,cAKhC7B,EAAW4B,GALqB,cAMhC3B,EAAkB2B,GANc,cAOhCzB,EAAOyB,GAPyB,cAQhCxB,EAAkBwB,GARc,cAShCrB,EAAUsB,GATsB,cAUhCpI,EAAqBqI,GAVW,cAWhCpI,EAAyBoI,GAXO,cAYhCrB,EAAkBoB,GAZc,cAahCrB,EAAcqB,GAbkB,cAchClB,EAAmBkB,GAda,cAehCnB,EAAcmB,GAfkB,cAgBhCjB,EAAUiB,GAhBsB,cAiBhCtJ,EAAaqJ,GAjBmB,cAkBhCpJ,EAAoBoJ,GAlBY,cAmBhC5I,EAAiB8I,GAnBe,cAoBhC/I,EAAwB+I,GApBQ,cAqBhChB,EAAOW,GArByB,cAsBhCP,EAAYW,GAtBoB,cAuBhCZ,EAAOY,GAvByB,GA0BtBQ,EAAwC,SAAClL,GACpD,OAAIiL,EAA8BjL,GACzBiL,EAA8BjL,GAEhCsK,CACR,EAEM,SAASa,EAA2BnL,GACzC,OAAIgL,EAAuBhL,GAClBgL,EAAuBhL,GAGzBgL,EAAsB,OAC9B,CAQM,SAASI,EAAuBC,EAAaC,GAClD,QAAIP,EAAiCO,IAI9BD,IAAgBC,CACxB,CAQM,SAASC,EAA4BC,EAAUC,GAEpD,OAAOb,EAAmBY,KAAcZ,EAAmBa,EAC5D,CAOM,SAASC,EAA4B1K,GAC1C,IAAI2K,EAAkB,GAUtB,OATA3K,EAAKnB,SAAQ,SAAC+L,GACZD,EAAgBzL,KAAhB,2BACK0L,GADL,IAEE9J,MAC8B,kBAArB8J,EAAW9J,OAA2C,OAArB8J,EAAW9J,MAC/C8J,EAAW9J,MAAMuB,IACjBuI,EAAW9J,QAEpB,IACM6J,CACR,C,kHClKYE,EAAiB,SAACC,GAC7B,OAAOC,KAAKC,MAAMD,KAAKE,UAAUH,GAClC,EAEYI,EAAgB,SAACC,EAAMC,EAAYC,GAC9C,IAAMC,EAAS9J,MAAM+J,KAAKJ,GAC1B,EAAkBG,EAAOE,OAAOJ,EAAY,GAArCK,EAAP,oBAGA,OAFAH,EAAOE,OAAOH,EAAU,EAAGI,GAEpBH,CACR,C,kCCVD,oEAAO,IAAMI,EAA0B,iBAC1BC,EAAsB,O,kCCDnC,sCAEaC,EAAqB,CAChCC,OAAO,GAAD,OAHkB,eAGlB,W,6ECHKC,EAAkB,CAC7BC,cAAe,SACfC,QAAS,UACTC,SAAU,gBACVC,YAAa,SACbC,OAAQ,SACRC,YAAa,cACbC,gBAAiB,kBACjBC,MAAO,QACPC,YAAa,QACbC,oBAAqB,sBACrBC,kBAAmB,yDACnBpO,QAAS,UACTqO,eAAgB,kDAChBC,wBACE,mEACFC,KAAM,OACNC,UAAW,iBACXC,2BACE,oDACFC,qBACE,6DACFC,oBAAqB,wBACrBC,cAAe,UACfC,sBAAuB,kBACvBC,WAAY,QACZC,uBAAwB,+CACxBC,2BAA4B,OAC5BC,eAAgB,SAChBC,mBAAoB,WACpBC,wBAAyB,MACzBC,iBAAkB,SAClBC,mBAAoB,WACpBC,wBAAyB,gBACzBC,oBAAqB,YACrBC,iBAAkB,SAClBC,wBAAyB,UACzBC,wBAAyB,SACzBC,sBAAuB,SACvBC,uBAAwB,eACxBC,gCAAiC,wBACjCC,cAAe,MACfC,mBAAoB,WACpBC,uBAAwB,eACxBC,oBAAqB,YACrBC,6BAA8B,qBAC9BC,qBAAsB,aACtBC,mBAAoB,WACpBC,uBAAwB,KACxBC,wBAAyB,gBACzBC,yBAA0B,iBAC1BC,sBAAuB,cACvBC,eAAgB,YAChBC,QAAS,aACTC,WAAY,eACZC,KAAM,OACNC,cAAe,yCACfC,kBAAmB,iDACnBC,qBAAsB,gDACtBC,oBAAqB,wBACrBC,gBAAiB,kBACjBC,sBAAuB,wBACvBC,MAAO,QACPC,aAAc,eACdC,QAAS,UACTC,mBAAoB,0BACpBC,eAAgB,iBAChBC,WAAY,aACZC,iBAAkB,mBAClBC,oBAAqB,sBACrBC,SAAU,WACVC,QAAS,OACTC,eAAgB,QAChBC,aAAc,WACdC,eAAgB,aAChBC,UAAW,QACXC,eAAgB,OAChBC,iBAAkB,SAClBC,iBAAkB,SAClBC,UAAW,OACXC,mBAAoB,yCACpBC,KAAM,OACNC,UAAW,kBCxBPrH,EAAO,I,WAnDX,aAAe,IAAD,gCAHdsH,aAAe,CAAC,EAGF,KAFdC,OAAQ,EAINC,KAAKF,aAAe/E,EAIpBkF,IAAYC,QAAQ,WAAWC,MAAK,SAACC,GACC,OAAhCA,IACF,EAAKN,aAAeM,EAEvB,GACF,C,wCAED,SAAKC,GACHL,KAAKF,aAAeO,EAEpBJ,IACGK,QAAQ,UADX,2BAEOD,GAFP,IAGInB,QAAS,GACTC,eAAgB,MAEjBoB,OAAM,WACLC,QAAQC,KAAK,6CACd,GACJ,G,eAED,SAAEC,GAEA,OAAIV,KAAKD,MACAW,EAGLV,KAAKF,aAAaY,GACbV,KAAKF,aAAaY,GAEpB,EACR,G,oBAED,SAAOC,EAAQC,GACb,IAAIC,EAAMF,EACV,OAAKC,GAASA,EAAKhS,QAGnBhB,OAAOC,KAAK+S,GAAM9S,SAAQ,SAACgT,GACzBD,EAAMA,EAAIrP,QAAQuP,OAAO,MAAQD,EAAU,MAAO,MAAOF,EAAKE,GAC/D,IACMD,GALEA,CAMV,K,MAKYrI,K,iCC5Df,sCAAMwI,EAAqB,QAEdC,EAAe,CAC1BC,eAAe,GAAD,OAAKF,EAAL,aACdG,iBAAiB,GAAD,OAAKH,EAAL,eAEhB/W,YAAY,GAAD,OAAK+W,EAAL,gB,iCCNb,sCAAMI,EAA6B,gBAEtBtN,EAAuB,CAClCuN,eAAe,GAAD,OAAKD,EAAL,mBACdE,sBAAsB,GAAD,OAAKF,EAAL,qBACrBG,sBAAsB,GAAD,OAAKH,EAAL,qBACrBI,WAAW,GAAD,OAAKJ,EAAL,eACVK,mBAAmB,GAAD,OAAKL,EAAL,uBAClBM,aAAa,GAAD,OAAKN,EAAL,iBACZrN,aAAa,GAAD,OAAKqN,EAAL,SAGZO,kBAAkB,GAAD,OAAKP,EAAL,sBACjBQ,gBAAgB,GAAD,OAAKR,EAAL,oB,yGCbJS,EAAmB,CAC9BC,gBAAiB,CACf,UACA,eACA,mBACA,QACA,YACA,OACA,gBACA,UACA,iB,sBCVEC,EAAwB,WAEjBC,EAAkB,CAC7BC,YAAY,GAAD,OAAKF,EAAL,gBACXG,gBAAgB,GAAD,OAAKH,EAAL,oBACfI,oBAAoB,GAAD,OAAKJ,EAAL,wBACnBK,mBAAmB,GAAD,OAAKL,EAAL,kBAClBM,gBAAgB,GAAD,OAAKN,EAAL,oBACfO,cAAc,GAAD,OAAKP,EAAL,kBACbQ,aAAa,GAAD,OAAKR,EAAL,iBACZS,WAAW,GAAD,OAAKT,EAAL,eACVU,YAAY,GAAD,OAAKV,EAAL,gBACXW,eAAe,GAAD,OAAKX,EAAL,mBACdY,YAAY,GAAD,OAAKZ,EAAL,gBACXa,gBAAgB,GAAD,OAAKb,EAAL,oBACfc,MAAM,GAAD,OAAKd,EAAL,UACLe,qBAAqB,GAAD,OAAKf,EAAL,yBACpBgB,YAAY,GAAD,OAAKhB,EAAL,gBACXiB,uBAAuB,GAAD,OAAKjB,EAAL,4BACtBkB,kBAAkB,GAAD,OAAKlB,EAAL,uB,eCnBNmB,EAAgB,SAACC,EAAUC,GACtC,OAAO,SAAC1Q,EAAOR,GACb,YAAcb,IAAVqB,EACK0Q,OAGqB/R,IAA1B8R,EAASjR,EAAOwB,MAGXyP,EAASjR,EAAOwB,MAAMhB,EAAOR,GAG/BQ,CACR,CACF,E,gDCgBK2Q,EAAgC5Q,aA3BJ,SAChC6Q,EACAC,EACAC,GAEA,IAAKF,IAAuBC,IAAmBC,EAC7C,MAAO,GAET,IAAIC,EAAkB,GAgBtB,OAfAD,EAAe1V,SAAQ,SAAC4V,GAEtB,IAAKH,EAAe1U,SAAS6U,GAC3B,OAAO,EAGT,IAAMC,EAAiBL,EAAmBM,MACxC,SAACC,GAAD,OAAYA,EAAOrV,OAASkV,CAA5B,IAGEC,GACFF,EAAgBtV,KAAKwV,EAExB,IAEMF,CACR,GAIC9Q,KAGWmR,EAA+B,SAC1CR,EACAC,EACAC,GAEA,OAAOH,EACLC,EACAC,EACAC,EAEH,EAmBKO,EAAqCtR,aAjBE,SAACnF,EAASiW,GACrD,IAAKjW,IAAYiW,EACf,MAAO,GAET,IAAIS,EAAwB,GAU5B,OATA1W,EAAQQ,SAAQ,SAAC+V,EAAQI,QAGrB5S,IADAkS,EAAeK,MAAK,SAACM,GAAD,OAAmBA,IAAkBL,EAAOrV,IAA5C,KAGpBwV,EAAsB7V,KAAK8V,EAE9B,IAEMD,EAAsBrT,KAAK,IACnC,GAICgC,KAOWwR,EAAqB,SAAC7W,EAASP,GAC1C,OAAOO,EACJmH,KAAI,SAACoP,GACJ,IAAMO,EAAarX,EAAW6W,MAC5B,SAACQ,GAAD,OAAgBA,EAAWrW,YAAc8V,EAAOrV,IAAhD,IAEF,OAAO,2BACFqV,GACAO,EAEN,IACAC,QAAO,SAACR,GAAD,OAAYA,EAAO5V,WAAalB,EAAWmB,SAA3C,GACX,EC5EKkV,EAAe,CACnBkB,qBAAsB,EACtBC,SAAU,EACVC,QAAS,GACTC,KAAM,EACNC,QAAS,GACT5S,QAAS,GACTC,WAAY,GACZ4S,aAAc,EACdpB,eAAgB,GAChBC,eAAgB,GAChBoB,oBAAqB,MAGjBC,EAAsB,CAC1BJ,KAAM,GAGFK,EAAqB,CACzBhT,QAAS,GACTC,WAAY,GACZ0S,KAAM,GAGFM,EAA2B,SAACrS,GAChC,OAAO,2BACFA,GADL,IAEEkS,oBAAqB,MAExB,EA6McI,EAjMS9B,GAAa,mBAEhCpP,IAAqBC,cAAe,SAACrB,EAAOR,GAC3C,IAAQ5E,EAAY4E,EAAOjD,KAAnB3B,QAEFR,EAAoBF,YAA+BsF,EAAOjD,MAEhE,OAAO,2BACFyD,GADL,IAIE6Q,eACkC,IAAhC7Q,EAAM6Q,eAAe3U,OACjBuV,EACE7W,EACAR,EAAkBI,mBAClBuH,KAAI,SAACoP,GAAD,OAAYA,EAAOrV,IAAnB,IACNkE,EAAM6Q,eACZC,eACkC,IAAhC9Q,EAAM8Q,eAAe5U,OACjBuV,EACE7W,EACAR,EAAkBI,mBAClBuH,KAAI,SAACoP,GAAD,OAAYA,EAAOrV,IAAnB,IACNkE,EAAM8Q,gBAEf,IA1BgC,cA4BhCzZ,IAAeI,oBAAqB,SAACuI,EAAOR,GAC3C,IAAQ5E,EAAY4E,EAAZ5E,QACAiW,EAAmB7Q,EAAnB6Q,eAGR,OAAIjW,EAAQsB,SAAW2U,EAAe3U,OAC7B,2BACF8D,GADL,IAEE6Q,eAAgB,KAIb,2BACF7Q,GADL,IAEE6Q,eAAgBjW,EAAQmH,KAAI,SAACoP,GAAD,OAAYA,EAAOrV,IAAnB,KAE/B,IA5CgC,cA8ChCzE,IAAeG,uBAAwB,SAACwI,EAAOR,GAC9C,IAAQwR,EAAwBxR,EAAxBwR,WAAYpW,EAAY4E,EAAZ5E,QACZiW,EAAmB7Q,EAAnB6Q,eAEFC,EAAiBlW,EAAQmH,KAAI,SAACoP,GAAD,OAAYA,EAAOrV,IAAnB,IAC/ByW,EAA4B,GAkBhC,OAhBI1B,EAAe1U,SAAS6U,GAC1BuB,EAA4B1B,EAAec,QACzC,SAACR,GAAD,OAAYA,IAAWH,CAAvB,IAIFF,EAAe1V,SAAQ,SAACoX,IAEpB3B,EAAe1U,SAASqW,IACxBA,IAAsBxB,IAEtBuB,EAA0B9W,KAAK+W,EAElC,IAGI,2BACFxS,GADL,IAEE6Q,eAAgB0B,GAEnB,IAzEgC,cA2EhClb,IAAeK,iBAAkB,SAACsI,EAAOR,GACxC,IAAQsR,EAAmB9Q,EAAnB8Q,eACA2B,EAA8CjT,EAA9CiT,YAAaC,EAAiClT,EAAjCkT,iBAAkB1B,EAAexR,EAAfwR,WAIvC,OAAIF,EAAe2B,KAAiBzB,EAC3B,eACFhR,GAIA,2BACFA,GADL,IAEE8Q,eAAgBrJ,YACdqJ,EACA2B,EACAC,IAGL,IA/FgC,cAgGhCrb,IAAeM,gBAAiB,SAACqI,EAAOR,GACvC,IAEMsR,EA7GgB,SAAClW,GAC3B,IAAIkW,EAAiB,GAMrB,OAJAlW,EAAQQ,SAAQ,SAAC+V,GACfL,EAAerV,KAAK0V,EAAOrV,KAC5B,IAEMgV,CACR,CAqG4B6B,CAFHnT,EAAZ5E,SAIR,OAAO,2BACFoF,GADL,IAEE8Q,kBAEH,IAzGgC,cA2GhCxB,EAAgBc,sBAAuB,SAACpQ,GACvC,IAAI4S,EAAgB,CAAC,EAKrB,OAJA1X,OAAOC,KAAKuV,GAActV,SAAQ,SAACyX,GACjCD,EAAcC,QACOlU,IAAnBqB,EAAM6S,GAAyB7S,EAAM6S,GAAWnC,EAAamC,EAChE,IACMD,CACR,IAlHgC,cAoHhCtD,EAAgBS,aAAc,SAAC/P,EAAOR,GACrC,IAAwBoS,EAAyBpS,EAAOjD,KAAhDuW,eACFb,EACJL,EAAuB5R,EAAMiS,aACzBL,EACA5R,EAAMiS,aACNJ,EACqB,IAAzBD,EACI,EACAmB,KAAKC,KAAKpB,EAAuB5R,EAAMgS,SACvCD,EAAO/R,EAAM+R,KAAOF,EAAWA,EAAW7R,EAAM+R,KAEhDG,EAAsB1S,EAAO0S,oBAC/B1S,EAAO0S,oBACP,KAEJ,OAAO,2BACFlS,GADL,IAEE4R,uBACAK,eACAJ,WACAE,OACAG,uBAEH,IA5IgC,cA6IhC5C,EAAgBY,iBAAkB,SAAClQ,EAAOR,GACzC,OAAO,2BACFQ,GADL,IAEEgS,QAASxS,EAAOyT,aAChBlB,KAAM,GAET,IAnJgC,cAqJhCzC,EAAgBW,aAAc,SAACjQ,EAAOR,GACrC,OAAO,2BACFQ,GADL,IAEE+R,KAAMvS,EAAO0T,WAEhB,IA1JgC,cA4JhC5D,EAAgBK,iBAAkB,SAAC3P,EAAOR,GACzC,OAAO,2BACFQ,GADL,IAEEZ,QAASI,EAAOJ,QAChBC,WAAYG,EAAOwR,YAEtB,IAlKgC,cAmKhC1B,EAAgBU,gBAAiB,SAAChQ,GACjC,OAAO,2BACFA,GACAoS,EAEN,IAxKgC,cAyKhC9C,EAAgBE,iBAAkB,SAACxP,GAClC,OAAO,2BACFA,GACAmS,EAEN,IA9KgC,cA+KhC7C,EAAgBC,aAAc,SAACvP,GAC9B,OAAO,uCACFA,GACAmS,GACAC,EAEN,IArLgC,cAuLhCva,IAAYC,IAAMua,GAvLc,cAwLhCxa,IAAYE,MAAQsa,GAxLY,cAyLhCxa,IAAYK,KAAOma,GAzLa,cA0LhCxa,IAAYM,KAAOka,GA1La,kBA6L9B3B,ICnOQyC,EATa3C,EAAc,eAErClB,EAAgBS,aAAc,SAAC/P,EAAOR,GACrC,OAAOA,EAAOjD,KAAKA,MAAQ,EAC5B,IAEH,ICTI6W,EAAyB,YAElBC,EAAmB,CAC9B/b,WAAW,GAAD,OAAK8b,EAAL,eACV7b,YAAY,GAAD,OAAK6b,EAAL,gBACXE,YAAY,GAAD,OAAKF,EAAL,iBC4BEG,EA1BU/C,GAAa,iBAAC,EAElC6C,EAAiB/b,YAAa,SAAC0I,GAC9B,OAAO,2BACFA,GADL,IAEEwT,WAAW,GAEd,IAPiC,YAAC,EAQlCH,EAAiBC,aAAc,SAACtT,GAC/B,OAAO,2BACFA,GADL,IAEEwT,WAAW,GAEd,IAbiC,YAAC,EAclCH,EAAiB9b,aAAc,SAACyI,GAC/B,OAAO,2BACFA,GADL,IAEEwT,WAAW,GAEd,IAnBiC,kBAJjB,CACnBA,WAAW,K,OCcPC,EAAe,CACnBC,cAAc,EACdC,gBAAgB,GAGZC,EAAgB,SAAC5T,EAAOR,GAC5B,OAAO,2BACFQ,GADL,IAEE6T,eAAgBrU,EAAOwB,KACvBC,gBAAiBzB,EAAOyB,gBACxBuS,WAAW,EACXE,cAAc,EACdpX,OAAQ,IAEX,EAEKwX,EAAoB,SAAC9T,EAAOR,GAChC,OAAO,uCACFQ,GACAyT,GAFL,IAGEnX,OAAQD,YAAsBmD,EAAOnF,WAAYmF,EAAOjD,KAAKA,MAC7DwX,SAAUvU,EAAOwB,OAASnJ,IAAYe,WAEzC,EAEKob,EAAuB,SAAChU,GAC5B,OAAO,uCACFA,GACAyT,GAFL,IAGEI,eAAgB,KAChBL,WAAW,EACXvS,gBAAiB,KACjB3E,OAAQ,IAEX,EA+Gc2X,GA7GMzD,GAAa,iBAAC,EAE9B3Y,IAAYE,MAAQ6b,GAFS,YAAC,EAG9B/b,IAAYK,KAAO0b,GAHU,YAAC,EAI9B/b,IAAYM,KAAOyb,GAJU,YAAC,EAM9B/b,IAAYW,SAAWsb,GANM,YAAC,EAO9Bjc,IAAYY,WAAaqb,GAPI,YAAC,EAQ9Bjc,IAAYc,UAAYmb,GARK,YAAC,EAS9Bjc,IAAYe,UAAYkb,GATK,YAAC,EAW9Bjc,IAAYmB,eAAiBgb,GAXA,YAAC,EAY9Bnc,IAAYoB,eAAiB+a,GAZA,YAAC,EAc9Bnc,IAAYC,KAAM,SAACkI,EAAOR,GACzB,OAAO,2BACFQ,GADL,IAEE6T,eAAgBrU,EAAOwB,KACvBC,gBAAiB,KACjBuS,WAAW,EACXE,cAAc,EACdpX,OAAQ,IAEX,IAvB6B,YAAC,EAwB9BzE,IAAYiB,QAAS,SAACkH,GAAD,mBAAC,eAClBA,GADiB,IAEpB2T,gBAAgB,GAFI,IAxBQ,YAAC,EA4B9B9b,IAAYG,QAAS,SAACgI,EAAOR,GAC5B,OAAO,2BACFQ,GADL,IAEE6T,eAAgBrU,EAAOwB,KACvBC,gBAAiBzB,EAAOyB,gBACxBiT,oBAAoB,GAEvB,IAnC6B,YAAC,EAqC9Brc,IAAYI,iBAAkB,SAAC+H,EAAOR,GACrC,OAAO,2BACFQ,GADL,IAEE6T,eAAgBrU,EAAOwB,KACvBmT,yBAAyB,GAE5B,IA3C6B,YAAC,EA6C9Btc,IAAYN,aAAc,SAACyI,GAC1B,OAAO,2BACFA,GADL,IAEEwT,WAAW,EACXlX,OAAQ,GACRuX,eAAgB,KAChB5S,gBAAiB,MAEpB,IArD6B,YAAC,EAuD9BpJ,IAAYqB,wBAAyB,SAAC8G,GACrC,OAAO,2BACFA,GADL,IAEEkU,oBAAoB,EACpBL,eAAgB,KAChB5S,gBAAiB,MAEpB,IA9D6B,YAAC,EAgE9BpJ,IAAYsB,6BAA8B,SAAC6G,GAC1C,OAAO,2BACFA,GADL,IAEEmU,yBAAyB,EACzBN,eAAgB,KAChB5S,gBAAiB,MAEpB,IAvE6B,YAAC,EAyE9BsN,IAAaC,gBAAiB,SAACxO,GAC9B,OAAO,2BACFA,GACAyT,EAEN,IA9E6B,YAAC,EAgF9B5b,IAAYU,gCAAiC,SAACyH,GAC7C,OAAO,2BACFA,GADL,IAEEmU,yBAAyB,EACzBN,eAAgB,MAEnB,IAtF6B,YAAC,EAwF9Bhc,IAAYQ,2BAA4B,SAAC2H,GACxC,OAAO,2BACFA,GADL,IAEEkU,oBAAoB,EACpBL,eAAgB,KAChB5S,gBAAiB,MAEpB,IA/F6B,YAAC,EAiG9BpJ,IAAYuB,4BAA6B,SAAC4G,GACzC,OAAO,2BACFA,GADL,IAEEoU,kBAAmBpU,EAAMoU,kBAE5B,IAtG6B,kBAjDb,CACnBF,oBAAoB,EACpBC,yBAAyB,EACzB7X,OAAQ,GACRoX,cAAc,EACdC,gBAAgB,EAChBH,WAAW,EACXK,eAAgB,KAChB5S,gBAAiB,KACjB8S,UAAU,EACVK,kBAAkB,K,SCfdC,GAAiB,CACrBC,UAAW,KACXC,OAAQ,KACRC,QAAS,KACTC,UAAW,KACXC,QAAS,KACTC,QAAS,QACTC,SAAU,KACVC,MAAO,KACPC,OAAQ,KACRC,MAAO,KACPC,QAAS,QACTC,OAAQ,KACRC,OAAQ,KACRC,MAAO,KACPC,MAAO,KACPC,UAAW,KACXC,WAAY,KACZC,QAAS,KACTC,SAAU,KACVC,OAAQ,KACRC,WAAY,KACZC,UAAW,KACXC,UAAW,KACXC,QAAS,QACTC,OAAQ,KACRC,SAAU,KACVC,QAAS,KACTC,OAAQ,KACRC,QAAS,KACTC,KAAM,KACNC,QAAS,KACTC,UAAW,KACXC,WAAY,KACZ,mBAAoB,QACpB,mBAAoB,MAGhBC,GAAkB,WAClBC,GAAiB,aACjBC,GAAgB,WAChBC,GAAe,aAGfC,GAAoB,CACxBC,GAAI,aACJC,GAAIH,GACJ,QAASA,GACT,QAASA,GACT,QAAS,aACT,QAASA,GACT,QAASA,GACT,QAASA,GACT,QAASA,GACT,QAASA,GACT,QAASA,GACT,QAAS,aACT,QAASA,GACT,QAASA,GACT,QAAS,WACT,QAASA,GACT,QAAS,aACT,QAASA,GACTI,GAAI,YACJC,GAAI,WACJC,GAAIN,GACJO,GAAI,WACJC,GAAI,aACJC,GAAI,aACJC,GAAIX,GACJ,SAAUD,GACV,QAAS,YACT,QAASE,GACT,QAASA,GACT,QAASA,GACT,QAASA,GACT,QAAS,aACT,QAASA,GACT,QAASD,GACT,QAAS,YACT,QAASF,GACT,QAASE,GACT,QAASC,GACT,QAASH,GACT,QAAS,aACT,QAASA,GACTc,GAAIX,GACJ,QAASA,GACT,QAASA,GACT,QAAS,aACT,QAASA,GACT,QAASA,GACT,QAASA,GACT,QAASA,GACT,QAASA,GACT,QAASA,GACT,QAASA,GACT,QAASA,GACT,QAASA,GACT,QAASF,GACT,QAASE,GACT,QAASA,GACT,QAASA,GACT,QAASA,GACT,QAASH,GACT,QAASG,GACT,QAASA,GACT,QAAS,YACT,QAAS,aACT,QAASF,GACTc,GAAIZ,GACJ,QAAS,YACT,QAAS,aACT,QAAS,aACT,QAASA,GACT,QAASA,GACT,QAASA,GACTa,GAAI,aACJC,GAAI,YACJ,QAAS,YACT,QAAS,WACTC,GAAI,gBAC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","file":"static/js/main.2e2bd4d1.chunk.js","sourcesContent":["const columnsActionsPrefix = \"columns\";\n\nexport const columnsActions = {\n  MODAL_OPEN: `${columnsActionsPrefix}/modal`,\n  MODAL_CLOSE: `${columnsActionsPrefix}/modal-close`,\n  TOGGLE_VISIBLE_COLUMN: `${columnsActionsPrefix}/toggle-visible-column`,\n  SELECT_ALL_OR_NONE: `${columnsActionsPrefix}/visibility-all-or-none`,\n  ORDERING_CHANGE: `${columnsActionsPrefix}/ordering-change`,\n  RESET_ORDERING: `${columnsActionsPrefix}/reset-ordering`,\n};\n","const formActionsPrefix = \"form\";\n\nexport const formActions = {\n  ADD: `${formActionsPrefix}/add`,\n  CLONE: `${formActionsPrefix}/clone`,\n  DELETE: `${formActionsPrefix}/delete`,\n  DELETE_MULTIPLE: `${formActionsPrefix}/delete-multiple`,\n  EDIT: `${formActionsPrefix}/edit`,\n  READ: `${formActionsPrefix}/read`,\n\n  DELETE_ACTION_ONE: `${formActionsPrefix}/delete-action-one`,\n  DELETE_ACTION_ONE_SUCCESS: `${formActionsPrefix}/delete-action-one-success`,\n\n  DELETE_ACTION_MULTIPLE: `${formActionsPrefix}/delete-action-multiple`,\n  DELETE_ACTION_MULTIPLE_SUCCESS: `${formActionsPrefix}/delete-action-multiple-success`,\n\n  ADD_LOAD: `${formActionsPrefix}/add-load`,\n  CLONE_LOAD: `${formActionsPrefix}/clone-load`,\n  DELETE_LOAD: `${formActionsPrefix}/delete-load`,\n  EDIT_LOAD: `${formActionsPrefix}/edit-load`,\n  READ_LOAD: `${formActionsPrefix}/read-load`,\n\n  INSERT: `${formActionsPrefix}/insert`,\n  UPDATE: `${formActionsPrefix}/update`,\n  REMOVE_ONE: `${formActionsPrefix}/remove-one`,\n\n  INSERT_SUCCESS: `${formActionsPrefix}/insert-success`,\n  UPDATE_SUCCESS: `${formActionsPrefix}/update-success`,\n\n  MODAL_CLOSE: `${formActionsPrefix}/modal-close`,\n  DELETE_ONE_MODAL_CLOSE: `${formActionsPrefix}/delete-one-modal-close`,\n  DELETE_MULTIPLE_MODAL_CLOSE: `${formActionsPrefix}/delete-multiple-modal-close`,\n\n  TOGGLE_CLOSE_MODAL_ON_SAVE: `${formActionsPrefix}/toggle-close-modal-on-save`,\n};\n","export const EVENT_SET_FIELD_VALUE = \"gcrud.set.field-value\";\n\nexport const publishEvent = (eventName, payload = {}) => {\n  window.dispatchEvent(\n    new CustomEvent(eventName, {\n      detail: payload,\n    })\n  );\n};\n\nexport const subscribeEvent = (eventName, callback) => {\n  window.addEventListener(eventName, callback);\n};\n\nexport const unsubscribeEvent = (eventName, callback) => {\n  window.removeEventListener(eventName, callback);\n};\n","import { fieldTypes } from \"../constants/field-types\";\n\nexport function fieldTypesGroupingPerOperation(rawData) {\n  let groupedFieldTypes = {\n    fieldTypes: [],\n    fieldTypesAddForm: [],\n    fieldTypesCloneForm: [],\n    fieldTypesColumns: [],\n    fieldTypesEditForm: [],\n    fieldTypesReadForm: [],\n  };\n\n  const fieldTypesMapping = {\n    columns: \"fieldTypesColumns\",\n    addFields: \"fieldTypesAddForm\",\n    editFields: \"fieldTypesEditForm\",\n    cloneFields: \"fieldTypesCloneForm\",\n    readFields: \"fieldTypesReadForm\",\n  };\n\n  const readOnlyOperationsMapping = {\n    fieldTypesAddForm: \"readOnlyAddFields\",\n    fieldTypesEditForm: \"readOnlyEditFields\",\n    fieldTypesCloneForm: \"readOnlyCloneFields\",\n  };\n\n  // Just adding some extra data to the default field types\n  Object.keys(rawData.fieldTypes).forEach((fieldName) => {\n    const fieldTypeData = rawData.fieldTypes[fieldName];\n\n    if (fieldTypeData.dataType === fieldTypes.INVISIBLE) {\n      return true;\n    }\n\n    groupedFieldTypes.fieldTypes.push({\n      fieldName: fieldName,\n      ...fieldTypeData,\n    });\n  });\n\n  Object.keys(fieldTypesMapping).forEach((fieldTypeName) => {\n    const fieldTypeDataName = fieldTypesMapping[fieldTypeName];\n\n    rawData[fieldTypeName].forEach((fieldData) => {\n      const currentFieldTypeData = rawData[fieldTypeDataName][fieldData.name]\n        ? rawData[fieldTypeDataName][fieldData.name]\n        : rawData.fieldTypes[fieldData.name];\n\n      // Skipping the check for \"fieldTypesColumns\" as this will be filtered within the reducer later\n      // This is the only exception as we have a duplication of the same data (e.g. fieldTypesColumns and columns)\n      // for a quicker access to ordering columns and columns visibility\n      if (\n        fieldTypeDataName !== fieldTypesMapping.columns &&\n        currentFieldTypeData.dataType === fieldTypes.INVISIBLE\n      ) {\n        return true;\n      }\n\n      groupedFieldTypes[fieldTypeDataName].push({\n        fieldName: fieldData.name,\n        displayAs: fieldData.displayAs,\n        ...currentFieldTypeData,\n      });\n    });\n  });\n\n  Object.keys(readOnlyOperationsMapping).forEach((fieldTypeOperationName) => {\n    const readOnlyOperationName =\n      readOnlyOperationsMapping[fieldTypeOperationName];\n\n    // For optimizing reason since usually we are not using readOnly fields\n    if (rawData[readOnlyOperationName].length > 0) {\n      groupedFieldTypes[fieldTypeOperationName].forEach(\n        (fieldData, fieldName) => {\n          if (rawData[readOnlyOperationName].includes(fieldData.fieldName)) {\n            groupedFieldTypes[fieldTypeOperationName][\n              fieldName\n            ].isReadOnly = true;\n          }\n        }\n      );\n    }\n  });\n\n  return groupedFieldTypes;\n}\n\nexport function addValuesToFieldTypes(fields, data) {\n  let mergedFieldTypes = [];\n  let dependencyFields = {};\n\n  fields.forEach((field) => {\n    switch (field.dataType) {\n      case fieldTypes.RELATIONAL:\n      case fieldTypes.RELATIONAL_NATIVE:\n      case fieldTypes.DEPENDED_RELATIONAL: {\n        if (field.options && field.options.dependedFrom) {\n          field.options.dependedFrom.forEach((dependencyField) => {\n            dependencyFields[dependencyField] = true;\n          });\n        }\n\n        break;\n      }\n      default: {\n        dependencyFields[field.fieldName] = false;\n        break;\n      }\n    }\n  });\n\n  fields.forEach((field) => {\n    let fieldValue;\n    let valueLabel = null;\n    const { fieldName } = field;\n\n    switch (field.dataType) {\n      case fieldTypes.RELATIONAL_N_N_NATIVE:\n      case fieldTypes.RELATIONAL_N_N: {\n        fieldValue = data[fieldName] ? data[fieldName] : [];\n        break;\n      }\n      case fieldTypes.DEPENDED_RELATIONAL: {\n        fieldValue = data[fieldName] ? data[fieldName].value : \"\";\n        break;\n      }\n      case fieldTypes.DYNAMIC_RELATION: {\n        fieldValue = data[fieldName] ? data[fieldName].value : \"\";\n        valueLabel = data[fieldName] ? data[fieldName].label : \"\";\n        break;\n      }\n      default: {\n        fieldValue = data[fieldName] ? data[fieldName] : \"\";\n      }\n    }\n\n    mergedFieldTypes.push({\n      ...field,\n      isDependencyField: dependencyFields[fieldName] === true,\n      fieldValue,\n      valueLabel,\n    });\n  });\n\n  return mergedFieldTypes;\n}\n\nexport function formSubmitTransformation(data, formFields = []) {\n  let dataToSubmit = {};\n\n  // Just to save some loops, we are adding all the field types into an object for quick access\n  let fieldTypesByFieldName = {};\n\n  formFields.forEach((field) => {\n    fieldTypesByFieldName[field.fieldName] = field.dataType;\n  });\n\n  Object.keys(data).forEach((fieldName) => {\n    const fieldValue = data[fieldName];\n\n    switch (fieldTypesByFieldName[fieldName]) {\n      case fieldTypes.MULTISELECT_NATIVE:\n      case fieldTypes.MULTISELECT_SEARCHABLE: {\n        dataToSubmit[fieldName] = Array.isArray(fieldValue)\n          ? fieldValue.join(\",\")\n          : fieldValue;\n        break;\n      }\n\n      case fieldTypes.BACKEND_CALLBACK: {\n        const fieldFromDom = document.querySelector(\n          `.grocery-crud input[name=${fieldName}], .grocery-crud select[name=${fieldName}], .grocery-crud textarea[name=${fieldName}]`\n        );\n        if (fieldFromDom !== null) {\n          dataToSubmit[fieldName] = fieldFromDom.value;\n        } else {\n          dataToSubmit[fieldName] = \"\";\n        }\n        break;\n      }\n\n      default: {\n        dataToSubmit[fieldName] = fieldValue;\n        break;\n      }\n    }\n  });\n\n  return dataToSubmit;\n}\n","import memoizeOne from \"memoize-one\";\nimport isDeepEqual from \"lodash/isEqual\";\nimport { formActions } from \"../actions/form-actions\";\nimport { configurationActions } from \"../actions/configuration-actions\";\n\nconst encodeDataObjectToArrayOfGetParameters = (data) => {\n  const finalUrlAsArray = [];\n  Object.keys(data).forEach((queryParameter) => {\n    if (\n      typeof data[queryParameter] === \"object\" &&\n      data[queryParameter] !== null\n    ) {\n      Object.keys(data[queryParameter]).forEach((subQueryParameter) => {\n        // TODO: Refactor those multi-level arrays to a single level loop with a function as it is\n        //       very difficult to read or change the code\n        if (\n          typeof data[queryParameter][subQueryParameter] === \"object\" &&\n          data[queryParameter][subQueryParameter] !== null\n        ) {\n          Object.keys(data[queryParameter][subQueryParameter]).forEach(\n            (subSubQueryParameter) => {\n              let value =\n                data[queryParameter][subQueryParameter][subSubQueryParameter];\n              let name = `${queryParameter}[${subQueryParameter}][${subSubQueryParameter}]`;\n\n              if (\n                typeof value === \"object\" &&\n                value !== null &&\n                value.key !== undefined\n              ) {\n                // TODO: We need to remove this tech debt\n                value = encodeURIComponent(value.key);\n              } else {\n                value = encodeURIComponent(value);\n              }\n\n              finalUrlAsArray.push(`${name}=${value}`);\n            }\n          );\n        } else {\n          finalUrlAsArray.push(\n            queryParameter +\n              \"[\" +\n              subQueryParameter +\n              \"]=\" +\n              encodeURIComponent(data[queryParameter][subQueryParameter])\n          );\n        }\n      });\n    } else {\n      finalUrlAsArray.push(\n        encodeURIComponent(queryParameter) +\n          \"=\" +\n          encodeURIComponent(data[queryParameter]).replace(/%7C/g, \"|\")\n      );\n    }\n  });\n  return finalUrlAsArray;\n};\n\nfunction encodeQueryData(data) {\n  return encodeDataObjectToArrayOfGetParameters(data).join(\"&\");\n}\n\nconst urlGenerator = (\n  actionUrlSegment,\n  {\n    apiUrl,\n    columnSearchValues,\n    sorting,\n    sortingFor,\n    visibleColumnsAsShortString,\n    extendedSearchData,\n  }\n) => {\n  let data = {\n    action: actionUrlSegment,\n    order_by: sortingFor,\n    sorting,\n    visible_columns: visibleColumnsAsShortString,\n  };\n\n  // We can't have both extended search data and quick column search at the same time\n  if (extendedSearchData.length > 0) {\n    data.extended_search = extendedSearchData;\n  } else {\n    data.search = columnSearchValues;\n  }\n\n  const queryData = encodeQueryData(data);\n\n  return `${apiUrl}?${queryData}`;\n};\n\nconst pdfExportUrlGenerator = (state) => {\n  return urlGenerator(\"export-pdf\", state);\n};\n\nconst excelExportUrlGenerator = (state) => {\n  return urlGenerator(\"export\", state);\n};\n\nconst printUrlGenerator = (state) => {\n  return urlGenerator(\"print\", state);\n};\n\nconst memoPdfExportUrlGenerator = memoizeOne(\n  pdfExportUrlGenerator,\n  isDeepEqual\n);\nconst memoExcelExportUrlGenerator = memoizeOne(\n  excelExportUrlGenerator,\n  isDeepEqual\n);\nconst memoPrintUrlGenerator = memoizeOne(printUrlGenerator, isDeepEqual);\n\nexport const pdfExportUrl = (state) => {\n  return memoPdfExportUrlGenerator(state);\n};\n\nexport const excelExportUrl = (state) => {\n  return memoExcelExportUrlGenerator(state);\n};\n\nexport const printUrl = (state) => {\n  return memoPrintUrlGenerator(state);\n};\n\nconst getPrimaryKeyValueFromUrlString = (url) => {\n  return url.match(/\\d+$/).slice(-1).pop();\n};\n\nexport const getReduxActionFromUrl = () => {\n  const currentUrl = window.location.href;\n\n  let type = null;\n  let primaryKeyValue = null;\n\n  if (/\\/add$/.test(currentUrl)) {\n    type = formActions.ADD;\n  } else if (/\\/edit\\/\\d+$/.test(currentUrl)) {\n    type = formActions.EDIT;\n    primaryKeyValue = getPrimaryKeyValueFromUrlString(currentUrl);\n  } else if (/\\/clone\\/\\d+$/.test(currentUrl)) {\n    type = formActions.CLONE;\n    primaryKeyValue = getPrimaryKeyValueFromUrlString(currentUrl);\n  } else if (/\\/read\\/\\d+$/.test(currentUrl)) {\n    type = formActions.READ;\n    primaryKeyValue = getPrimaryKeyValueFromUrlString(currentUrl);\n  }\n\n  return {\n    type,\n    ...(primaryKeyValue !== null ? { primaryKeyValue } : {}),\n    reason: configurationActions.INIT_SUCCESS,\n  };\n};\n\nexport const getBlobViewUrl = ({ apiUrl, fieldName, primaryKeyValue } = {}) => {\n  return `${apiUrl}?action=blob-view&field_name=${fieldName}&pk_value=${primaryKeyValue}`;\n};\n\nexport const getUploadOneViewUrl = ({ fieldOptions = {}, filename }) => {\n  return fieldOptions.publicPath ? `${fieldOptions.publicPath}${filename}` : \"\";\n};\n\nexport const getMultipleActionUrl = ({ button, selectedIds }) => {\n  return (\n    button.url +\n    button.querySeparator +\n    selectedIds\n      .map((selectedId) => `${button.idFieldQueryName}[]=${selectedId}`)\n      .join(\"&\")\n  );\n};\n","const FatalErrorMessage = () => {\n  return (\n    <div style={{ padding: \"10px\", border: \"1px solid red\" }}>\n      <p>Something went wrong!</p>\n\n      <p>\n        If you see this message... oh well... you shouldn't! This is an\n        unexpected JavaScript error. We are showing this message instead of\n        showing a completely blank page.\n      </p>\n\n      <p>\n        For more info about the specific error, please open the browser console\n        or speak with your IT administrator.\n      </p>\n    </div>\n  );\n};\n\nexport default FatalErrorMessage;\n","const dependedFieldsPrefix = \"depended-fields\";\n\nexport const dependedFieldsActions = {\n  UPDATE_DEPENDENCY: `${dependedFieldsPrefix}/update-dependency`,\n  UPDATE_PERMITTED_VALUES: `${dependedFieldsPrefix}/update-permitted-values`,\n};\n","const assetsUrl =\n  window?.GroceryCrudConfiguration?.assetsUrl || \"http://localhost:3000/\";\n\nconst themeMapping = {\n  \"bootstrap-v4\": {\n    url: `${assetsUrl}css/bootstrap-v4/bootstrap.css`,\n  },\n  \"bootstrap-v5\": {\n    dark: `${assetsUrl}css/bootstrap-v5/bootstrap-dark.css`,\n    mini: `${assetsUrl}css/bootstrap-v5/bootstrap-mini.css`,\n    url: `${assetsUrl}css/bootstrap-v5/bootstrap.min.css`,\n  },\n  \"grocery-crud-v1\": {\n    url: \"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.0/css/bootstrap-reboot.css\",\n  },\n  \"materialize-v1\": {\n    url: \"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\",\n  },\n  \"tailwind-v2\": {\n    url: \"https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css\",\n  },\n  \"font-awesome-v5\": {\n    url: `${assetsUrl}icons/font-awesome-v5/css/all.min.css`,\n  },\n  \"react-datepicker\": {\n    url: `${assetsUrl}css/react-datepicker/react-datepicker.min.css`,\n  },\n  \"react-quill-v2\": {\n    url: `${assetsUrl}/css/react-quill-v2/quill.snow.css`,\n  },\n};\n\nexport const loadCSS = (themeName, skinName) => {\n  const cssId = `gc-css-${themeName}`;\n\n  // Make sure that the theme doesn't already exist and that we actually have the theme listed\n  if (!document.getElementById(cssId) && themeMapping[themeName]) {\n    const head = document.getElementsByTagName(\"head\")[0];\n    const link = document.createElement(\"link\");\n    const theme = themeMapping[themeName];\n    link.id = cssId;\n    link.rel = \"stylesheet\";\n    link.referrerpolicy = \"no-referrer\";\n    if (skinName && theme[skinName]) {\n      link.href = theme[skinName];\n    } else {\n      link.href = theme.url;\n    }\n\n    head.appendChild(link);\n  }\n};\n","const columnsActionsPrefix = \"column-width\";\n\nexport const columnWidthActions = {\n  CHANGE_WIDTH: `${columnsActionsPrefix}/change-width`,\n  RESET_COLUMN_WIDTH: `${columnsActionsPrefix}/reset-column-width`,\n};\n","export const fieldTypes = {\n  BACKEND_CALLBACK: \"backend_callback\",\n  BLOB: \"special_blob\",\n  COLOR: \"color\",\n  DATE: \"date\",\n  DATETIME: \"datetime\",\n  DEPENDED_RELATIONAL: \"depended_relational\",\n  DROPDOWN: \"dropdown\",\n  DROPDOWN_SEARCH: \"dropdown_search\",\n  DYNAMIC_RELATION: \"dynamic-relation\",\n  EMAIL: \"email\",\n  ENUM: \"enum\",\n  ENUM_SEARCHABLE: \"enum_searchable\",\n  FLOAT: \"float\",\n  HIDDEN: \"hidden\",\n  INTEGER: \"int\",\n  INVISIBLE: \"invisible\",\n  MULTISELECT_NATIVE: \"multiselect_native\",\n  MULTISELECT_SEARCHABLE: \"multiselect_searchable\",\n  NATIVE_DATE: \"native_date\",\n  NATIVE_DATETIME: \"native_datetime\",\n  NATIVE_TIME: \"native_time\",\n  NATIVE_TIMESTAMP: \"native_timestamp\",\n  NUMERIC: \"numeric\",\n  PASSWORD: \"password\",\n  RELATIONAL: \"relational\",\n  RELATIONAL_NATIVE: \"relational_native\",\n  RELATIONAL_N_N: \"relational_n_n\",\n  RELATIONAL_N_N_NATIVE: \"native_relational_n_n\",\n  TEXT: \"varchar\",\n  TEXTAREA: \"text\",\n  TEXT_EDITOR: \"texteditor\",\n  TIME: \"time\",\n  TIMESTAMP: \"timestamp\",\n  UPLOAD: \"upload\",\n  UPLOAD_MULTIPLE: \"upload-multiple\",\n};\n","const masterDetailActionsPrefix = \"master-detail\";\n\nexport const masterDetailActions = {\n  OPEN_ROW: `${masterDetailActionsPrefix}/open-row`,\n  CLOSE_ROW: `${masterDetailActionsPrefix}/close-row`,\n};\n","import i18n from \"../../../utils/locale/i18n\";\n\nconst TextSelectOptions = () => {\n  return [\n    <option key=\"contains\" value=\"contains\">\n      {i18n.t(\"filtering_contains\")}\n    </option>,\n    <option key=\"starts_with\" value=\"starts_with\">\n      {i18n.t(\"filtering_starts_with\")}\n    </option>,\n    <option key=\"ends_with\" value=\"ends_with\">\n      {i18n.t(\"filtering_ends_with\")}\n    </option>,\n    <option key=\"equals\" value=\"equals\">\n      {i18n.t(\"filtering_equals\")}\n    </option>,\n    <option key=\"not_equals\" value=\"not_equals\">\n      {i18n.t(\"filtering_not_equals\")}\n    </option>,\n    <option key=\"is_empty\" value=\"is_empty\">\n      {i18n.t(\"filtering_is_empty\")}\n    </option>,\n    <option key=\"is_not_empty\" value=\"is_not_empty\">\n      {i18n.t(\"filtering_is_not_empty\")}\n    </option>,\n  ];\n};\n\nexport default TextSelectOptions;\n","import i18n from \"../../../utils/locale/i18n\";\n\nconst SelectOptionsEqualNotEqual = () => {\n  return [\n    <option key=\"equals\" value=\"equals\">\n      {i18n.t(\"filtering_equals\")}\n    </option>,\n    <option key=\"not_equals\" value=\"not_equals\">\n      {i18n.t(\"filtering_not_equals\")}\n    </option>,\n    <option key=\"is_empty\" value=\"is_empty\">\n      {i18n.t(\"filtering_is_empty\")}\n    </option>,\n    <option key=\"is_not_empty\" value=\"is_not_empty\">\n      {i18n.t(\"filtering_is_not_empty\")}\n    </option>,\n  ];\n};\n\nexport default SelectOptionsEqualNotEqual;\n","import i18n from \"../../../utils/locale/i18n\";\n\nconst ComparisonSelectOptions = () => {\n  return [\n    <option key=\"equals\" value=\"equals\">\n      {i18n.t(\"filtering_equals\")}\n    </option>,\n    <option key=\"not_equals\" value=\"not_equals\">\n      {i18n.t(\"filtering_not_equals\")}\n    </option>,\n    <option key=\"greater_than\" value=\"greater_than\">\n      {i18n.t(\"filtering_greater_than\")}\n    </option>,\n    <option key=\"less_than\" value=\"less_than\">\n      {i18n.t(\"filtering_less_than\")}\n    </option>,\n    <option key=\"greater_than_or_equal\" value=\"greater_than_or_equal\">\n      {i18n.t(\"filtering_greater_than_or_equal\")}\n    </option>,\n    <option key=\"less_than_or_equal\" value=\"less_than_or_equal\">\n      {i18n.t(\"filtering_less_than_or_equal\")}\n    </option>,\n    <option key=\"is_empty\" value=\"is_empty\">\n      {i18n.t(\"filtering_is_empty\")}\n    </option>,\n    <option key=\"is_not_empty\" value=\"is_not_empty\">\n      {i18n.t(\"filtering_is_not_empty\")}\n    </option>,\n  ];\n};\n\nexport default ComparisonSelectOptions;\n","import i18n from \"../../../utils/locale/i18n\";\n\nconst SelectOptionsHasOrNot = () => {\n  return [\n    <option key=\"has\" value=\"has\">\n      {i18n.t(\"filtering_has\")}\n    </option>,\n    <option key=\"does_not_have\" value=\"does_not_have\">\n      {i18n.t(\"filtering_does_not_have\")}\n    </option>,\n    <option key=\"is_empty\" value=\"is_empty\">\n      {i18n.t(\"filtering_is_empty\")}\n    </option>,\n    <option key=\"is_not_empty\" value=\"is_not_empty\">\n      {i18n.t(\"filtering_is_not_empty\")}\n    </option>,\n  ];\n};\n\nexport default SelectOptionsHasOrNot;\n","import TextSelectOptions from \"../components/filtering/select-options/text\";\nimport SelectOptionsEqualNotEqual from \"../components/filtering/select-options/equal_not_equal\";\nimport ComparisonSelectOptions from \"../components/filtering/select-options/comparison\";\nimport SelectOptionsHasOrNot from \"../components/filtering/select-options/has_or_not\";\nimport { fieldTypes } from \"../constants/field-types\";\n\nexport const emptyFilterMapping = {\n  is_empty: true,\n  is_not_empty: true,\n};\n\nconst {\n  BACKEND_CALLBACK,\n  COLOR,\n  DATE,\n  DATETIME,\n  DEPENDED_RELATIONAL,\n  DROPDOWN,\n  DROPDOWN_SEARCH,\n  DYNAMIC_RELATION,\n  ENUM,\n  ENUM_SEARCHABLE,\n  INTEGER,\n  MULTISELECT_NATIVE,\n  MULTISELECT_SEARCHABLE,\n  NATIVE_DATE,\n  NATIVE_DATETIME,\n  NATIVE_TIME,\n  NATIVE_TIMESTAMP,\n  NUMERIC,\n  RELATIONAL,\n  RELATIONAL_NATIVE,\n  RELATIONAL_N_N,\n  RELATIONAL_N_N_NATIVE,\n  TEXT,\n  TIME,\n  TIMESTAMP,\n} = fieldTypes;\n\nconst fieldTypesAlwaysToRefreshMapping = {\n  [DEPENDED_RELATIONAL]: true,\n  [DROPDOWN]: true,\n  [DROPDOWN_SEARCH]: true,\n  [ENUM]: true,\n  [ENUM_SEARCHABLE]: true,\n  [RELATIONAL]: true,\n  [RELATIONAL_NATIVE]: true,\n  [RELATIONAL_N_N]: true,\n  [RELATIONAL_N_N_NATIVE]: true,\n};\n\nconst comparisonValueMapping = {\n  [BACKEND_CALLBACK]: \"contains\",\n  [COLOR]: \"contains\",\n  [DATETIME]: \"equals\",\n  [DATE]: \"equals\",\n  [DEPENDED_RELATIONAL]: \"equals\",\n  [DROPDOWN]: \"equals\",\n  [DROPDOWN_SEARCH]: \"equals\",\n  [DYNAMIC_RELATION]: \"equals\",\n  [ENUM]: \"equals\",\n  [ENUM_SEARCHABLE]: \"equals\",\n  [INTEGER]: \"equals\",\n  [MULTISELECT_NATIVE]: \"has\",\n  [MULTISELECT_SEARCHABLE]: \"has\",\n  [NATIVE_DATETIME]: \"equals\",\n  [NATIVE_DATE]: \"equals\",\n  [NATIVE_TIMESTAMP]: \"equals\",\n  [NATIVE_TIME]: \"equals\",\n  [NUMERIC]: \"equals\",\n  [RELATIONAL]: \"equals\",\n  [RELATIONAL_NATIVE]: \"equals\",\n  [RELATIONAL_N_N]: \"has\",\n  [RELATIONAL_N_N_NATIVE]: \"has\",\n  [TEXT]: \"contains\",\n  [TIMESTAMP]: \"equals\",\n  [TIME]: \"equals\",\n};\n\nconst selectOptionsComponentMapping = {\n  [BACKEND_CALLBACK]: TextSelectOptions,\n  [COLOR]: SelectOptionsEqualNotEqual,\n  [DATETIME]: ComparisonSelectOptions,\n  [DATE]: ComparisonSelectOptions,\n  [DROPDOWN]: SelectOptionsEqualNotEqual,\n  [DROPDOWN_SEARCH]: SelectOptionsEqualNotEqual,\n  [ENUM]: SelectOptionsEqualNotEqual,\n  [ENUM_SEARCHABLE]: SelectOptionsEqualNotEqual,\n  [INTEGER]: ComparisonSelectOptions,\n  [MULTISELECT_NATIVE]: SelectOptionsHasOrNot,\n  [MULTISELECT_SEARCHABLE]: SelectOptionsHasOrNot,\n  [NATIVE_DATETIME]: ComparisonSelectOptions,\n  [NATIVE_DATE]: ComparisonSelectOptions,\n  [NATIVE_TIMESTAMP]: ComparisonSelectOptions,\n  [NATIVE_TIME]: ComparisonSelectOptions,\n  [NUMERIC]: ComparisonSelectOptions,\n  [RELATIONAL]: SelectOptionsEqualNotEqual,\n  [RELATIONAL_NATIVE]: SelectOptionsEqualNotEqual,\n  [RELATIONAL_N_N]: SelectOptionsHasOrNot,\n  [RELATIONAL_N_N_NATIVE]: SelectOptionsHasOrNot,\n  [TEXT]: TextSelectOptions,\n  [TIMESTAMP]: ComparisonSelectOptions,\n  [TIME]: ComparisonSelectOptions,\n};\n\nexport const getSelectOptionsComponentFromDataType = (dataType) => {\n  if (selectOptionsComponentMapping[dataType]) {\n    return selectOptionsComponentMapping[dataType];\n  }\n  return TextSelectOptions;\n};\n\nexport function getFilterValueFromDataType(dataType) {\n  if (comparisonValueMapping[dataType]) {\n    return comparisonValueMapping[dataType];\n  }\n\n  return comparisonValueMapping[\"varchar\"];\n}\n\n/**\n *\n * @param string oldDataType\n * @param string newDataType\n * @returns {boolean}\n */\nexport function doTriggerFilterRefresh(oldDataType, newDataType) {\n  if (fieldTypesAlwaysToRefreshMapping[newDataType]) {\n    return true;\n  }\n\n  return oldDataType !== newDataType;\n}\n\n/**\n *\n * @param string oldValue\n * @param string newValue\n * @returns {boolean}\n */\nexport function doTriggerFilterValueRefresh(oldValue, newValue) {\n  // trigger only when we have different values of an empty or non-empty filter value\n  return emptyFilterMapping[oldValue] !== emptyFilterMapping[newValue];\n}\n\n/**\n *\n * @param array data\n * @returns {*[]}\n */\nexport function transformExtendedSearchData(data) {\n  let transformedData = [];\n  data.forEach((searchData) => {\n    transformedData.push({\n      ...searchData,\n      value:\n        typeof searchData.value === \"object\" && searchData.value !== null\n          ? searchData.value.key\n          : searchData.value,\n    });\n  });\n  return transformedData;\n}\n","export const deepCloneArray = (arrayToClone) => {\n  return JSON.parse(JSON.stringify(arrayToClone));\n};\n// a little function to help us with reordering the result\nexport const simpleReorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n","export const UPLOAD_FILE_NAME_PREFIX = \"__gcrud_upload\";\nexport const CSS_VARIABLE_PREFIX = \"--gc-\";\n","const searchAsyncPrefix = \"search-async\";\n\nexport const searchAsyncActions = {\n  SEARCH: `${searchAsyncPrefix}/search`,\n};\n","export const languageEnglish = {\n  action_delete: \"Delete\",\n  actions: \"Actions\",\n  add_item: \"Add {subject}\",\n  browse_file: \"browse\",\n  cancel: \"Cancel\",\n  clear_cache: \"Clear cache\",\n  clear_filtering: \"Clear filtering\",\n  clone: \"Clone\",\n  close_modal: \"Close\",\n  close_modal_on_save: \"Close modal on save\",\n  column_width_drag: \"Drag the edges of any column below to change the width\",\n  columns: \"Columns\",\n  confirm_delete: \"Are you sure that you want to delete this item?\",\n  confirm_delete_multiple:\n    \"Are you sure that you want to delete those {items_amount} items?\",\n  edit: \"Edit\",\n  edit_item: \"Edit {subject}\",\n  enter_x_or_more_characters:\n    \"Please enter {remaining_chars} or more characters\",\n  error_empty_response:\n    \"The server returned an empty response (e.g. a blank page).\",\n  error_generic_title: \"Something went wrong!\",\n  error_message: \"Message\",\n  error_server_response: \"Server Response\",\n  error_text: \"Error\",\n  error_unknown_response: \"We can't process the response of the server.\",\n  experimental_feature_short: \"BETA\",\n  export_to_file: \"Export\",\n  filtering_add_more: \"Add more\",\n  filtering_and_statement: \"AND\",\n  filtering_cancel: \"Cancel\",\n  filtering_contains: \"contains\",\n  filtering_does_not_have: \"does not have\",\n  filtering_ends_with: \"ends with\",\n  filtering_equals: \"equals\",\n  filtering_filter_plural: \"Filters\",\n  filtering_filter_single: \"Filter\",\n  filtering_filter_text: \"Filter\",\n  filtering_greater_than: \"greater than\",\n  filtering_greater_than_or_equal: \"greater than or equal\",\n  filtering_has: \"has\",\n  filtering_is_empty: \"is empty\",\n  filtering_is_not_empty: \"is not empty\",\n  filtering_less_than: \"less than\",\n  filtering_less_than_or_equal: \"less than or equal\",\n  filtering_not_equals: \"not equals\",\n  filtering_operator: \"Operator\",\n  filtering_or_statement: \"OR\",\n  filtering_remove_filter: \"Remove filter\",\n  filtering_remove_filters: \"Remove filters\",\n  filtering_starts_with: \"starts with\",\n  filtering_text: \"Filtering\",\n  loading: \"Loading...\",\n  modal_save: \"Save changes\",\n  more: \"More\",\n  ordering_drag: \"Drag a column to change their ordering\",\n  paging_displaying: \"Displaying {start} to {end} of {results} items\",\n  paging_filtered_from: \"(filtered from {total_results} total entries)\",\n  paging_show_entries: \"Show {paging} entries\",\n  preview_as_html: \"Preview as HTML\",\n  preview_as_plain_text: \"Preview as plain text\",\n  print: \"Print\",\n  quick_search: \"Quick Search\",\n  refresh: \"Refresh\",\n  reset_column_width: \"Reset all column widths\",\n  reset_ordering: \"Reset ordering\",\n  select_all: \"Select All\",\n  select_an_option: \"Select an option\",\n  select_some_options: \"Select some options\",\n  settings: \"Settings\",\n  subject: \"Item\",\n  subject_plural: \"Items\",\n  tab_ordering: \"Ordering\",\n  tab_visibility: \"Visibility\",\n  tab_width: \"Width\",\n  time_hour_text: \"Hour\",\n  time_minute_text: \"Minute\",\n  time_second_text: \"Second\",\n  time_text: \"Time\",\n  upload_attach_file: \"Drop files to attach, or {browse_file}\",\n  view: \"View\",\n  view_item: \"View {subject}\",\n};\n","import localForage from \"localforage\";\nimport { languageEnglish } from \"./language-english\";\n\nclass translationsLibrary {\n  translations = {};\n  debug = false;\n\n  constructor() {\n    // Always making sure that we have at least English as a fallback\n    this.translations = languageEnglish;\n\n    // try to get any value from localForage\n    // so we will not have an empty translation object at the very beginning\n    localForage.getItem(\"gc-i18n\").then((translationsFromLocalForage) => {\n      if (translationsFromLocalForage !== null) {\n        this.translations = translationsFromLocalForage;\n      }\n    });\n  }\n\n  init(translationsObject) {\n    this.translations = translationsObject;\n\n    localForage\n      .setItem(\"gc-i18n\", {\n        ...translationsObject,\n        subject: \"\",\n        subject_plural: \"\",\n      })\n      .catch(() => {\n        console.warn(\"Cannot set item in localForage for gc-i18n\");\n      });\n  }\n\n  t(translation) {\n    // When we are in debug mode, just return the key without the translation\n    if (this.debug) {\n      return translation;\n    }\n\n    if (this.translations[translation]) {\n      return this.translations[translation];\n    }\n    return \"\";\n  }\n\n  format(strRaw, args) {\n    let str = strRaw;\n    if (!args && !args.length) {\n      return str;\n    }\n    Object.keys(args).forEach((argName) => {\n      str = str.replace(RegExp(\"\\\\{\" + argName + \"\\\\}\", \"gi\"), args[argName]);\n    });\n    return str;\n  }\n}\n\nconst i18n = new translationsLibrary();\n\nexport default i18n;\n","const errorActionsPrefix = \"error\";\n\nexport const errorActions = {\n  RESPONSE_ERROR: `${errorActionsPrefix}/response`,\n  JAVASCRIPT_ERROR: `${errorActionsPrefix}/javascript`,\n\n  MODAL_CLOSE: `${errorActionsPrefix}/modal-close`,\n};\n","const configurationActionsPrefix = \"configuration\";\n\nexport const configurationActions = {\n  DATAGRID_FETCH: `${configurationActionsPrefix}/datagrid-fetch`,\n  DATAGRID_LOAD_FAILURE: `${configurationActionsPrefix}/datagrid-failure`,\n  DATAGRID_LOAD_SUCCESS: `${configurationActionsPrefix}/datagrid-success`,\n  INIT_FETCH: `${configurationActionsPrefix}/init-fetch`,\n  MAIN_CONFIGURATION: `${configurationActionsPrefix}/main-configuration`,\n  INIT_FAILURE: `${configurationActionsPrefix}/init-failure`,\n  INIT_SUCCESS: `${configurationActionsPrefix}/init`,\n\n  // For testing purposes only\n  SET_OPEN_IN_MODAL: `${configurationActionsPrefix}/set-open-in-modal`,\n  SET_URL_HISTORY: `${configurationActionsPrefix}/set-url-history`,\n};\n","export const persistConstants = {\n  blacklistedKeys: [\n    \"columns\",\n    \"datagridRows\",\n    \"dependedRelation\",\n    \"error\",\n    \"filtering\",\n    \"form\",\n    \"configuration\",\n    \"loading\",\n    \"masterDetail\",\n  ],\n};\n","const datagridActionsPrefix = \"datagrid\";\n\nexport const datagridActions = {\n  CLEAR_CACHE: `${datagridActionsPrefix}/clear-cache`,\n  CLEAR_FILTERING: `${datagridActionsPrefix}/clear-filtering`,\n  COLUMNS_MODAL_CLOSE: `${datagridActionsPrefix}/columns-modal-close`,\n  COLUMNS_MODAL_OPEN: `${datagridActionsPrefix}/columns-modal`,\n  COLUMN_ORDERING: `${datagridActionsPrefix}/column-ordering`,\n  COLUMN_SEARCH: `${datagridActionsPrefix}/column-search`,\n  DATA_FAILURE: `${datagridActionsPrefix}/data-failure`,\n  DATA_FETCH: `${datagridActionsPrefix}/data-fetch`,\n  DATA_RENDER: `${datagridActionsPrefix}/data-render`,\n  ORDERING_RESET: `${datagridActionsPrefix}/ordering-reset`,\n  PAGE_CHANGE: `${datagridActionsPrefix}/page-change`,\n  PER_PAGE_CHANGE: `${datagridActionsPrefix}/per-page-change`,\n  READY: `${datagridActionsPrefix}/ready`,\n  REHYDRATE_VALIDATION: `${datagridActionsPrefix}/REHYDRATE_VALIDATION`,\n  SELECT_ROWS: `${datagridActionsPrefix}/select-rows`,\n  SELECT_ROW_ALL_OR_NONE: `${datagridActionsPrefix}/select-rows-all-or-none`,\n  SELECT_ROW_TOGGLE: `${datagridActionsPrefix}/select-row-toggle`,\n};\n","export const handleActions = (handlers, initialState) => {\n  return (state, action) => {\n    if (state === undefined) {\n      return initialState;\n    }\n\n    if (handlers[action.type] !== undefined) {\n      // we trust that we will add a function. We are skipping the extra step to check if this is a function\n      // for optimizing\n      return handlers[action.type](state, action);\n    }\n\n    return state;\n  };\n};\n","import memoizeOne from \"memoize-one\";\nimport isDeepEqual from \"lodash/isEqual\";\n\nconst visibleColumnsWithDetails = (\n  columnsWithDetails,\n  visibleColumns,\n  orderedColumns\n) => {\n  if (!columnsWithDetails || !visibleColumns || !orderedColumns) {\n    return [];\n  }\n  let detailedColumns = [];\n  orderedColumns.forEach((columnName) => {\n    // We are only returning the visible columns\n    if (!visibleColumns.includes(columnName)) {\n      return true;\n    }\n\n    const detailedColumn = columnsWithDetails.find(\n      (column) => column.name === columnName\n    );\n\n    if (detailedColumn) {\n      detailedColumns.push(detailedColumn);\n    }\n  });\n\n  return detailedColumns;\n};\n\nconst memoVisibleColumnsWithDetails = memoizeOne(\n  visibleColumnsWithDetails,\n  isDeepEqual\n);\n\nexport const getVisibleColumnsWithDetails = (\n  columnsWithDetails,\n  visibleColumns,\n  orderedColumns\n) => {\n  return memoVisibleColumnsWithDetails(\n    columnsWithDetails,\n    visibleColumns,\n    orderedColumns\n  );\n};\n\nconst transformVisibleColumnsToShortString = (columns, visibleColumns) => {\n  if (!columns || !visibleColumns) {\n    return \"\";\n  }\n  let visibleColumnsIndexes = [];\n  columns.forEach((column, columnIndex) => {\n    if (\n      visibleColumns.find((visibleColumn) => visibleColumn === column.name) !==\n      undefined\n    ) {\n      visibleColumnsIndexes.push(columnIndex);\n    }\n  });\n\n  return visibleColumnsIndexes.join(\"|\");\n};\n\nconst memoGetVisibleColumnsAsShortString = memoizeOne(\n  transformVisibleColumnsToShortString,\n  isDeepEqual\n);\n\nexport const getVisibleColumnsAsShortString = (columns, visibleColumns) => {\n  return memoGetVisibleColumnsAsShortString(columns, visibleColumns);\n};\n\nexport const getColumnsWithData = (columns, fieldTypes) => {\n  return columns\n    .map((column) => {\n      const columnData = fieldTypes.find(\n        (columnData) => columnData.fieldName === column.name\n      );\n      return {\n        ...column,\n        ...columnData,\n      };\n    })\n    .filter((column) => column.dataType !== fieldTypes.INVISIBLE);\n};\n","import { datagridActions } from \"../actions/datagrid-actions\";\nimport { configurationActions } from \"../actions/configuration-actions\";\nimport { columnsActions } from \"../actions/columns-actions\";\nimport { handleActions } from \"../utils/redux-helper\";\nimport { formActions } from \"../actions/form-actions\";\nimport { simpleReorder } from \"../utils/array-helper\";\nimport { fieldTypesGroupingPerOperation } from \"../utils/form-fields\";\nimport { getColumnsWithData } from \"../utils/columns\";\n\nconst initialState = {\n  filteredTotalEntries: 0,\n  lastPage: 1,\n  orderBy: \"\",\n  page: 1,\n  perPage: 10,\n  sorting: \"\",\n  sortingFor: \"\",\n  totalEntries: 0,\n  visibleColumns: [],\n  orderedColumns: [],\n  lastPrimaryKeyValue: null,\n};\n\nconst cleanFilteringState = {\n  page: 1,\n};\n\nconst cleanOrderingState = {\n  sorting: \"\",\n  sortingFor: \"\",\n  page: 1,\n};\n\nconst clearLastPrimaryKeyValue = (state) => {\n  return {\n    ...state,\n    lastPrimaryKeyValue: null,\n  };\n};\n\nconst resetOrderedColumns = (columns) => {\n  let orderedColumns = [];\n\n  columns.forEach((column) => {\n    orderedColumns.push(column.name);\n  });\n\n  return orderedColumns;\n};\n\nconst datagridReducer = handleActions(\n  {\n    [configurationActions.INIT_SUCCESS]: (state, action) => {\n      const { columns } = action.data;\n\n      const groupedFieldTypes = fieldTypesGroupingPerOperation(action.data);\n\n      return {\n        ...state,\n        // As visible and ordered columns is a user behavior, show us the default visible columns only when\n        // we don't already have visible columns fields into our state\n        visibleColumns:\n          state.visibleColumns.length === 0\n            ? getColumnsWithData(\n                columns,\n                groupedFieldTypes.fieldTypesColumns\n              ).map((column) => column.name)\n            : state.visibleColumns,\n        orderedColumns:\n          state.orderedColumns.length === 0\n            ? getColumnsWithData(\n                columns,\n                groupedFieldTypes.fieldTypesColumns\n              ).map((column) => column.name)\n            : state.orderedColumns,\n      };\n    },\n\n    [columnsActions.SELECT_ALL_OR_NONE]: (state, action) => {\n      const { columns } = action;\n      const { visibleColumns } = state;\n\n      // All the columns are selected hence we have a toggle of that\n      if (columns.length === visibleColumns.length) {\n        return {\n          ...state,\n          visibleColumns: [],\n        };\n      }\n\n      return {\n        ...state,\n        visibleColumns: columns.map((column) => column.name),\n      };\n    },\n\n    [columnsActions.TOGGLE_VISIBLE_COLUMN]: (state, action) => {\n      const { columnName, columns } = action;\n      const { visibleColumns } = state;\n\n      const orderedColumns = columns.map((column) => column.name);\n      let transformedVisibleColumns = [];\n\n      if (visibleColumns.includes(columnName)) {\n        transformedVisibleColumns = visibleColumns.filter(\n          (column) => column !== columnName\n        );\n      } else {\n        // We need to have the correct order for the new transformed columns\n        orderedColumns.forEach((orderedColumnName) => {\n          if (\n            visibleColumns.includes(orderedColumnName) ||\n            orderedColumnName === columnName\n          ) {\n            transformedVisibleColumns.push(orderedColumnName);\n          }\n        });\n      }\n\n      return {\n        ...state,\n        visibleColumns: transformedVisibleColumns,\n      };\n    },\n\n    [columnsActions.ORDERING_CHANGE]: (state, action) => {\n      const { orderedColumns } = state;\n      const { sourceIndex, destinationIndex, columnName } = action;\n\n      // Just a double check that we are going to reorder the right column!\n      // If not, then do nothing!\n      if (orderedColumns[sourceIndex] !== columnName) {\n        return {\n          ...state,\n        };\n      }\n\n      return {\n        ...state,\n        orderedColumns: simpleReorder(\n          orderedColumns,\n          sourceIndex,\n          destinationIndex\n        ),\n      };\n    },\n    [columnsActions.RESET_ORDERING]: (state, action) => {\n      const { columns } = action;\n\n      const orderedColumns = resetOrderedColumns(columns);\n\n      return {\n        ...state,\n        orderedColumns,\n      };\n    },\n\n    [datagridActions.REHYDRATE_VALIDATION]: (state) => {\n      let filteredState = {};\n      Object.keys(initialState).forEach((keyName) => {\n        filteredState[keyName] =\n          state[keyName] !== undefined ? state[keyName] : initialState[keyName];\n      });\n      return filteredState;\n    },\n\n    [datagridActions.DATA_RENDER]: (state, action) => {\n      const { filtered_total: filteredTotalEntries } = action.data;\n      const totalEntries =\n        filteredTotalEntries > state.totalEntries\n          ? filteredTotalEntries\n          : state.totalEntries;\n      const lastPage =\n        filteredTotalEntries === 0\n          ? 1\n          : Math.ceil(filteredTotalEntries / state.perPage);\n      const page = state.page > lastPage ? lastPage : state.page;\n\n      const lastPrimaryKeyValue = action.lastPrimaryKeyValue\n        ? action.lastPrimaryKeyValue\n        : null;\n\n      return {\n        ...state,\n        filteredTotalEntries,\n        totalEntries,\n        lastPage,\n        page,\n        lastPrimaryKeyValue,\n      };\n    },\n    [datagridActions.PER_PAGE_CHANGE]: (state, action) => {\n      return {\n        ...state,\n        perPage: action.perPageValue,\n        page: 1,\n      };\n    },\n\n    [datagridActions.PAGE_CHANGE]: (state, action) => {\n      return {\n        ...state,\n        page: action.pageValue,\n      };\n    },\n\n    [datagridActions.COLUMN_ORDERING]: (state, action) => {\n      return {\n        ...state,\n        sorting: action.sorting,\n        sortingFor: action.columnName,\n      };\n    },\n    [datagridActions.ORDERING_RESET]: (state) => {\n      return {\n        ...state,\n        ...cleanOrderingState,\n      };\n    },\n    [datagridActions.CLEAR_FILTERING]: (state) => {\n      return {\n        ...state,\n        ...cleanFilteringState,\n      };\n    },\n    [datagridActions.CLEAR_CACHE]: (state) => {\n      return {\n        ...state,\n        ...cleanFilteringState,\n        ...cleanOrderingState,\n      };\n    },\n\n    [formActions.ADD]: clearLastPrimaryKeyValue,\n    [formActions.CLONE]: clearLastPrimaryKeyValue,\n    [formActions.EDIT]: clearLastPrimaryKeyValue,\n    [formActions.READ]: clearLastPrimaryKeyValue,\n  },\n  {\n    ...initialState,\n  }\n);\n\nexport default datagridReducer;\n","import { datagridActions } from \"../actions/datagrid-actions\";\nimport { handleActions } from \"../utils/redux-helper\";\n\nconst datagridRowsReducer = handleActions(\n  {\n    [datagridActions.DATA_RENDER]: (state, action) => {\n      return action.data.data || [];\n    },\n  },\n  []\n);\n\nexport default datagridRowsReducer;\n","const filteringActionsPrefix = \"filtering\";\n\nexport const filteringActions = {\n  MODAL_OPEN: `${filteringActionsPrefix}/modal-open`,\n  MODAL_CLOSE: `${filteringActionsPrefix}/modal-close`,\n  FORM_SUBMIT: `${filteringActionsPrefix}/form-submit`,\n};\n","import { filteringActions } from \"../actions/filtering-actions\";\nimport { handleActions } from \"../utils/redux-helper\";\n\nconst initialState = {\n  modalOpen: false,\n};\n\nconst filteringReducer = handleActions(\n  {\n    [filteringActions.MODAL_OPEN]: (state) => {\n      return {\n        ...state,\n        modalOpen: true,\n      };\n    },\n    [filteringActions.FORM_SUBMIT]: (state) => {\n      return {\n        ...state,\n        modalOpen: false,\n      };\n    },\n    [filteringActions.MODAL_CLOSE]: (state) => {\n      return {\n        ...state,\n        modalOpen: false,\n      };\n    },\n  },\n  {\n    ...initialState,\n  }\n);\n\nexport default filteringReducer;\n","import { formActions } from \"../actions/form-actions\";\nimport { addValuesToFieldTypes } from \"../utils/form-fields\";\nimport { handleActions } from \"../utils/redux-helper\";\nimport { errorActions } from \"../actions/error-actions\";\n\nconst initialState = {\n  deleteOneModalOpen: false,\n  deleteMultipleModalOpen: false,\n  fields: [],\n  modalLoading: false,\n  loadingOverlay: false,\n  modalOpen: false,\n  operationState: null,\n  primaryKeyValue: null,\n  readOnly: false,\n  closeModalOnSave: true,\n};\n\nconst resetLoading = {\n  modalLoading: false,\n  loadingOverlay: false,\n};\n\nconst formOperation = (state, action) => {\n  return {\n    ...state,\n    operationState: action.type,\n    primaryKeyValue: action.primaryKeyValue,\n    modalOpen: true,\n    modalLoading: true,\n    fields: [],\n  };\n};\n\nconst formOperationLoad = (state, action) => {\n  return {\n    ...state,\n    ...resetLoading,\n    fields: addValuesToFieldTypes(action.fieldTypes, action.data.data),\n    readOnly: action.type === formActions.READ_LOAD,\n  };\n};\n\nconst formOperationSuccess = (state) => {\n  return {\n    ...state,\n    ...resetLoading,\n    operationState: null,\n    modalOpen: false,\n    primaryKeyValue: null,\n    fields: [],\n  };\n};\n\nconst formsReducer = handleActions(\n  {\n    [formActions.CLONE]: formOperation,\n    [formActions.EDIT]: formOperation,\n    [formActions.READ]: formOperation,\n\n    [formActions.ADD_LOAD]: formOperationLoad,\n    [formActions.CLONE_LOAD]: formOperationLoad,\n    [formActions.EDIT_LOAD]: formOperationLoad,\n    [formActions.READ_LOAD]: formOperationLoad,\n\n    [formActions.INSERT_SUCCESS]: formOperationSuccess,\n    [formActions.UPDATE_SUCCESS]: formOperationSuccess,\n\n    [formActions.ADD]: (state, action) => {\n      return {\n        ...state,\n        operationState: action.type,\n        primaryKeyValue: null,\n        modalOpen: true,\n        modalLoading: true,\n        fields: [],\n      };\n    },\n    [formActions.UPDATE]: (state) => ({\n      ...state,\n      loadingOverlay: true,\n    }),\n    [formActions.DELETE]: (state, action) => {\n      return {\n        ...state,\n        operationState: action.type,\n        primaryKeyValue: action.primaryKeyValue,\n        deleteOneModalOpen: true,\n      };\n    },\n\n    [formActions.DELETE_MULTIPLE]: (state, action) => {\n      return {\n        ...state,\n        operationState: action.type,\n        deleteMultipleModalOpen: true,\n      };\n    },\n\n    [formActions.MODAL_CLOSE]: (state) => {\n      return {\n        ...state,\n        modalOpen: false,\n        fields: [],\n        operationState: null,\n        primaryKeyValue: null,\n      };\n    },\n\n    [formActions.DELETE_ONE_MODAL_CLOSE]: (state) => {\n      return {\n        ...state,\n        deleteOneModalOpen: false,\n        operationState: null,\n        primaryKeyValue: null,\n      };\n    },\n\n    [formActions.DELETE_MULTIPLE_MODAL_CLOSE]: (state) => {\n      return {\n        ...state,\n        deleteMultipleModalOpen: false,\n        operationState: null,\n        primaryKeyValue: null,\n      };\n    },\n\n    [errorActions.RESPONSE_ERROR]: (state) => {\n      return {\n        ...state,\n        ...resetLoading,\n      };\n    },\n\n    [formActions.DELETE_ACTION_MULTIPLE_SUCCESS]: (state) => {\n      return {\n        ...state,\n        deleteMultipleModalOpen: false,\n        operationState: null,\n      };\n    },\n\n    [formActions.DELETE_ACTION_ONE_SUCCESS]: (state) => {\n      return {\n        ...state,\n        deleteOneModalOpen: false,\n        operationState: null,\n        primaryKeyValue: null,\n      };\n    },\n\n    [formActions.TOGGLE_CLOSE_MODAL_ON_SAVE]: (state) => {\n      return {\n        ...state,\n        closeModalOnSave: !state.closeModalOnSave,\n      };\n    },\n  },\n  {\n    ...initialState,\n  }\n);\n\nexport default formsReducer;\n","const localesMapping = {\n  Afrikaans: \"af\",\n  Arabic: \"ar\",\n  Bengali: \"bn\",\n  Bulgarian: \"bg\",\n  Catalan: \"ca\",\n  Chinese: \"zh-CN\",\n  Croatian: \"hr\",\n  Czech: \"cs\",\n  Danish: \"da\",\n  Dutch: \"nl\",\n  English: \"en-US\",\n  French: \"fr\",\n  German: \"de\",\n  Greek: \"el\",\n  Hindi: \"hi\",\n  Hungarian: \"hu\",\n  Indonesian: \"id\",\n  Italian: \"it\",\n  Japanese: \"ja\",\n  Korean: \"ko\",\n  Lithuanian: \"lt\",\n  Mongolian: \"mn\",\n  Norwegian: \"nn\",\n  Persian: \"fa-IR\",\n  Polish: \"pl\",\n  Romanian: \"ro\",\n  Russian: \"ru\",\n  Slovak: \"sk\",\n  Spanish: \"es\",\n  Thai: \"th\",\n  Turkish: \"tr\",\n  Ukrainian: \"uk\",\n  Vietnamese: \"vi\",\n  \"pt-BR.Portuguese\": \"pt-BR\",\n  \"pt-PT.Portuguese\": \"pt\",\n};\n\nconst monthFirstShort = \"M/d/yyyy\";\nconst monthFirstLong = \"MM/dd/yyyy\";\nconst dayFirstShort = \"d/M/yyyy\";\nconst dayFirstLong = \"dd/MM/yyyy\";\n\n// Original list from here: https://stackoverflow.com/questions/2388115/get-locale-short-date-format-using-javascript\nconst dateFormatMapping = {\n  af: \"yyyy/MM/dd\",\n  ar: dayFirstLong,\n  \"ar-AE\": dayFirstLong,\n  \"ar-BH\": dayFirstLong,\n  \"ar-DZ\": \"dd-MM-yyyy\",\n  \"ar-EG\": dayFirstLong,\n  \"ar-IQ\": dayFirstLong,\n  \"ar-JO\": dayFirstLong,\n  \"ar-KW\": dayFirstLong,\n  \"ar-LB\": dayFirstLong,\n  \"ar-LY\": dayFirstLong,\n  \"ar-MA\": \"dd-MM-yyyy\",\n  \"ar-OM\": dayFirstLong,\n  \"ar-QA\": dayFirstLong,\n  \"ar-SA\": \"dd/MM/yy\",\n  \"ar-SY\": dayFirstLong,\n  \"ar-TN\": \"dd-MM-yyyy\",\n  \"ar-YE\": dayFirstLong,\n  bg: \"dd.M.yyyy\",\n  bn: \"dd-MM-yy\",\n  ca: dayFirstLong,\n  cs: \"d.M.yyyy\",\n  da: \"dd-MM-yyyy\",\n  de: \"dd.MM.yyyy\",\n  el: dayFirstShort,\n  \"en-029\": monthFirstLong,\n  \"en-AU\": \"d/MM/yyyy\",\n  \"en-BZ\": dayFirstLong,\n  \"en-CA\": dayFirstLong,\n  \"en-GB\": dayFirstLong,\n  \"en-IE\": dayFirstLong,\n  \"en-IN\": \"dd-MM-yyyy\",\n  \"en-JM\": dayFirstLong,\n  \"en-MY\": dayFirstShort,\n  \"en-NZ\": \"d/MM/yyyy\",\n  \"en-PH\": monthFirstShort,\n  \"en-SG\": dayFirstShort,\n  \"en-TT\": dayFirstLong,\n  \"en-US\": monthFirstShort,\n  \"en-ZA\": \"yyyy/MM/dd\",\n  \"en-ZW\": monthFirstShort,\n  es: dayFirstLong,\n  \"es-AR\": dayFirstLong,\n  \"es-BO\": dayFirstLong,\n  \"es-CL\": \"dd-MM-yyyy\",\n  \"es-CO\": dayFirstLong,\n  \"es-CR\": dayFirstLong,\n  \"es-DO\": dayFirstLong,\n  \"es-EC\": dayFirstLong,\n  \"es-ES\": dayFirstLong,\n  \"es-GT\": dayFirstLong,\n  \"es-HN\": dayFirstLong,\n  \"es-MX\": dayFirstLong,\n  \"es-NI\": dayFirstLong,\n  \"es-PA\": monthFirstLong,\n  \"es-PE\": dayFirstLong,\n  \"es-PR\": dayFirstLong,\n  \"es-PY\": dayFirstLong,\n  \"es-SV\": dayFirstLong,\n  \"es-US\": monthFirstShort,\n  \"es-UY\": dayFirstLong,\n  \"es-VE\": dayFirstLong,\n  \"et-EE\": \"d.MM.yyyy\",\n  \"eu-ES\": \"yyyy/MM/dd\",\n  \"fa-IR\": monthFirstLong,\n  fr: dayFirstLong,\n  \"fr-BE\": \"d/MM/yyyy\",\n  \"fr-CA\": \"yyyy-MM-dd\",\n  \"fr-CH\": \"dd.MM.yyyy\",\n  \"fr-FR\": dayFirstLong,\n  \"fr-LU\": dayFirstLong,\n  \"fr-MC\": dayFirstLong,\n  hi: \"dd-MM-yyyy\",\n  hr: \"d.M.yyyy.\",\n  \"hr-BA\": \"d.M.yyyy.\",\n  \"hr-HR\": \"d.M.yyyy\",\n  hu: \"yyyy. MM. dd.\",\n  id: dayFirstLong,\n  it: dayFirstLong,\n  \"it-CH\": \"dd.MM.yyyy\",\n  \"it-IT\": dayFirstLong,\n  ja: \"yyyy/MM/dd\",\n  ko: \"yyyy. MM. dd\",\n  lt: \"yyyy.MM.dd\",\n  mn: \"yy.MM.dd\",\n  \"mn-MN\": \"yy.MM.dd\",\n  \"mn-Mong-CN\": \"yyyy/M/d\",\n  // TODO: remove some others below this line\n  nl: \"d/MM/yyyy\",\n  \"nl-BE\": \"d/MM/yyyy\",\n  \"nl-NL\": \"d-M-yyyy\",\n  nn: \"dd.MM.yyyy\",\n  pl: \"dd.MM.yyyy\",\n  pt: \"dd-MM-yyyy\",\n  \"pt-BR\": dayFirstShort,\n  \"pt-PT\": \"dd-MM-yyyy\",\n  ro: \"dd.MM.yyyy\",\n  ru: \"dd.MM.yyyy\",\n  sk: \"d. M. yyyy\",\n  th: dayFirstShort,\n  tr: \"dd.MM.yyyy\",\n  uk: \"dd.MM.yyyy\",\n  vi: dayFirstLong,\n  zh: \"yyyy/M/d\",\n  \"zh-CN\": \"yyyy/M/d\",\n  \"zh-HK\": dayFirstShort,\n  \"zh-MO\": dayFirstShort,\n  \"zh-SG\": dayFirstShort,\n  \"zh-TW\": \"yyyy/M/d\",\n  \"zu-ZA\": \"yyyy/MM/dd\",\n};\n\nconst getBrowserLocale = () => {\n  return navigator.language;\n};\n\nexport const getDateFormatFromLocale = (locale) => {\n  // As we are trying to automatically understand which language and region the user uses, we are trying to\n  // combine it with the default language of the CRUD\n\n  // Step 1. Check if the language of the browser is the same as the CRUD language\n  const browserLocale = getBrowserLocale();\n  if (browserLocale.substring(0, 2) === locale.substring(0, 2)) {\n    // Same language, try to find the region\n    if (dateFormatMapping[browserLocale]) {\n      return dateFormatMapping[browserLocale];\n    }\n  }\n\n  // Step 2. The browser locale doesn't help much so search from the locale of the language\n  if (dateFormatMapping[locale]) {\n    return dateFormatMapping[locale];\n  }\n\n  // Step 3. Fallback just in case\n  return \"yyyy-MM-dd\";\n};\n\nexport const getLocaleFromLanguage = (language) => {\n  if (localesMapping[language]) {\n    const locale = localesMapping[language];\n\n    // Check if the language of the browser is the same as the CRUD language\n    const browserLocale = getBrowserLocale();\n    if (browserLocale.substring(0, 2) === locale.substring(0, 2)) {\n      // Workaround for some languages that are supported through their short code on date-fns\n      // For more check list of supported languages: https://github.com/date-fns/date-fns/tree/main/src/locale\n      // We are keeping it as a work-around since in the future this may change on the date-fns library\n      if (browserLocale === \"es-ES\" || browserLocale === \"de-DE\") {\n        return browserLocale.substring(0, 2);\n      }\n\n      // Same language, returning the browser locale\n      return browserLocale;\n    }\n\n    // If the language of the browser is not the same as the CRUD language, we return the locale of the CRUD\n    return localesMapping[language];\n  }\n\n  return localesMapping[\"English\"];\n};\n","import { configurationActions } from \"../actions/configuration-actions\";\nimport { fieldTypesGroupingPerOperation } from \"../utils/form-fields\";\nimport { datagridActions } from \"../actions/datagrid-actions\";\nimport { REHYDRATE } from \"redux-persist\";\nimport { formActions } from \"../actions/form-actions\";\nimport { handleActions } from \"../utils/redux-helper\";\nimport { errorActions } from \"../actions/error-actions\";\nimport {\n  getDateFormatFromLocale,\n  getLocaleFromLanguage,\n} from \"../utils/locale/locale-helper\";\nimport { getColumnsWithData } from \"../utils/columns\";\n\nconst POSITION_TOP_LEFT = \"top-left\";\nconst POSITION_TOP_RIGHT = \"top-right\";\nconst POSITION_BOTTOM_LEFT = \"bottom-left\";\nconst POSITION_BOTTOM_RIGHT = \"bottom-right\";\n\nconst initialState = {\n  apiUrl: \"\",\n  backendActionButtonsMultiple: [],\n  datagridButtons: [],\n  columns: [],\n  dateFormat: \"yyyy-MM-dd\",\n  fieldTypes: [],\n  fieldTypesAddForm: [],\n  fieldTypesCloneForm: [],\n  fieldTypesColumns: [],\n  fieldTypesEditForm: [],\n  fieldTypesReadForm: [],\n  hasActions: false,\n  hasMasterDetail: false,\n  hasSettings: false,\n  hasFilters: false,\n  hasExportData: false,\n  hasExportPdf: false,\n  hasExportExcel: false,\n  hasPrint: false,\n  hasColumnsButton: false,\n  hasDatagridTitle: false,\n  hasAdd: false,\n  initError: false,\n  landingPageUrl: \"\",\n  language: \"English\",\n  locale: \"en-US\",\n  maxActionButtons: {\n    mobile: 1,\n    desktop: 2,\n  },\n  openInModal: true,\n  options: {},\n  pagingLoading: false,\n  pagingOptions: [],\n  rightSideActions: false,\n  selectedIds: [],\n  subject: \"\",\n  subjectPlural: \"\",\n  urlHistory: false,\n  masterPrimaryKeyValue: null,\n  showImagePreview: false,\n};\n\nconst removeSelectedIds = (state) => {\n  return {\n    ...state,\n    selectedIds: [],\n  };\n};\n\nconst configurationReducer = handleActions(\n  {\n    [REHYDRATE]: (state) => {\n      return {\n        ...state,\n        pagingLoading: true,\n      };\n    },\n\n    [errorActions.RESPONSE_ERROR]: (state) => {\n      return {\n        ...state,\n        pagingLoading: false,\n      };\n    },\n\n    [configurationActions.MAIN_CONFIGURATION]: (state, action) => {\n      return {\n        ...state,\n        apiUrl: action.apiUrl,\n        landingPageUrl: action.landingPageUrl,\n        masterPrimaryKeyValue: action.masterPrimaryKeyValue,\n      };\n    },\n\n    [configurationActions.INIT_SUCCESS]: (state, action) => {\n      const {\n        actionButtonsMultiple,\n        datagridButtons,\n        columns,\n        paging: { pagingOptions },\n        operations: {\n          actionButtons,\n          actionButtonsMultiple: hasActionButtonsMultiple,\n          add,\n          clone,\n          columns: hasColumnsButton,\n          datagridTitle: hasDatagridTitle,\n          deleteMultiple,\n          deleteSingle,\n          edit,\n          exportData,\n          exportExcel,\n          exportPdf,\n          filters,\n          print,\n          read,\n          settings,\n        },\n        configuration: {\n          actionButtonType,\n          urlHistory,\n          openInModal,\n          maxActionButtons,\n          rightSideActions,\n          showImagePreview,\n        },\n        i18n: { subject, subject_plural: subjectPlural },\n        language,\n        masterDetail,\n      } = action.data;\n\n      const groupedFieldTypes = fieldTypesGroupingPerOperation(action.data);\n\n      const locale = getLocaleFromLanguage(language);\n\n      const datagridButtonsTopLeft =\n        datagridButtons.length > 0\n          ? datagridButtons.filter(\n              (button) => button.position === POSITION_TOP_LEFT\n            )\n          : [];\n      const datagridButtonsTopRight =\n        datagridButtons.length > 0\n          ? datagridButtons.filter(\n              (button) => button.position === POSITION_TOP_RIGHT\n            )\n          : [];\n      const datagridButtonsBottomLeft =\n        datagridButtons.length > 0\n          ? datagridButtons.filter(\n              (button) => button.position === POSITION_BOTTOM_LEFT\n            )\n          : [];\n      const datagridButtonsBottomRight =\n        datagridButtons.length > 0\n          ? datagridButtons.filter(\n              (button) => button.position === POSITION_BOTTOM_RIGHT\n            )\n          : [];\n\n      return {\n        ...state,\n        backendActionButtonsMultiple: actionButtonsMultiple || [],\n        datagridButtonsTopLeft: datagridButtonsTopLeft,\n        datagridButtonsTopRight: datagridButtonsTopRight,\n        datagridButtonsBottomLeft: datagridButtonsBottomLeft,\n        datagridButtonsBottomRight: datagridButtonsBottomRight,\n\n        columns: getColumnsWithData(\n          columns,\n          groupedFieldTypes.fieldTypesColumns\n        ),\n        dateFormat: getDateFormatFromLocale(locale),\n        language,\n        locale,\n        pagingOptions,\n        subject,\n        subjectPlural,\n        urlHistory,\n        hasDatagridTitle,\n        hasSettings: settings,\n        hasFilters: filters,\n        hasExportData: exportData,\n        hasExportPdf: exportPdf,\n        hasExportExcel: exportExcel,\n        hasPrint: print,\n        hasColumnsButton,\n        openInModal,\n        rightSideActions,\n        hasMasterDetail: typeof masterDetail === \"object\",\n        maxActionButtons,\n        showImagePreview,\n        hasActions:\n          add ||\n          edit ||\n          deleteSingle ||\n          clone ||\n          deleteMultiple ||\n          read ||\n          actionButtons,\n        hasAdd: add,\n        hasTopLeftButtons: add || datagridButtonsTopLeft,\n        hasTopRightButtons:\n          settings ||\n          filters ||\n          exportData ||\n          print ||\n          columns ||\n          datagridButtonsTopRight,\n        hasBottomLeftButtons: datagridButtonsBottomLeft,\n        hasBottomRightButtons: datagridButtonsBottomRight,\n        options: {\n          deleteMultiple,\n          hasEdit: edit,\n          hasClone: clone,\n          hasDelete: deleteSingle,\n          hasRead: read,\n          hasActionButtons: actionButtons,\n          hasActionButtonsMultiple,\n          actionButtonHasIcon:\n            actionButtonType === \"icon-text\" || actionButtonType === \"icon\",\n          actionButtonHasText:\n            actionButtonType === \"icon-text\" || actionButtonType === \"text\",\n        },\n        ...groupedFieldTypes,\n      };\n    },\n\n    [configurationActions.INIT_FAILURE]: (state) => {\n      return {\n        ...state,\n        initError: true,\n        pagingLoading: false,\n      };\n    },\n    [configurationActions.SET_OPEN_IN_MODAL]: (state, { openInModal }) => {\n      return {\n        ...state,\n        openInModal,\n      };\n    },\n\n    [datagridActions.PAGE_CHANGE]: (state) => {\n      return {\n        ...state,\n        pagingLoading: true,\n        selectedIds: [],\n      };\n    },\n\n    [datagridActions.DATA_RENDER]: (state) => {\n      return {\n        ...state,\n        pagingLoading: false,\n        selectedIds: [],\n      };\n    },\n\n    [datagridActions.SELECT_ROW_TOGGLE]: (state, action) => {\n      const { rowId } = action;\n      let selectedIds = [...state.selectedIds];\n\n      if (selectedIds.indexOf(rowId) > -1) {\n        selectedIds = selectedIds.filter((id) => id !== rowId);\n      } else {\n        selectedIds.push(rowId);\n      }\n\n      return {\n        ...state,\n        selectedIds,\n      };\n    },\n\n    [datagridActions.SELECT_ROWS]: (state, action) => {\n      return {\n        ...state,\n        selectedIds: [...action.selectedIds],\n      };\n    },\n\n    [formActions.ADD]: removeSelectedIds,\n    [formActions.CLONE]: removeSelectedIds,\n    [formActions.EDIT]: removeSelectedIds,\n    [formActions.READ]: removeSelectedIds,\n    [formActions.DELETE_ACTION_MULTIPLE_SUCCESS]: removeSelectedIds,\n    [datagridActions.DATA_FETCH]: removeSelectedIds,\n  },\n  {\n    ...initialState,\n  }\n);\n\nexport default configurationReducer;\n","import { datagridActions } from \"../actions/datagrid-actions\";\nimport { configurationActions } from \"../actions/configuration-actions\";\nimport { handleActions } from \"../utils/redux-helper\";\nimport { errorActions } from \"../actions/error-actions\";\n\nconst loading = () => {\n  return true;\n};\n\nconst notLoading = () => {\n  return false;\n};\n\nconst initialState = false;\n\nconst loadingReducer = handleActions(\n  {\n    [datagridActions.DATA_FETCH]: loading,\n    [datagridActions.DATA_RENDER]: notLoading,\n    [errorActions.RESPONSE_ERROR]: notLoading,\n    [configurationActions.INIT_FAILURE]: notLoading,\n    [configurationActions.INIT_FETCH]: loading,\n  },\n  initialState\n);\n\nexport default loadingReducer;\n","import { columnsActions } from \"../actions/columns-actions\";\nimport { handleActions } from \"../utils/redux-helper\";\n\nconst initialState = {\n  columnsModalOpen: false,\n};\n\nconst columnsReducer = handleActions(\n  {\n    [columnsActions.MODAL_OPEN]: (state) => {\n      return {\n        ...state,\n        columnsModalOpen: true,\n      };\n    },\n    [columnsActions.MODAL_CLOSE]: (state) => {\n      return {\n        ...state,\n        columnsModalOpen: false,\n      };\n    },\n  },\n  {\n    ...initialState,\n  }\n);\n\nexport default columnsReducer;\n","import { handleActions } from \"../utils/redux-helper\";\nimport { errorActions } from \"../actions/error-actions\";\n\nconst initialState = {\n  showError: false,\n  validationError: false,\n  failureError: false,\n  message: null,\n  details: null,\n  errorsList: [],\n};\n\nconst resetError = () => {\n  return {\n    ...initialState,\n  };\n};\n\nconst errorReducer = handleActions(\n  {\n    [errorActions.MODAL_CLOSE]: resetError,\n    [errorActions.RESPONSE_ERROR]: (state, action) => {\n      return {\n        ...state,\n        showError: true,\n        validationError: action.validationError || false,\n        failureError: action.failureError || false,\n        message: action.message || null,\n        details: action.details || null,\n        errorsList: action.errorsList || [],\n      };\n    },\n  },\n  initialState\n);\n\nexport default errorReducer;\n","import { handleActions } from \"../utils/redux-helper\";\nimport { formActions } from \"../actions/form-actions\";\nimport { fieldTypes } from \"../constants/field-types\";\nimport { dependedFieldsActions } from \"../actions/depended-fields-actions\";\n\nconst initialState = {\n  permittedValues: {},\n};\n\nconst setPermittedValues = (state, action) => {\n  let permittedValues = {};\n\n  action.fieldTypes.forEach((field) => {\n    if (field.dataType === fieldTypes.DEPENDED_RELATIONAL) {\n      if (action.data.data[field.fieldName]) {\n        permittedValues[field.fieldName] =\n          action.data.data[field.fieldName].permittedValues;\n      }\n    }\n  });\n\n  return {\n    ...state,\n    permittedValues: {\n      ...state.permittedValues,\n      ...permittedValues,\n    },\n  };\n};\n\nconst dependedRelation = handleActions(\n  {\n    [formActions.ADD_LOAD]: setPermittedValues,\n    [formActions.CLONE_LOAD]: setPermittedValues,\n    [formActions.EDIT_LOAD]: setPermittedValues,\n    [formActions.READ_LOAD]: setPermittedValues,\n    [dependedFieldsActions.UPDATE_PERMITTED_VALUES]: (state, action) => {\n      const { permittedValues, resetPermittedValuesForFields } = action;\n      let updatedPermittedValues = {\n        ...permittedValues,\n      };\n\n      resetPermittedValuesForFields.forEach((resetFieldName) => {\n        updatedPermittedValues[resetFieldName] = [];\n      });\n\n      return {\n        ...state,\n        permittedValues: {\n          ...state.permittedValues,\n          ...updatedPermittedValues,\n        },\n      };\n    },\n  },\n  initialState\n);\n\nexport default dependedRelation;\n","import { handleActions } from \"../utils/redux-helper\";\nimport { columnWidthActions } from \"../actions/column-width-actions\";\nimport { datagridActions } from \"../actions/datagrid-actions\";\nimport { configurationActions } from \"../actions/configuration-actions\";\n\nconst initialState = {};\n\nconst resetColumnWidth = () => {\n  return {};\n};\n\nconst columnWidthReducer = handleActions(\n  {\n    [columnWidthActions.CHANGE_WIDTH]: (state, action) => {\n      const { columnName, columnWidth } = action;\n\n      // Currently - since we are taking the column width from the user - we need to validate the data\n      const validatedColumnWidth = isNaN(parseInt(columnWidth, 10))\n        ? 0\n        : parseInt(columnWidth, 10);\n\n      return {\n        ...state,\n        [columnName]: validatedColumnWidth + \"px\",\n      };\n    },\n    [configurationActions.INIT_SUCCESS]: (state, action) => {\n      const { columnWidth } = action.data;\n\n      if (!columnWidth) {\n        return state;\n      }\n\n      let finalColumnWidth = { ...state };\n\n      Object.keys(columnWidth).forEach((columnName) => {\n        const currentColumnWidth = columnWidth[columnName];\n        if (!finalColumnWidth[columnName]) {\n          finalColumnWidth[columnName] = currentColumnWidth;\n        }\n      });\n\n      return finalColumnWidth;\n    },\n    [columnWidthActions.RESET_COLUMN_WIDTH]: resetColumnWidth,\n    [datagridActions.CLEAR_CACHE]: resetColumnWidth,\n    [datagridActions.REHYDRATE_VALIDATION]: (state) => {\n      // TODO: Validate data\n      return state;\n    },\n  },\n  {\n    ...initialState,\n  }\n);\n\nexport default columnWidthReducer;\n","import { handleActions } from \"../utils/redux-helper\";\nimport { masterDetailActions } from \"../actions/master-detail-actions\";\nimport { configurationActions } from \"../actions/configuration-actions\";\n\nconst initialState = {\n  openedRows: [],\n  apiUrl: \"\",\n};\n\nconst masterDetailReducer = handleActions(\n  {\n    [masterDetailActions.OPEN_ROW]: (state, action) => {\n      const { rowId } = action;\n      return {\n        ...state,\n        openedRows: [...state.openedRows, rowId],\n      };\n    },\n    [masterDetailActions.CLOSE_ROW]: (state, action) => {\n      const { rowId } = action;\n      return {\n        ...state,\n        openedRows: state.openedRows.filter((id) => id !== rowId),\n      };\n    },\n    [configurationActions.INIT_SUCCESS]: (state, action) => {\n      const { masterDetail } = action.data;\n\n      if (typeof masterDetail === \"object\") {\n        return {\n          ...state,\n          apiUrl: masterDetail.apiUrl,\n        };\n      }\n\n      return {\n        ...state,\n      };\n    },\n  },\n  {\n    ...initialState,\n  }\n);\n\nexport default masterDetailReducer;\n","import { datagridActions } from \"../actions/datagrid-actions\";\nimport { filteringActions } from \"../actions/filtering-actions\";\nimport { handleActions } from \"../utils/redux-helper\";\n\nconst initialState = {\n  columnSearchValues: {},\n  columnSearchValuesDisplayAs: {},\n  extendedSearchData: [],\n  extendedSearchOperator: null,\n};\n\nconst cleanFilteringState = {\n  columnSearchValues: {},\n  columnSearchValuesDisplayAs: {},\n  extendedSearchData: [],\n  extendedSearchOperator: null,\n};\n\nconst searchReducer = handleActions(\n  {\n    [datagridActions.REHYDRATE_VALIDATION]: (state) => {\n      let filteredState = {};\n      Object.keys(initialState).forEach((keyName) => {\n        filteredState[keyName] =\n          state[keyName] !== undefined ? state[keyName] : initialState[keyName];\n      });\n      return filteredState;\n    },\n    [datagridActions.CLEAR_FILTERING]: (state) => {\n      return {\n        ...state,\n        ...cleanFilteringState,\n      };\n    },\n    [datagridActions.CLEAR_CACHE]: (state) => {\n      return {\n        ...state,\n        ...cleanFilteringState,\n      };\n    },\n\n    [datagridActions.COLUMN_SEARCH]: (state, action) => {\n      if (action.searchValue) {\n        return {\n          ...state,\n          columnSearchValues: {\n            ...state.columnSearchValues,\n            [action.columnName]: action.searchValue,\n          },\n          columnSearchValuesDisplayAs: {\n            ...state.columnSearchValuesDisplayAs,\n            ...(action.searchValueDisplayAs\n              ? {\n                  [action.columnName]: action.searchValueDisplayAs,\n                }\n              : null),\n          },\n        };\n      } else if (state.columnSearchValues[action.columnName] !== undefined) {\n        // If we have an empty search value and we already have\n        // defined the fieldName, remove it from search\n        // (empty values on quick search shouldn't search for\n        // an empty value)\n        delete state.columnSearchValues[action.columnName];\n\n        return {\n          ...state,\n          columnSearchValues: {\n            ...state.columnSearchValues,\n          },\n        };\n      }\n      // Fallback\n      return {\n        ...state,\n      };\n    },\n\n    [filteringActions.FORM_SUBMIT]: (state, action) => {\n      return {\n        ...state,\n        columnSearchValues: {},\n        columnSearchValuesDisplayAs: {},\n        extendedSearchData: action.data[\"extended_search\"],\n        extendedSearchOperator: action.data[\"basic_operator\"],\n      };\n    },\n  },\n  {\n    ...initialState,\n  }\n);\n\nexport default searchReducer;\n","import datagridReducer from \"./datagrid-reducer\";\nimport datagridRowsReducer from \"./datagrid-rows-reducer\";\nimport filteringReducer from \"./filtering-reducer\";\nimport formsReducer from \"./forms-reducer\";\nimport configurationReducer from \"./configuration-reducer\";\nimport loadingReducer from \"./loading-reducer\";\nimport { combineReducers } from \"redux\";\nimport columnsReducer from \"./columns-reducer\";\nimport errorReducer from \"./error-reducer\";\nimport dependedRelation from \"./depended-relation\";\nimport columnWidthReducer from \"./column-width-reducer\";\nimport masterDetailReducer from \"./master-detail-reducer\";\nimport searchReducer from \"./search-reducer\";\n\nconst groceryCrudReducers = combineReducers({\n  columnWidth: columnWidthReducer,\n  columns: columnsReducer,\n  configuration: configurationReducer,\n  datagrid: datagridReducer,\n  datagridRows: datagridRowsReducer,\n  dependedRelation: dependedRelation,\n  error: errorReducer,\n  filtering: filteringReducer,\n  form: formsReducer,\n  loading: loadingReducer,\n  masterDetail: masterDetailReducer,\n  search: searchReducer,\n});\n\nexport default groceryCrudReducers;\n","import request from \"superagent\";\n\nconst METHOD_GET = \"get\";\nconst METHOD_POST = \"post\";\n\nconst ajaxRequest = (options, methodType) => {\n  const myRequest =\n    methodType === \"post\"\n      ? request.post(options.url)\n      : request.get(options.url);\n\n  const requestExtraHeaders = window?.GroceryCrudConfiguration?.requestHeaders;\n\n  if (requestExtraHeaders !== undefined) {\n    Object.keys(requestExtraHeaders).forEach((headerName) =>\n      myRequest.set(headerName, requestExtraHeaders[headerName])\n    );\n  }\n\n  if (methodType === \"post\") {\n    Object.keys(options.dataToSend).forEach((fieldName) => {\n      const fieldValue = options.dataToSend[fieldName];\n      if (typeof fieldValue === \"object\") {\n        Object.keys(fieldValue).forEach((subFieldName) => {\n          const subFieldValue = fieldValue[subFieldName];\n          if (subFieldValue instanceof File) {\n            myRequest.field(subFieldName, subFieldValue);\n          } else if (typeof subFieldValue === \"object\") {\n            // The reason that we have the if statement here is that we don't want to send null values\n            if (subFieldValue !== null) {\n              Object.keys(subFieldValue).forEach((arrayFieldKeyName) => {\n                const arrayFieldValue = subFieldValue[arrayFieldKeyName];\n                myRequest.field(\n                  `${fieldName}[${subFieldName}][${arrayFieldKeyName}]`,\n                  arrayFieldValue === null ? \"\" : arrayFieldValue\n                );\n              });\n            }\n          } else {\n            myRequest.field(\n              `${fieldName}[${subFieldName}]`,\n              subFieldValue ? subFieldValue : \"\"\n            );\n          }\n        });\n      } else {\n        myRequest.field(fieldName, fieldValue ? fieldValue : \"\");\n      }\n    });\n  } else {\n    myRequest.query(new URLSearchParams(options.dataToSend).toString());\n  }\n\n  return myRequest;\n};\n\nexport const sendGetRequest = (options) => {\n  return ajaxRequest(options, METHOD_GET);\n};\n\nexport const sendPostRequest = (options) => {\n  return ajaxRequest(options, METHOD_POST);\n};\n","import i18n from \"./locale/i18n\";\nimport { errorActions } from \"../actions/error-actions\";\n\nconst errorMessageUnknownResponse = (error) => {\n  const message = i18n.t(\"error_unknown_response\");\n\n  let details = `${error}.\\n${i18n.t(\"error_server_response\")}:\\n`;\n\n  details +=\n    error.rawResponse === undefined\n      ? i18n.t(\"error_empty_response\")\n      : error.rawResponse;\n\n  console.log({\n    message,\n    details,\n  });\n\n  return {\n    message,\n    details,\n  };\n};\n\nexport function dispatchUnknownResponse(dispatch, error) {\n  // As \"Unknown Response\" can be literally one of the first responses we need to give enough time for the\n  // translations to be loaded. We don't want to overcomplicate things though as translation service is\n  // doing some basic caching within the localForage. So worst case we can live without the translations if\n  // the translations are not loaded yet.\n  setTimeout(() => {\n    const { message, details } = errorMessageUnknownResponse(error);\n    dispatch({\n      type: errorActions.RESPONSE_ERROR,\n      message,\n      details,\n    });\n  }, 200);\n}\n","import debounce from \"lodash/debounce\";\nimport { datagridActions } from \"../actions/datagrid-actions\";\nimport { configurationActions } from \"../actions/configuration-actions\";\nimport { sendGetRequest, sendPostRequest } from \"../utils/request\";\nimport i18n from \"../utils/locale/i18n\";\nimport { formActions } from \"../actions/form-actions\";\nimport { filteringActions } from \"../actions/filtering-actions\";\nimport { getReduxActionFromUrl } from \"../utils/urls\";\nimport { errorActions } from \"../actions/error-actions\";\nimport { columnsActions } from \"../actions/columns-actions\";\nimport { dependedFieldsActions } from \"../actions/depended-fields-actions\";\nimport { searchAsyncActions } from \"../actions/search-async-actions\";\nimport { transformExtendedSearchData } from \"../utils/filtering-helper\";\nimport { dispatchUnknownResponse } from \"../utils/error-messages\";\n\nconst serverActionMapping = {\n  [formActions.ADD]: \"add-form\",\n  [formActions.CLONE]: \"clone-form\",\n  [formActions.DELETE_ACTION_ONE]: \"remove-one\",\n  [formActions.DELETE_ACTION_MULTIPLE]: \"remove-multiple\",\n  [formActions.EDIT]: \"edit-form\",\n  [formActions.READ]: \"read-form\",\n  [formActions.UPDATE]: \"update\",\n  [formActions.INSERT]: \"insert\",\n};\n\nconst serverNextActionMapping = {\n  [formActions.ADD]: formActions.ADD_LOAD,\n  [formActions.CLONE]: formActions.CLONE_LOAD,\n  [formActions.EDIT]: formActions.EDIT_LOAD,\n  [formActions.READ]: formActions.READ_LOAD,\n  [formActions.INSERT]: formActions.INSERT_SUCCESS,\n  [formActions.UPDATE]: formActions.UPDATE_SUCCESS,\n  [formActions.DELETE_ACTION_ONE]: formActions.DELETE_ACTION_ONE_SUCCESS,\n  [formActions.DELETE_ACTION_MULTIPLE]:\n    formActions.DELETE_ACTION_MULTIPLE_SUCCESS,\n};\n\nconst fieldTypesMapping = {\n  [formActions.ADD]: \"fieldTypesAddForm\",\n  [formActions.CLONE]: \"fieldTypesCloneForm\",\n  [formActions.EDIT]: \"fieldTypesEditForm\",\n  [formActions.READ]: \"fieldTypesReadForm\",\n};\n\nconst serverResponseStatus = {\n  SUCCESS: \"success\",\n  VALIDATION_ERROR: \"error\",\n  REDIRECT: \"redirect\",\n  FAILURE: \"failure\",\n};\n\nconst datagridRequest = (store) => {\n  store.dispatch({\n    type: datagridActions.DATA_FETCH,\n  });\n};\n\nconst datagridRequestDebounced = debounce(\n  (store) => datagridRequest(store),\n  1000\n);\n\nconst serverRequestMiddleware = (store) => {\n  let apiUrl, csrfToken;\n\n  return (next) => (action) => {\n    const result = next(action);\n\n    const state = store.getState();\n    const actionType = action.type;\n\n    const { dispatch } = store;\n\n    switch (actionType) {\n      case datagridActions.COLUMN_SEARCH: {\n        if (action.searchValue === \"\") {\n          dispatch({\n            type: datagridActions.DATA_FETCH,\n          });\n        } else {\n          datagridRequestDebounced(store);\n        }\n        break;\n      }\n      case datagridActions.PAGE_CHANGE: {\n        if (\n          action.pageValue === 1 ||\n          action.pageValue === state.datagrid.lastPage\n        ) {\n          dispatch({\n            type: datagridActions.DATA_FETCH,\n          });\n        } else {\n          datagridRequestDebounced(store);\n        }\n        break;\n      }\n\n      case datagridActions.CLEAR_CACHE:\n      case datagridActions.CLEAR_FILTERING:\n      case datagridActions.COLUMN_ORDERING:\n      case datagridActions.ORDERING_RESET:\n      case datagridActions.PER_PAGE_CHANGE:\n      case filteringActions.FORM_SUBMIT:\n      case formActions.DELETE_ACTION_MULTIPLE_SUCCESS:\n      case formActions.DELETE_ACTION_ONE_SUCCESS: {\n        if (actionType === datagridActions.CLEAR_CACHE) {\n          dispatch({\n            type: columnsActions.RESET_ORDERING,\n            columns: state.configuration.columns,\n            reason: datagridActions.CLEAR_CACHE,\n          });\n        }\n\n        dispatch({\n          type: datagridActions.DATA_FETCH,\n        });\n        break;\n      }\n\n      case formActions.INSERT_SUCCESS: {\n        const lastPrimaryKeyValue = action.data ? action.data.insertId : null;\n\n        if (state.form.closeModalOnSave === false) {\n          dispatch({\n            type: formActions.ADD,\n          });\n        }\n\n        dispatch({\n          type: datagridActions.DATA_FETCH,\n          lastPrimaryKeyValue,\n        });\n\n        break;\n      }\n\n      case formActions.UPDATE_SUCCESS: {\n        const lastPrimaryKeyValue = action.primaryKeyValue;\n\n        if (state.form.closeModalOnSave === false) {\n          dispatch({\n            type: formActions.EDIT,\n            primaryKeyValue: lastPrimaryKeyValue,\n          });\n        }\n\n        dispatch({\n          type: datagridActions.DATA_FETCH,\n          lastPrimaryKeyValue,\n        });\n        break;\n      }\n\n      case configurationActions.MAIN_CONFIGURATION: {\n        apiUrl = action.apiUrl;\n        break;\n      }\n\n      case dependedFieldsActions.UPDATE_DEPENDENCY: {\n        let dataToSend = {\n          action: \"depended-relation\",\n          field_name: action.fieldName,\n          search_value: action.fieldValue,\n        };\n\n        if (csrfToken) {\n          dataToSend[csrfToken.inputName] = csrfToken.inputValue;\n        }\n\n        sendGetRequest({\n          url: apiUrl,\n          dataToSend,\n        })\n          .then((response) => {\n            if (response.body === null) {\n              dispatch({\n                type: errorActions.RESPONSE_ERROR,\n                message:\n                  \"We can't process the response of the server. Not well JSON formatted response.\",\n                details: response.text,\n              });\n              return true;\n            }\n            if (response.body.csrfToken) {\n              csrfToken = response.body.csrfToken;\n            }\n            const { permittedValues, resetPermittedValuesForFields } =\n              response.body;\n\n            dispatch({\n              type: dependedFieldsActions.UPDATE_PERMITTED_VALUES,\n              permittedValues,\n              resetPermittedValuesForFields,\n            });\n          })\n          .catch((error) => {\n            console.error(error);\n\n            dispatchUnknownResponse(dispatch, error);\n          });\n\n        break;\n      }\n\n      case searchAsyncActions.SEARCH: {\n        const { fieldName, resolveCallback, searchValue, actionFrom } = action;\n\n        // If we have no resolveCallback function (it can happen during redux time travel or unit-testing),\n        // then there is no point to send any ajax-request at the first place\n        if (!resolveCallback) {\n          break;\n        }\n\n        let dataToSend = {\n          action: \"ajax-search\",\n          field_name: fieldName,\n          search_value: searchValue,\n          action_from: actionFrom,\n        };\n\n        if (csrfToken) {\n          dataToSend[csrfToken.inputName] = csrfToken.inputValue;\n        }\n\n        sendPostRequest({\n          url: apiUrl,\n          dataToSend,\n        }).then((response) => {\n          if (response.body === null) {\n            return false;\n          }\n\n          if (response.body.csrfToken) {\n            csrfToken = response.body.csrfToken;\n          }\n\n          if (response.body.items) {\n            let options = [];\n            response.body.items.forEach((item) => {\n              options.push({\n                value: item.id,\n                label: item.title,\n              });\n            });\n\n            resolveCallback(options);\n          }\n        });\n        break;\n      }\n\n      case datagridActions.DATA_FETCH: {\n        const { page, perPage, sorting, sortingFor } = state.datagrid;\n\n        const {\n          columnSearchValues,\n          extendedSearchData,\n          extendedSearchOperator,\n        } = state.search;\n\n        const { masterPrimaryKeyValue } = state.configuration;\n\n        // Canceling everything in the queue, so we can make sure\n        // that we send only one request\n        datagridRequestDebounced.cancel();\n\n        let dataToSend = {\n          action: \"datagrid\",\n          order_by: sortingFor,\n          page: page,\n          per_page: perPage,\n          search: columnSearchValues,\n          sorting,\n        };\n\n        if (masterPrimaryKeyValue) {\n          dataToSend.master_id = masterPrimaryKeyValue;\n        }\n\n        if (csrfToken) {\n          dataToSend[csrfToken.inputName] = csrfToken.inputValue;\n        }\n\n        if (extendedSearchData.length > 0) {\n          dataToSend[\"extended_search\"] =\n            transformExtendedSearchData(extendedSearchData);\n          dataToSend[\"basic_operator\"] = extendedSearchOperator;\n        }\n\n        const lastPrimaryKeyValue = action.lastPrimaryKeyValue\n          ? action.lastPrimaryKeyValue\n          : null;\n\n        sendPostRequest({\n          url: apiUrl,\n          dataToSend,\n        })\n          .then((response) => {\n            if (response.body === null) {\n              dispatch({\n                type: errorActions.RESPONSE_ERROR,\n                message:\n                  \"We can't process the response of the server. Not well JSON formatted response.\",\n                details: response.text,\n              });\n              return true;\n            }\n            if (response.body.csrfToken) {\n              csrfToken = response.body.csrfToken;\n            }\n            dispatch({\n              type: datagridActions.DATA_RENDER,\n              data: response.body,\n              lastPrimaryKeyValue,\n            });\n          })\n          .catch((error) => {\n            console.error(error);\n            dispatchUnknownResponse(dispatch, error);\n          });\n        break;\n      }\n\n      case configurationActions.INIT_FETCH: {\n        sendGetRequest({\n          url: apiUrl,\n          dataToSend: {\n            action: \"initial\",\n          },\n        })\n          .then((response) => {\n            if (response.body === null) {\n              dispatch({\n                type: errorActions.RESPONSE_ERROR,\n                message:\n                  \"We can't process the response of the server. Not well JSON formatted response.\",\n                details: response.text,\n              });\n\n              return true;\n            }\n\n            if (response.body.csrfToken) {\n              csrfToken = response.body.csrfToken;\n            }\n            dispatch({\n              type: configurationActions.INIT_SUCCESS,\n              data: response.body,\n            });\n          })\n          .catch((error) => {\n            console.error(error);\n            dispatchUnknownResponse(dispatch, error);\n          });\n        break;\n      }\n\n      case configurationActions.INIT_SUCCESS: {\n        dispatch({\n          type: datagridActions.DATA_FETCH,\n        });\n        i18n.init(action.data.i18n);\n\n        // Triggering an action from the URL info\n        if (state.configuration.urlHistory) {\n          const nextAction = getReduxActionFromUrl();\n          if (nextAction.type !== null) {\n            dispatch(nextAction);\n          }\n        }\n        break;\n      }\n\n      case formActions.ADD:\n      case formActions.CLONE:\n      case formActions.EDIT:\n      case formActions.READ: {\n        let dataToSend = {\n          action: serverActionMapping[actionType],\n        };\n\n        if (action.primaryKeyValue !== undefined) {\n          dataToSend.pk_value = action.primaryKeyValue;\n        }\n\n        sendGetRequest({\n          url: apiUrl,\n          dataToSend,\n        })\n          .then((response) => {\n            if (response.body === null) {\n              dispatch({\n                type: errorActions.RESPONSE_ERROR,\n                message:\n                  \"We can't process the response of the server. Not well JSON formatted response.\",\n                details: response.text,\n              });\n              dispatch({\n                type: formActions.MODAL_CLOSE,\n                reason: errorActions.RESPONSE_ERROR,\n              });\n\n              return true;\n            }\n\n            if (response.body.csrfToken) {\n              csrfToken = response.body.csrfToken;\n            }\n            if (response.body.status === serverResponseStatus.SUCCESS) {\n              dispatch({\n                type: serverNextActionMapping[actionType],\n                data: response.body,\n                fieldTypes: state.configuration[fieldTypesMapping[actionType]],\n              });\n            } else if (\n              response.body.status === serverResponseStatus.FAILURE &&\n              response.body.message\n            ) {\n              dispatch({\n                type: errorActions.RESPONSE_ERROR,\n                failureError: true,\n                message: response.body.message,\n              });\n              dispatch({\n                type: formActions.MODAL_CLOSE,\n                reason: errorActions.RESPONSE_ERROR,\n              });\n            } else if (\n              response.body.status === serverResponseStatus.REDIRECT &&\n              response.body.url\n            ) {\n              window.location = response.body.url;\n            } else {\n              dispatch({\n                type: errorActions.RESPONSE_ERROR,\n                message: \"We can't process the response of the server.\",\n                details: \"\".concat(\n                  `Expected JSON response \\`status\\` to equal with \"${serverResponseStatus.SUCCESS}\".\\n`,\n                  `Got: \"${response.body.status}\" instead.`\n                ),\n              });\n              dispatch({\n                type: formActions.MODAL_CLOSE,\n                reason: errorActions.RESPONSE_ERROR,\n              });\n            }\n          })\n          .catch((error) => {\n            dispatch({\n              type: formActions.MODAL_CLOSE,\n              reason: errorActions.JAVASCRIPT_ERROR,\n            });\n            dispatch({\n              type: errorActions.RESPONSE_ERROR,\n              message: \"A Javascript error has occurred!\",\n              details: error,\n            });\n          });\n        break;\n      }\n\n      case formActions.INSERT:\n      case formActions.UPDATE:\n      case formActions.DELETE_ACTION_ONE:\n      case formActions.DELETE_ACTION_MULTIPLE: {\n        let dataToSend = {\n          action: serverActionMapping[actionType],\n        };\n\n        if (actionType === formActions.UPDATE) {\n          dataToSend.data = action.data;\n          dataToSend.pk_value = state.form.primaryKeyValue;\n        } else if (actionType === formActions.INSERT) {\n          dataToSend.data = action.data;\n        } else if (actionType === formActions.DELETE_ACTION_ONE) {\n          dataToSend.primaryKeyValue = state.form.primaryKeyValue;\n        } else if (actionType === formActions.DELETE_ACTION_MULTIPLE) {\n          // TODO: We will need to have a last check that the selectedIds are the one shown in the datagrid\n          dataToSend.primaryKeys = state.configuration.selectedIds;\n        }\n\n        if (csrfToken) {\n          dataToSend[csrfToken.inputName] = csrfToken.inputValue;\n        }\n\n        sendPostRequest({\n          url: apiUrl,\n          dataToSend,\n        })\n          .then((response) => {\n            if (response.body === null) {\n              dispatch({\n                type: errorActions.RESPONSE_ERROR,\n                message:\n                  \"We can't process the response of the server. Not well JSON formatted response.\",\n                details: response.text,\n              });\n\n              return true;\n            }\n\n            if (response.body.csrfToken) {\n              csrfToken = response.body.csrfToken;\n            }\n            if (response.body.status === serverResponseStatus.SUCCESS) {\n              dispatch({\n                type: serverNextActionMapping[actionType],\n                data: response.body,\n                ...(serverNextActionMapping[actionType] ===\n                formActions.UPDATE_SUCCESS\n                  ? {\n                      primaryKeyValue: state.form.primaryKeyValue,\n                    }\n                  : {}),\n              });\n            } else if (\n              response.body.status === serverResponseStatus.VALIDATION_ERROR &&\n              response.body.errors\n            ) {\n              dispatch({\n                type: errorActions.RESPONSE_ERROR,\n                validationError: true,\n                errorsList: response.body.errors,\n              });\n            } else if (\n              response.body.status === serverResponseStatus.FAILURE &&\n              response.body.message\n            ) {\n              dispatch({\n                type: errorActions.RESPONSE_ERROR,\n                failureError: true,\n                message: response.body.message,\n              });\n            } else if (\n              response.body.status === serverResponseStatus.REDIRECT &&\n              response.body.url\n            ) {\n              window.location = response.body.url;\n            } else {\n              dispatch({\n                type: errorActions.RESPONSE_ERROR,\n                message: \"We can't process the response of the server.\",\n                details: \"\".concat(\n                  `Expected JSON response \\`status\\` to equal with \"${serverResponseStatus.SUCCESS}\".\\n`,\n                  `Got: \"${response.body.status}\" instead.`\n                ),\n              });\n            }\n          })\n          .catch((error) => {\n            return dispatch({\n              type: errorActions.RESPONSE_ERROR,\n              message: \"An unexpected error has occurred!\",\n              details: error,\n            });\n          });\n        break;\n      }\n\n      default:\n        break;\n    }\n\n    return result;\n  };\n};\nexport default serverRequestMiddleware;\n","import { configurationActions } from \"../actions/configuration-actions\";\nimport { formActions } from \"../actions/form-actions\";\nimport { getReduxActionFromUrl } from \"../utils/urls\";\n\nconst urlSegmentNameMapping = {\n  [formActions.ADD]: \"add\",\n  [formActions.CLONE]: \"clone\",\n  [formActions.EDIT]: \"edit\",\n  [formActions.READ]: \"read\",\n};\n\nconst urlMiddleware = (store) => {\n  return (next) => (action) => {\n    const result = next(action);\n    const state = store.getState();\n\n    const actionType = action.type;\n\n    switch (actionType) {\n      case formActions.ADD:\n      case formActions.CLONE:\n      case formActions.EDIT:\n      case formActions.READ: {\n        if (\n          action.reason !== configurationActions.INIT_SUCCESS &&\n          state.configuration.urlHistory\n        ) {\n          let url = /\\/$/.test(window.location.href)\n            ? window.location.href + urlSegmentNameMapping[actionType]\n            : window.location.href + \"/\" + urlSegmentNameMapping[actionType];\n\n          if (action.primaryKeyValue !== undefined) {\n            url += \"/\" + action.primaryKeyValue;\n          }\n\n          window.history.pushState({}, \"\", new URL(url));\n        }\n        break;\n      }\n\n      case formActions.INSERT_SUCCESS:\n      case formActions.UPDATE_SUCCESS:\n      case formActions.MODAL_CLOSE: {\n        const urlAction = getReduxActionFromUrl();\n        let newUrl = null;\n\n        if (state.configuration.urlHistory) {\n          switch (urlAction.type) {\n            case formActions.ADD:\n              newUrl = window.location.href.replace(/\\/add$/, \"\");\n              break;\n            case formActions.CLONE:\n              newUrl = window.location.href.replace(/\\/clone\\/\\d+$/, \"\");\n              break;\n            case formActions.EDIT:\n              newUrl = window.location.href.replace(/\\/edit\\/\\d+$/, \"\");\n              break;\n            case formActions.READ:\n              newUrl = window.location.href.replace(/\\/read\\/\\d+$/, \"\");\n              break;\n            default:\n              break;\n          }\n\n          if (newUrl !== null) {\n            window.history.pushState({}, \"\", new URL(newUrl));\n          }\n        }\n\n        break;\n      }\n\n      case configurationActions.INIT_SUCCESS: {\n        // Triggering an action from the URL info\n        if (state.configuration.urlHistory) {\n          const nextAction = getReduxActionFromUrl();\n          if (nextAction.type !== null) {\n            store.dispatch(nextAction);\n          }\n        }\n        break;\n      }\n\n      default:\n        break;\n    }\n\n    return result;\n  };\n};\nexport default urlMiddleware;\n","import { datagridActions } from \"../actions/datagrid-actions\";\n\nconst multipleSelectionsMiddleware = (store) => {\n  return (next) => (action) => {\n    const result = next(action);\n    const state = store.getState();\n\n    switch (action.type) {\n      case datagridActions.SELECT_ROW_ALL_OR_NONE: {\n        if (\n          state.configuration.selectedIds.length >= state.datagridRows.length\n        ) {\n          store.dispatch({\n            type: datagridActions.SELECT_ROWS,\n            selectedIds: [],\n          });\n        } else {\n          let selectedIds = [];\n          state.datagridRows.forEach((row) => {\n            selectedIds.push(row.grocery_crud_extras.primaryKeyValue);\n          });\n          store.dispatch({\n            type: datagridActions.SELECT_ROWS,\n            selectedIds,\n          });\n        }\n        break;\n      }\n\n      default:\n        break;\n    }\n\n    return result;\n  };\n};\nexport default multipleSelectionsMiddleware;\n","import { REHYDRATE } from \"redux-persist\";\nimport { configurationActions } from \"../actions/configuration-actions\";\nimport { datagridActions } from \"../actions/datagrid-actions\";\n\nconst persistMiddleware = (store) => (next) => (action) => {\n  const result = next(action);\n\n  switch (action.type) {\n    case REHYDRATE:\n      store.dispatch({\n        type: datagridActions.REHYDRATE_VALIDATION,\n      });\n\n      break;\n\n    case datagridActions.REHYDRATE_VALIDATION:\n      store.dispatch({\n        type: configurationActions.INIT_FETCH,\n      });\n\n      break;\n\n    default:\n      break;\n  }\n\n  return result;\n};\n\nexport default persistMiddleware;\n","import i18n from \"../../utils/locale/i18n\";\n\nconst datagridSkin = {\n  datagrid: {\n    position: \"relative\",\n    width: \"100%\",\n    \"overflow-x\": \"auto\",\n  },\n  \"datagrid-loading\": {\n    position: \"relative\",\n    \"max-width\": \"100vw\",\n    \"border-left\": \"1px solid var(--gc-border-separator-color)\",\n    \"border-right\": \"1px solid var(--gc-border-separator-color)\",\n    \"&:before\": {\n      display: (props) => (props.loading ? \"block\" : \"none\"),\n      content: (props) => (props.loading ? `\"${i18n.t(\"loading\")}\"` : \"none\"),\n      opacity: (props) => (props.loading ? \"0.5\" : \"0\"),\n      \"font-size\": \"26px\",\n      position: \"absolute\",\n      color: \"var(--gc-light-background-text-color)\",\n      \"text-align\": \"center\",\n      \"z-index\": \"9999\",\n      background: \"var(--gc-light-background)\",\n      cursor: \"default\",\n      width: \"100%\",\n      height: \"100%\",\n    },\n  },\n};\n\nexport default datagridSkin;\n","import PropTypes from \"prop-types\";\nimport { createUseStyles } from \"react-jss\";\nimport datagridSkin from \"./datagrid.skin\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = createUseStyles(datagridSkin);\n\nconst Datagrid = (props) => {\n  const {\n    DatagridWrapper,\n    DatagridHeader,\n    DatagridBody,\n    DatagridFooter,\n    DatagridTools,\n    DatagridTitle,\n    title,\n  } = props;\n\n  const classes = useStyles(props);\n  const openInModal = useSelector((state) => state.configuration.openInModal);\n  const formModalOpen = useSelector((state) => state.form.modalOpen);\n  const hasDatagridTitle = useSelector(\n    (state) => state.configuration.hasDatagridTitle\n  );\n\n  const showDatagrid = openInModal || !formModalOpen;\n\n  return (\n    <>\n      {showDatagrid && (\n        <>\n          {hasDatagridTitle && <DatagridTitle title={title} />}\n          <div className={classes[\"datagrid-loading\"]}>\n            <DatagridTools {...props} />\n            <div className={classes[\"datagrid\"]}>\n              <DatagridWrapper {...props}>\n                <DatagridHeader {...props} />\n                <DatagridBody {...props} />\n              </DatagridWrapper>\n            </div>\n            <DatagridFooter {...props} />\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nDatagrid.propTypes = {\n  DatagridBody: PropTypes.func,\n  DatagridFooter: PropTypes.func,\n  DatagridHeader: PropTypes.func,\n  DatagridTools: PropTypes.func,\n  DatagridWrapper: PropTypes.func,\n  hasActions: PropTypes.bool,\n  rows: PropTypes.array,\n};\n\nexport default Datagrid;\n","const toolsActionsPrefix = \"tools\";\n\nexport const toolsActions = {\n  EXPORT_PDF: `${toolsActionsPrefix}/export-pdf`,\n  EXPORT_EXCEL: `${toolsActionsPrefix}/export-excel`,\n  COLUMNS_MODAL_OPEN: `${toolsActionsPrefix}/columns-modal-open`,\n  COLUMNS_MODAL_CLOSE: `${toolsActionsPrefix}/columns-modal-close`,\n};\n","import { connect } from \"react-redux\";\nimport { PURGE } from \"redux-persist\";\nimport PropTypes from \"prop-types\";\nimport Datagrid from \"../components/datagrid/datagrid\";\nimport { datagridActions } from \"../actions/datagrid-actions\";\nimport { formActions } from \"../actions/form-actions\";\nimport { toolsActions } from \"../actions/tools-actions\";\nimport { filteringActions } from \"../actions/filtering-actions\";\nimport {\n  getVisibleColumnsAsShortString,\n  getVisibleColumnsWithDetails,\n} from \"../utils/columns\";\n\nconst mapStateToProps = (state, ownProps) => ({\n  // from state\n  backendActionButtonsMultiple:\n    state.configuration.backendActionButtonsMultiple,\n  columnSearchValues: state.search.columnSearchValues,\n  columnSearchValuesDisplayAs: state.search.columnSearchValuesDisplayAs,\n  filteredTotalEntries: state.datagrid.filteredTotalEntries,\n  hasActions: state.configuration.hasActions,\n  hasAdd: state.configuration.hasAdd,\n  initError: state.configuration.initError,\n  lastPage: state.datagrid.lastPage,\n  loading: state.loading,\n  maxActionButtons: state.configuration.maxActionButtons,\n  options: state.configuration.options,\n  page: state.datagrid.page,\n  pagingLoading: state.configuration.pagingLoading,\n  pagingOptions: state.configuration.pagingOptions,\n  perPage: state.datagrid.perPage,\n  rows: state.datagridRows,\n  sorting: state.datagrid.sorting,\n  sortingFor: state.datagrid.sortingFor,\n  subject: state.configuration.subject,\n  totalEntries: state.datagrid.totalEntries,\n  lastPrimaryKeyValue: state.datagrid.lastPrimaryKeyValue,\n  visibleColumns: getVisibleColumnsWithDetails(\n    state.configuration.columns,\n    state.datagrid.visibleColumns,\n    state.datagrid.orderedColumns\n  ),\n  visibleColumnsAsShortString: getVisibleColumnsAsShortString(\n    state.configuration.columns,\n    state.datagrid.visibleColumns\n  ),\n  apiUrl: state.configuration.apiUrl,\n  extendedSearchData: state.search.extendedSearchData,\n  selectedIds: state.configuration.selectedIds,\n  selectRowsAllOrNoneChecked:\n    state.configuration.selectedIds.length > 0 &&\n    state.configuration.selectedIds.length >= state.datagridRows.length,\n\n  // from own props\n  DatagridBody: ownProps.DatagridBody,\n  DatagridCheckbox: ownProps.DatagridCheckbox,\n  DatagridFooter: ownProps.DatagridFooter,\n  DatagridHeader: ownProps.DatagridHeader,\n  DatagridTitle: ownProps.DatagridTitle,\n  DatagridWrapper: ownProps.DatagridWrapper,\n  GroupButtons: ownProps.GroupButtons,\n  isMobileDevice: ownProps.isMobileDevice,\n  loadCssThirdParty: ownProps.loadCssThirdParty,\n  configurationSettings: ownProps.configurationSettings,\n  settings: ownProps.settings,\n  title: ownProps.title,\n  skin: ownProps.skin,\n  theme: ownProps.theme,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  // Dispatching a page change only when there is an actual change\n  const pageChangeDispatch = (currentPage, pageValue, lastPage) => {\n    if (currentPage !== pageValue && pageValue <= lastPage && pageValue >= 1) {\n      dispatch({\n        type: datagridActions.PAGE_CHANGE,\n        pageValue: pageValue,\n      });\n    }\n  };\n\n  return {\n    onFilteringModalOpen: () =>\n      dispatch({\n        type: filteringActions.MODAL_OPEN,\n      }),\n    onSelectRowToggle: ({ rowId }) =>\n      dispatch({\n        type: datagridActions.SELECT_ROW_TOGGLE,\n        rowId,\n      }),\n    onSelectRowAllOrNone: () =>\n      dispatch({\n        type: datagridActions.SELECT_ROW_ALL_OR_NONE,\n      }),\n    onExportToExcel: () =>\n      dispatch({\n        type: toolsActions.EXPORT_EXCEL,\n      }),\n    onClearFiltering: () =>\n      dispatch({\n        type: datagridActions.CLEAR_FILTERING,\n      }),\n    onClearCache: () =>\n      dispatch({\n        type: datagridActions.CLEAR_CACHE,\n      }),\n    onClearAllCache: () =>\n      dispatch({\n        type: PURGE,\n      }),\n    onExportToPdf: () =>\n      dispatch({\n        type: toolsActions.EXPORT_PDF,\n      }),\n    onAdd: () =>\n      dispatch({\n        type: formActions.ADD,\n      }),\n    onOrderingReset: () =>\n      dispatch({\n        type: datagridActions.ORDERING_RESET,\n      }),\n    onRefresh: () =>\n      dispatch({\n        type: datagridActions.DATA_FETCH,\n      }),\n    onEdit: ({ primaryKeyValue }) =>\n      dispatch({\n        type: formActions.EDIT,\n        primaryKeyValue,\n      }),\n\n    onRead: ({ primaryKeyValue }) =>\n      dispatch({\n        type: formActions.READ,\n        primaryKeyValue,\n      }),\n\n    onClone: ({ primaryKeyValue }) =>\n      dispatch({\n        type: formActions.CLONE,\n        primaryKeyValue,\n      }),\n    onDelete: ({ primaryKeyValue }) =>\n      dispatch({\n        type: formActions.DELETE,\n        primaryKeyValue,\n      }),\n    onMultipleDeleteModalOpen: () =>\n      dispatch({\n        type: formActions.DELETE_MULTIPLE,\n      }),\n    columnOrdering: ({ columnName, sorting }) =>\n      dispatch({\n        type: datagridActions.COLUMN_ORDERING,\n        columnName,\n        sorting,\n      }),\n\n    columnSearch: ({ columnName, searchValue, searchValueDisplayAs }) =>\n      dispatch({\n        type: datagridActions.COLUMN_SEARCH,\n        columnName,\n        searchValue,\n        searchValueDisplayAs,\n      }),\n    forceSearch: () =>\n      dispatch({\n        type: datagridActions.DATA_FETCH,\n      }),\n    perPageChange: (event) => {\n      dispatch({\n        type: datagridActions.PER_PAGE_CHANGE,\n        perPageValue: parseInt(event.target.value, 10),\n      });\n    },\n    pageChange: (event, currentPage, lastPage) =>\n      pageChangeDispatch(\n        currentPage,\n        parseInt(event.target.value, 10),\n        lastPage\n      ),\n    goToFirstPage: (currentPage, lastPage) =>\n      pageChangeDispatch(currentPage, 1, lastPage),\n    goToPreviousPage: (currentPage, lastPage) =>\n      pageChangeDispatch(currentPage, currentPage - 1, lastPage),\n    goToNextPage: (currentPage, lastPage) =>\n      pageChangeDispatch(currentPage, currentPage + 1, lastPage),\n    goToLastPage: (currentPage, lastPage) =>\n      pageChangeDispatch(currentPage, lastPage, lastPage),\n  };\n};\n\nconst DatagridContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Datagrid);\n\nDatagridContainer.propTypes = {\n  DatagridWrapper: PropTypes.func,\n  DatagridHeader: PropTypes.func,\n  DatagridBody: PropTypes.func,\n  DatagridFooter: PropTypes.func,\n  GroupButtons: PropTypes.func,\n  DatagridCheckbox: PropTypes.func,\n};\n\nexport default DatagridContainer;\n","import { useSelector } from \"react-redux\";\n\nconst selectShowError = (state) => state.error.showError;\nconst selectValidationError = (state) => state.error.validationError;\n\nconst selectFailureError = (state) => state.error.failureError;\n\nconst selectErrorsList = (state) => state.error.errorsList;\n\nconst ErrorDisplay = ({\n  ErrorDialog,\n  closeModal,\n  details,\n  message,\n  summary,\n}) => {\n  const showError = useSelector(selectShowError);\n  const validationError = useSelector(selectValidationError);\n  const failureError = useSelector(selectFailureError);\n  const errorsList = useSelector(selectErrorsList);\n\n  if (ErrorDialog === null) {\n    return null;\n  }\n\n  return (\n    <ErrorDialog\n      closeModal={closeModal}\n      details={details}\n      message={message}\n      showError={showError}\n      summary={summary}\n      validationError={validationError}\n      failureError={failureError}\n      errorsList={errorsList}\n    />\n  );\n};\n\nexport default ErrorDisplay;\n","import { connect } from \"react-redux\";\nimport ErrorDisplay from \"../components/error/error-display\";\nimport { errorActions } from \"../actions/error-actions\";\n\nconst mapStateToProps = (state, ownProps) => ({\n  // From state\n  summary: state.error.summary,\n  message: state.error.message,\n  details: state.error.details,\n\n  // From ownProps\n  ErrorDialog: ownProps.ErrorDialog,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    closeModal: () =>\n      dispatch({\n        type: errorActions.MODAL_CLOSE,\n      }),\n  };\n};\n\nconst ErrorContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ErrorDisplay);\n\nexport default ErrorContainer;\n","import { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport DatagridContainer from \"../containers/datagrid-container\";\nimport { loadCSS } from \"../utils/themes\";\nimport ErrorContainer from \"../containers/error-container\";\nimport FatalErrorMessage from \"./common/error/fatal-error-message\";\n\nconst Main = (props) => {\n  const {\n    isMobileDevice,\n    loadCssIcons,\n    loadCssTheme,\n    loadCssThirdParty,\n    settings,\n    skin,\n    subjectPlural,\n    theme,\n    configurationSettings,\n  } = props;\n\n  const [dynamicComponents, setDynamicComponents] = useState({\n    ColumnsModal: null,\n    DatagridBody: null,\n    DatagridCheckbox: null,\n    DatagridFooter: null,\n    DatagridHeader: null,\n    DatagridTitle: null,\n    DatagridTools: null,\n    DatagridWrapper: null,\n    DeleteMultipleModal: null,\n    DeleteSingleModal: null,\n    ErrorDialog: null,\n    FilteringModal: null,\n    FormDialog: null,\n    GroupButtons: null,\n  });\n  const [fatalError, setFatalError] = useState(false);\n\n  useEffect(() => {\n    const { DatagridTitle } = dynamicComponents;\n\n    // Only run useEffect when the components are not loaded\n    if (DatagridTitle !== null) {\n      return;\n    }\n\n    const loadThemeDynamically = (result) => {\n      const {\n        ColumnsModal,\n        DatagridBody,\n        DatagridCheckbox,\n        DatagridFooter,\n        DatagridHeader,\n        DatagridTitle,\n        DatagridTools,\n        DatagridWrapper,\n        DeleteMultipleModal,\n        DeleteSingleModal,\n        ErrorDialog,\n        FilteringModal,\n        FormDialog,\n        GroupButtons,\n      } = result.default;\n\n      // Check if we are missing any component export\n      let missingComponents = [];\n      Object.keys(dynamicComponents).forEach((componentName) => {\n        if (result.default[componentName] === undefined) {\n          missingComponents.push(componentName);\n        }\n      });\n      if (missingComponents.length > 0) {\n        console.error(\n          `Fatal error: The theme with name \"${theme}\" is not exporting the following components:`,\n          missingComponents\n        );\n        setFatalError(true);\n      }\n\n      setDynamicComponents({\n        ColumnsModal,\n        DatagridBody,\n        DatagridCheckbox,\n        DatagridFooter,\n        DatagridHeader,\n        DatagridTitle,\n        DatagridTools,\n        DatagridWrapper,\n        DeleteMultipleModal,\n        DeleteSingleModal,\n        ErrorDialog,\n        FilteringModal,\n        FormDialog,\n        GroupButtons,\n      });\n    };\n\n    try {\n      if (loadCssIcons) {\n        loadCSS(\"font-awesome-v5\");\n      }\n      if (loadCssTheme) {\n        loadCSS(theme, skin);\n      }\n      switch (theme) {\n        case \"bootstrap-v4\":\n          import(\"../themes/bootstrap-v4\").then(loadThemeDynamically);\n          break;\n        case \"bootstrap-v5\":\n          import(\"../themes/bootstrap-v5\").then(loadThemeDynamically);\n          break;\n        case \"grocery-crud-v1\":\n          import(\"../themes/grocery-crud-v1\").then(loadThemeDynamically);\n          break;\n        case \"materialize-v1\":\n          import(\"../themes/materialize-v1\").then(loadThemeDynamically);\n          break;\n        case \"tailwind-v2\":\n          import(\"../themes/tailwind-v2\").then(loadThemeDynamically);\n          break;\n        default:\n          break;\n      }\n    } catch (error) {\n      console.error(error);\n      setFatalError(true);\n    }\n  }, [theme, loadCssIcons, loadCssTheme, skin, dynamicComponents]);\n\n  const {\n    ColumnsModal,\n    DatagridTitle,\n    DeleteMultipleModal,\n    DeleteSingleModal,\n    ErrorDialog,\n    FilteringModal,\n    FormDialog,\n  } = dynamicComponents;\n\n  if (fatalError) {\n    return <FatalErrorMessage />;\n  }\n\n  if (!DatagridTitle) {\n    return null;\n  }\n\n  try {\n    return (\n      <>\n        <DeleteMultipleModal {...props} />\n        <DeleteSingleModal {...props} />\n        <ErrorContainer\n          ErrorDialog={ErrorDialog}\n          isMobileDevice={isMobileDevice}\n        />\n        <FormDialog {...props} />\n        <FilteringModal {...props} />\n        <ColumnsModal {...props} />\n        <DatagridContainer\n          {...dynamicComponents}\n          loadCssThirdParty={loadCssThirdParty}\n          isMobileDevice={isMobileDevice}\n          settings={settings}\n          title={subjectPlural}\n          configurationSettings={configurationSettings}\n          skin={skin}\n          theme={theme}\n        />\n      </>\n    );\n  } catch (error) {\n    console.log(error);\n    return <FatalErrorMessage />;\n  }\n};\n\nMain.propTypes = {\n  theme: PropTypes.oneOf([\n    \"bootstrap-v4\",\n    \"bootstrap-v5\",\n    \"grocery-crud-v1\",\n    \"materialize-v1\",\n    \"tailwind-v2\",\n  ]),\n  dataUrl: PropTypes.string,\n  uniqueId: PropTypes.string,\n  hasActions: PropTypes.bool,\n};\n\nexport default Main;\n","import { connect } from \"react-redux\";\nimport Main from \"../components/main\";\nimport PropTypes from \"prop-types\";\nimport { formActions } from \"../actions/form-actions\";\nimport { filteringActions } from \"../actions/filtering-actions\";\nimport { columnsActions } from \"../actions/columns-actions\";\nimport { toolsActions } from \"../actions/tools-actions\";\nimport { getVisibleColumnsWithDetails } from \"../utils/columns\";\n\nconst mapStateToProps = (state, ownProps) => ({\n  // From state\n  columns: state.configuration.columns,\n  columnsModalOpen: state.columns.columnsModalOpen,\n  deleteMultipleModalOpen: state.form.deleteMultipleModalOpen,\n  deleteOneModalOpen: state.form.deleteOneModalOpen,\n  extendedSearchData: state.search.extendedSearchData,\n  extendedSearchOperator: state.search.extendedSearchOperator,\n  filteringModalOpen: state.filtering.modalOpen,\n  formFields: state.form.fields,\n  formIsReadOnly: state.form.readOnly,\n  formLoadingOverlay: state.form.loadingOverlay,\n  formModalLoading: state.form.modalLoading,\n  formModalOpen: state.form.modalOpen,\n  formState: state.form.operationState,\n  openInModal: state.configuration.openInModal,\n  primaryKeyValue: state.form.primaryKeyValue,\n  rows: state.datagridRows,\n  selectedIds: state.configuration.selectedIds,\n  subjectPlural: state.configuration.subjectPlural,\n  visibleColumns: state.datagrid.visibleColumns,\n  visibleColumnsWithDetails: getVisibleColumnsWithDetails(\n    state.configuration.columns,\n    state.datagrid.visibleColumns,\n    state.datagrid.orderedColumns\n  ),\n\n  // From ownProps\n  isMobileDevice: ownProps.isMobileDevice,\n  loadCssIcons: ownProps.loadCssIcons,\n  loadCssTheme: ownProps.loadCssTheme,\n  loadCssThirdParty: ownProps.loadCssThirdParty,\n  configurationSettings: ownProps.configurationSettings,\n  skin: ownProps.skin,\n  theme: ownProps.theme,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFilteringSubmit: (data) =>\n      dispatch({\n        type: filteringActions.FORM_SUBMIT,\n        data,\n      }),\n    onFormSubmit: ({ formState, data }) => {\n      switch (formState) {\n        case formActions.EDIT: {\n          dispatch({\n            type: formActions.UPDATE,\n            data,\n          });\n          break;\n        }\n        case formActions.CLONE:\n        case formActions.ADD: {\n          dispatch({\n            type: formActions.INSERT,\n            data,\n          });\n          break;\n        }\n        default:\n          break;\n      }\n    },\n    formModalClose: () =>\n      dispatch({\n        type: formActions.MODAL_CLOSE,\n      }),\n    deleteOneModalClose: () =>\n      dispatch({\n        type: formActions.DELETE_ONE_MODAL_CLOSE,\n      }),\n    deleteMultipleModalClose: () =>\n      dispatch({\n        type: formActions.DELETE_MULTIPLE_MODAL_CLOSE,\n      }),\n    deleteOne: () =>\n      dispatch({\n        type: formActions.DELETE_ACTION_ONE,\n      }),\n    deleteMultiple: () =>\n      dispatch({\n        type: formActions.DELETE_ACTION_MULTIPLE,\n      }),\n    onFilteringModalClose: () =>\n      dispatch({\n        type: filteringActions.MODAL_CLOSE,\n      }),\n    onColumnsModalClose: () =>\n      dispatch({\n        type: columnsActions.MODAL_CLOSE,\n      }),\n    onMultipleDeleteModalClose: () =>\n      dispatch({\n        type: toolsActions.MULTIPLE_DELETE_MODAL_CLOSE,\n      }),\n    toggleVisibleColumn: (columnName, columns) =>\n      dispatch({\n        type: columnsActions.TOGGLE_VISIBLE_COLUMN,\n        columnName,\n        columns,\n      }),\n    selectColumnsAllOrNone: (columns) =>\n      dispatch({\n        type: columnsActions.SELECT_ALL_OR_NONE,\n        columns,\n      }),\n    changeOrdering: (columnName, sourceIndex, destinationIndex) =>\n      dispatch({\n        type: columnsActions.ORDERING_CHANGE,\n        columnName,\n        sourceIndex,\n        destinationIndex,\n      }),\n    resetColumnsOrdering: (columns) =>\n      dispatch({\n        type: columnsActions.RESET_ORDERING,\n        columns,\n      }),\n  };\n};\n\nconst MainContainer = connect(mapStateToProps, mapDispatchToProps)(Main);\n\nMainContainer.propTypes = {\n  theme: PropTypes.oneOf([\n    \"bootstrap-v3\",\n    \"bootstrap-v4\",\n    \"bootstrap-v5\",\n    \"grocery-crud-v1\",\n    \"materialize-v1\",\n    \"tailwind-v2\",\n  ]),\n};\n\nexport default MainContainer;\n","import { useEffect, useState } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { JssProvider } from \"react-jss\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport MainContainer from \"./containers/main-container\";\nimport { CSS_VARIABLE_PREFIX } from \"./constants/prefix\";\nimport FatalErrorMessage from \"./components/common/error/fatal-error-message\";\nimport { isMobileDevice } from \"./utils/device-helper\";\n\nconst createGenerateId = () => {\n  let counter = 0;\n\n  return (rule) => `gc-${rule.key}-${counter++}`;\n};\n\nconst generateId = createGenerateId();\n\nconst App = (props) => {\n  const {\n    groceryCrudStore,\n    groceryCrudPersistor,\n    theme: themeProp, // if theme is defined as prop then we are not offering any dynamic implementation of the theme\n    loadCssTheme,\n    loadCssIcons,\n    loadCssThirdParty,\n    skin,\n    settings,\n    configurationSettings,\n    publishEvents,\n  } = props;\n\n  const [theme, setTheme] = useState(\n    themeProp || localStorage.getItem(\"gc-theme\") || \"bootstrap-v5\"\n  );\n\n  // TODO: We will need to move this to a separate folder and have a better structure\n  useEffect(() => {\n    const prefix = CSS_VARIABLE_PREFIX;\n\n    const headTag = document.getElementsByTagName(\"head\")[0];\n    const styleTag = document.createElement(\"style\");\n    styleTag.id = \"gc-root-css-variables\";\n\n    const niceBlack = \"#181a1b\";\n    const justWhite = \"#ffffff\";\n    const selectedBackgroundColor = \"#2684FF\";\n\n    if (skin === \"dark\") {\n      styleTag.innerHTML = `\\n:root { \n        ${prefix}border-separator-color: #383d3f;\n        ${prefix}table-hover-background: #2b2f31;\n        ${prefix}input-light-background: ${niceBlack};\n        ${prefix}light-background: ${niceBlack};\n        ${prefix}dark-background: #2b2f31;\n        ${prefix}dark-background-text-color: #e8e6e3;\n        ${prefix}default-background: #181a1b;\n        ${prefix}default-text-color: #d1cdc;\n        ${prefix}emphasis-background-color: #2394fd;\n        ${prefix}emphasis-text-color: ${justWhite};\n        ${prefix}selected-background-color: ${selectedBackgroundColor};\n        ${prefix}selected-text-color: ${justWhite};\n        ${prefix}input-background-color: #333333;\n      }\\n`;\n    } else {\n      styleTag.innerHTML = `\\n:root { \n        ${prefix}border-separator-color: #dee2e6;\n        ${prefix}table-hover-background: #dddddd;\n        ${prefix}input-light-background: ${justWhite};\n        ${prefix}light-background: ${justWhite};\n        ${prefix}dark-background: #dddddd;\n        ${prefix}dark-background-text-color: #212529;\n        ${prefix}default-background: ${justWhite};\n        ${prefix}default-text-color: #212529;\n        ${prefix}emphasis-background-color: #2394fd;\n        ${prefix}emphasis-text-color: ${justWhite};\n        ${prefix}selected-background-color: ${selectedBackgroundColor};\n        ${prefix}selected-text-color: ${justWhite};\n        ${prefix}input-background-color: ${justWhite};\n      }\\n`;\n    }\n\n    headTag.appendChild(styleTag);\n  }, [skin]);\n\n  try {\n    const MainContainerWithTheme = () => (\n      <MainContainer\n        isMobileDevice={isMobileDevice()}\n        loadCssIcons={loadCssIcons}\n        loadCssTheme={loadCssTheme}\n        loadCssThirdParty={loadCssThirdParty}\n        settings={settings}\n        skin={skin}\n        theme={theme}\n        configurationSettings={configurationSettings}\n        publishEvents={publishEvents}\n      />\n    );\n\n    return (\n      <>\n        {groceryCrudPersistor ? (\n          <JssProvider generateId={generateId}>\n            <Provider store={groceryCrudStore}>\n              <PersistGate loading={null} persistor={groceryCrudPersistor}>\n                <MainContainerWithTheme />\n              </PersistGate>\n            </Provider>\n          </JssProvider>\n        ) : (\n          <JssProvider generateId={generateId}>\n            <Provider store={groceryCrudStore}>\n              <MainContainerWithTheme />\n            </Provider>\n          </JssProvider>\n        )}\n\n        {themeProp ? null : (\n          <div>\n            <select\n              value={theme}\n              onChange={(event) => {\n                localStorage.setItem(\"gc-theme\", event.target.value);\n                setTheme(event.target.value);\n                window.location.reload();\n              }}\n              style={{\n                display: \"block\",\n                marginTop: \"20px\",\n              }}\n              className=\"form-control form-select\"\n            >\n              <option value=\"bootstrap-v4\">bootstrap-v4</option>\n              <option value=\"bootstrap-v5\">bootstrap-v5</option>\n              <option value=\"grocery-crud-v1\">grocery-crud-v1</option>\n              <option value=\"materialize-v1\">materialize-v1</option>\n              <option value=\"tailwind-v2\">tailwind-v2</option>\n            </select>\n          </div>\n        )}\n      </>\n    );\n  } catch (error) {\n    console.log(error);\n    return <FatalErrorMessage />;\n  }\n};\n\nexport default App;\n","export const isMobileDevice = () => {\n  // For now the only indication of a mobile device is the window size.\n  if (window && window.matchMedia) {\n    return window.matchMedia(\"(max-width: 768px)\").matches;\n  }\n\n  return false;\n};\n","import { publishEvent } from \"../utils/events\";\nimport { datagridActions } from \"../actions/datagrid-actions\";\n\nconst externalEvents = (publishEvents) => {\n  let firstTimeEvent = true;\n  return () => (next) => (action) => {\n    next(action);\n\n    const { type: actionType, ...rest } = action;\n\n    // We would like to trigger external events only when the configuration is enabled\n    if (!publishEvents) {\n      return;\n    }\n\n    // We don't want to publish events for core actions\n    if (\n      actionType.startsWith(\"@@\") ||\n      actionType.startsWith(\"persist\") ||\n      actionType.endsWith(\"REHYDRATE_VALIDATION\")\n    ) {\n      return;\n    }\n\n    if (firstTimeEvent === true && actionType === datagridActions.DATA_RENDER) {\n      firstTimeEvent = false;\n      publishEvent(\"gcrud.datagrid.ready\");\n    }\n\n    publishEvent(\"gcrud.\" + actionType.replace(/\\//, \".\"), { ...rest });\n  };\n};\n\nexport default externalEvents;\n","import { formActions } from \"../actions/form-actions\";\n\nconst callbackEvents = (configurationSettings) => {\n  return (store) => (next) => (action) => {\n    next(action);\n\n    const state = store.getState();\n\n    switch (action.type) {\n      case formActions.UPDATE: {\n        if (configurationSettings.callbackBeforeUpdate) {\n          configurationSettings.callbackBeforeUpdate({\n            data: action.data,\n            primaryKeyValue: state.form.primaryKeyValue,\n          });\n        }\n\n        break;\n      }\n\n      case formActions.INSERT: {\n        if (configurationSettings.callbackBeforeInsert) {\n          configurationSettings.callbackBeforeInsert({\n            data: action.data,\n          });\n        }\n\n        break;\n      }\n\n      case formActions.UPDATE_SUCCESS: {\n        if (configurationSettings.callbackAfterUpdate) {\n          configurationSettings.callbackAfterUpdate({\n            primaryKeyValue: action.primaryKeyValue,\n          });\n        }\n\n        break;\n      }\n\n      case formActions.INSERT_SUCCESS: {\n        if (configurationSettings.callbackAfterInsert) {\n          configurationSettings.callbackAfterInsert({\n            primaryKeyValue: action.primaryKeyValue,\n          });\n        }\n\n        break;\n      }\n\n      case formActions.DELETE_ACTION_ONE: {\n        if (configurationSettings.callbackBeforeDelete) {\n          configurationSettings.callbackBeforeDelete({\n            selectedIds: [state.form.primaryKeyValue],\n          });\n        }\n        break;\n      }\n\n      case formActions.DELETE_ACTION_MULTIPLE_SUCCESS:\n      case formActions.DELETE_ACTION_ONE_SUCCESS: {\n        if (configurationSettings.callbackAfterDelete) {\n          configurationSettings.callbackAfterDelete({});\n        }\n        break;\n      }\n\n      case formActions.DELETE_ACTION_MULTIPLE: {\n        if (configurationSettings.callbackBeforeDelete) {\n          configurationSettings.callbackBeforeDelete({\n            selectedIds: state.configuration.selectedIds,\n          });\n        }\n        break;\n      }\n\n      default:\n        break;\n    }\n  };\n};\n\nexport default callbackEvents;\n","import storage from \"redux-persist/lib/storage\";\nimport { StrictMode } from \"react\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { persistConstants } from \"./constants/persist\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport groceryCrudReducers from \"./reducers\";\nimport serverRequestMiddleware from \"./middlewares/server-request-middleware\";\nimport urlMiddleware from \"./middlewares/url-middleware\";\nimport multipleSelectionsMiddleware from \"./middlewares/multiple-selections-middleware\";\nimport persistMiddleware from \"./middlewares/persist-middleware\";\nimport { configurationActions } from \"./actions/configuration-actions\";\nimport App from \"./App\";\nimport { render } from \"react-dom\";\nimport externalEvents from \"./middlewares/external-events\";\nimport callbackEvents from \"./middlewares/callback-events\";\n\nconst groceryCrudLoader = (myElement, settings = {}) => {\n  const {\n    apiUrl,\n    landingPageUrl,\n    uniqueId,\n    theme,\n    loadCssTheme = \"true\",\n    loadCssIcons = \"true\",\n    loadCssThirdParty = \"true\",\n    skin,\n    masterPrimaryKeyValue,\n    rememberState = \"true\",\n  } = myElement.dataset;\n\n  const publishEvents = myElement.dataset.publishEvents === \"true\";\n  const hasCache = rememberState === \"true\";\n\n  const {\n    callbackBeforeInsert,\n    callbackBeforeUpdate,\n    callbackAfterInsert,\n    callbackAfterUpdate,\n    callbackBeforeDelete,\n    callbackAfterDelete,\n    onRowUpdate,\n    onRowUnmount,\n    addFields,\n    editFields,\n    cloneFields,\n    readFields,\n    actionButtons,\n    actionButtonsMultiple,\n  } = settings;\n\n  let configurationSettings = {\n    callbackBeforeInsert,\n    callbackBeforeUpdate,\n    callbackAfterInsert,\n    callbackAfterUpdate,\n    callbackBeforeDelete,\n    callbackAfterDelete,\n    onRowUpdate,\n    onRowUnmount,\n    addFields,\n    editFields,\n    cloneFields,\n    readFields,\n    actionButtons,\n    actionButtonsMultiple,\n  };\n\n  const persistConfig = {\n    key: uniqueId,\n    storage,\n    blacklist: persistConstants.blacklistedKeys,\n  };\n\n  let persistedReducer;\n\n  if (hasCache) {\n    persistedReducer = persistReducer(persistConfig, groceryCrudReducers);\n  }\n\n  const groceryCrudStore = configureStore({\n    reducer: hasCache ? persistedReducer : groceryCrudReducers,\n    middleware: [\n      serverRequestMiddleware,\n      urlMiddleware,\n      multipleSelectionsMiddleware,\n      persistMiddleware,\n      externalEvents(publishEvents),\n      callbackEvents(configurationSettings),\n    ],\n    devTools: true,\n  });\n\n  groceryCrudStore.dispatch({\n    type: configurationActions.MAIN_CONFIGURATION,\n    apiUrl,\n    landingPageUrl,\n    masterPrimaryKeyValue,\n  });\n\n  // If there is no cache we don't have to wait for any persist events to start\n  // with the init fetch\n  if (!hasCache) {\n    groceryCrudStore.dispatch({\n      type: configurationActions.INIT_FETCH,\n    });\n  }\n\n  let groceryCrudPersistor;\n\n  if (hasCache) {\n    groceryCrudPersistor = persistStore(groceryCrudStore);\n  }\n\n  render(\n    <StrictMode>\n      <App\n        {...{\n          groceryCrudPersistor,\n          groceryCrudStore,\n          loadCssIcons: loadCssIcons === \"true\",\n          loadCssTheme: loadCssTheme === \"true\",\n          loadCssThirdParty: loadCssThirdParty === \"true\",\n          settings,\n          skin,\n          theme,\n          configurationSettings,\n          publishEvents,\n        }}\n      />\n    </StrictMode>,\n    myElement\n  );\n};\n\nif (window) {\n  // Also make it available globally\n  window.groceryCrudLoader = groceryCrudLoader;\n}\n\nexport default groceryCrudLoader;\n","/*eslint no-unused-vars: [\"error\", { \"vars\": \"local\" }]*/\n/* global __webpack_public_path__ */\n\n// Fixing warning: \"Symbol.observable as defined by Redux and Redux DevTools do not match\".\n// This below line will polyfill Symbol.observable\n// eslint-disable-next-line\nimport Symbol_observable from \"symbol-observable\";\n\nrequire(\"./helpers/form-set-field-value\");\n\nconst groceryCrudLoader = require(\"./grocery-crud-loader\").default;\nif (window.GroceryCrudConfiguration?.assetsUrl) {\n  // eslint-disable-next-line\n  __webpack_public_path__ = window.GroceryCrudConfiguration.assetsUrl;\n}\n\n// We want to check that only when we explicitly have an autoLoad = false configuration to not autoload our app.\n// On any other case (e.g. the GroceryCrudConfiguration is missing) we would like to auto-trigger\n// the loading of the app.\nif (window.GroceryCrudConfiguration?.autoLoad !== false) {\n  document.querySelectorAll(\".grocery-crud\").forEach((myElement) => {\n    groceryCrudLoader(myElement);\n  });\n}\n","import { EVENT_SET_FIELD_VALUE, publishEvent } from \"../utils/events\";\n\nconst groceryCrudSetFieldValue = (fieldName, fieldValue) => {\n  publishEvent(EVENT_SET_FIELD_VALUE, {\n    fieldName,\n    fieldValue,\n  });\n};\n\nif (window) {\n  // Also make it available globally\n  window.groceryCrudSetFieldValue = groceryCrudSetFieldValue;\n}\n\nexport default groceryCrudSetFieldValue;\n"],"sourceRoot":""}