{"version":3,"sources":["themes/bootstrap-v5/skin/columns/columns-modal.skin.js","themes/bootstrap-v5/skin/columns/columns-ordering.skin.js","themes/bootstrap-v5/columns/columns-ordering.jsx","themes/bootstrap-v5/columns/columns-visibility.jsx","themes/bootstrap-v5/datagrid/datagrid-column-width.jsx","themes/bootstrap-v5/columns/columns-modal.jsx","themes/bootstrap-v5/skin/datagrid/body.skin.js","themes/bootstrap-v5/datagrid/datagrid-row.jsx","themes/bootstrap-v5/datagrid/datagrid-body.jsx","themes/bootstrap-v5/skin/datagrid/checkbox.skin.js","themes/bootstrap-v5/datagrid/datagrid-checkbox.jsx","themes/bootstrap-v5/skin/datagrid/footer.skin.js","components/datagrid/button/MultipleButtons.jsx","themes/bootstrap-v5/skin/buttons/buttons.skin.js","themes/bootstrap-v5/buttons/button.jsx","themes/bootstrap-v5/datagrid/datagrid-footer.jsx","themes/bootstrap-v5/skin/datagrid/header.skin.js","themes/bootstrap-v5/datagrid/datagrid-header.jsx","themes/bootstrap-v5/skin/datagrid/title.skin.js","themes/bootstrap-v5/datagrid/datagrid-title.jsx","themes/bootstrap-v5/skin/datagrid/tools.skin.js","themes/bootstrap-v5/skin/buttons/button-dropdown.skin.js","themes/bootstrap-v5/buttons/button-dropdown.jsx","themes/bootstrap-v5/datagrid/datagrid-tools.jsx","themes/bootstrap-v5/skin/datagrid/wrapper.skin.js","themes/bootstrap-v5/datagrid/datagrid-wrapper.jsx","themes/bootstrap-v5/skin/form-dialog/form-dialog.skin.js","themes/bootstrap-v5/delete-multiple/delete-multiple-modal.jsx","themes/bootstrap-v5/delete-single/delete-single-modal.jsx","themes/bootstrap-v5/skin/error-dialog/error-dialog.skin.js","themes/bootstrap-v5/error/error-dialog.jsx","themes/bootstrap-v5/skin/filtering/filtering-dialog.skin.js","themes/bootstrap-v5/skin/filtering/filtering.skin.js","themes/bootstrap-v5/theme-common/modal-close-button.jsx","themes/bootstrap-v5/filtering/filtering.jsx","themes/bootstrap-v5/filtering/filtering-modal.jsx","themes/bootstrap-v5/form/form.jsx","themes/bootstrap-v5/form/modal.jsx","themes/bootstrap-v5/form/full-page.jsx","themes/bootstrap-v5/form/form-dialog.jsx","themes/bootstrap-v5/buttons/group-buttons.jsx","themes/bootstrap-v5/index.js","selectors/column-width.js","themes/bootstrap-v5/skin/datagrid/datagrid-mini.skin.js","themes/bootstrap-v5/datagrid/datagrid-mini-grid.jsx","utils/column-width.js","components/common/master-detail.jsx","components/common/input.jsx","components/common/input-container.jsx"],"names":["columnsModalSkin","opacity","composes","display","columnsModalOpen","animation","cursor","tabs","orderingBox","position","padding","background","color","border","columnsOrderingSkin","description","selectOrderedColumns","state","datagrid","orderedColumns","useStyles","createUseStyles","ColumnsOrdering","columns","visibleColumns","changeOrdering","resetColumnsOrdering","classes","useSelector","className","i18n","t","type","onClick","onDragEnd","source","destination","draggableId","index","droppableId","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","map","columnName","find","column","name","columnIndex","draggableProps","dragHandleProps","includes","displayAs","placeholder","ColumnsVisibility","selectColumnsAllOrNone","toggleVisibleColumn","onChange","checked","length","miniGridSkin","selectColumnWidth","columnWidth","DatagridColumnWidth","dispatch","useDispatch","columnWidthActions","RESET_COLUMN_WIDTH","numRow","dataType","fieldTypes","INVISIBLE","style","width","maxWidth","draggable","onDragStart","columnWidthOnDragStart","onDrag","columnWidthOnDrag","event","columnWidthOnDragEnd","columnWidthValue","replace","for","value","columnChangeWidthAction","target","TAB_VISIBILITY","TAB_ORDERING","TAB_WIDTH","ColumnsModal","onColumnsModalClose","visibleColumnsWithDetails","useState","tabSelected","setTabSelection","tabIndex","role","classNames","active","bodySkin","overflow","height","selectLocalCode","configuration","locale","selectDateFormat","dateFormat","selectHasMasterDetail","hasMasterDetail","selectOpenedRows","masterDetail","openedRows","DatagridRow","lastPrimaryKeyValue","rowData","hasActions","settings","configurationSettings","onRowUpdate","onRowUnmount","rightSideActions","skin","theme","rest","primaryKeyValue","grocery_crud_extras","useLayoutEffect","ActionsTd","backendActionButtons","actionButtons","isRowOpened","rowId","undefined","masterDetailActions","CLOSE_ROW","OPEN_ROW","icon","formatDatagridValue","fieldName","fieldOptions","options","permittedValues","colSpan","defaultProps","selectRows","datagridRows","selectRightSideActions","DatagridBody","props","rows","checkboxSkin","checkbox","DatagridCheckbox","footerSkin","footer","alignItems","justifyContent","isMobileDevice","paddingRight","pagination","margin","borderRadius","borderLeft","borderRight","transform","loader","MultipleButtons","buttons","Button","button","label","iconName","href","url","newTab","link","buttonsSkin","title","rel","DatagridFooter","filteredTotalEntries","goToFirstPage","goToLastPage","goToNextPage","goToPreviousPage","lastPage","currentPage","page","pageChange","totalEntries","perPage","perPageChange","forceSearch","pagingLoading","pagingOptions","initError","onClearAllCache","hasBottomLeftButtons","hasBottomRightButtons","datagridButtonsBottomLeft","datagridButtonsBottomRight","hasBottomButtons","pageOption","disabled","onKeyUp","key","headerSkin","DatagridHeader","columnOrdering","columnSearch","columnSearchValues","columnSearchValuesDisplayAs","extendedSearchData","onMultipleDeleteModalOpen","onSelectRowAllOrNone","actionButtonHasText","hasActionButtonsMultiple","deleteMultiple","selectRowsAllOrNoneChecked","selectedIds","sorting","sortingFor","loadCssThirdParty","backendActionButtonsMultiple","actionButtonsMultiple","hasQuickSearch","isAnyColumnSearchable","some","isSearchable","hasMultipleActions","hasSecondaryHeader","getMultipleActionUrl","hasOrdering","InputSearchComponent","getSearchInputComponent","getClassNamesByDataType","searchValue","searchValueDisplayAs","requireForceSearchOnChange","titleSkin","DatagridTitle","toolsSkin","buttonDropdown","opened","right","direction","DROPDOWN_DIRECTION","RIGHT","leftSpace","ButtonDropdown","buttonIcon","buttonLabel","buttonDropdownRef","useRef","setOpen","onBlur","setTimeout","preventDefault","text","DatagridTools","apiUrl","hasAdd","onAdd","onClearCache","onClearFiltering","onFilteringModalOpen","onOrderingReset","onRefresh","subject","urlUniqueHash","visibleColumnsAsShortString","urlHistory","landingPageUrl","hasSettings","hasPrint","hasFilters","hasColumnsButton","hasExportData","hasExportPdf","hasExportExcel","hasTopLeftButtons","hasTopRightButtons","datagridButtonsTopLeft","datagridButtonsTopRight","hasTopButtons","uniqueHashPrefix","dataForExport","getTitleTranslation","formActions","ADD","getFiltersTranslation","columnsActions","MODAL_OPEN","onColumnsModalOpen","printUrl","excelExportUrl","pdfExportUrl","error","console","log","wrapperSkin","wrapper","Object","keys","DatagridWrapper","children","formDialog","to","formModalOpen","deleteOneModalOpen","deleteMultipleModalOpen","openInModal","outline","form","formLoadingOverlay","content","DeleteMultipleModal","deleteMultipleModalClose","getDeleteConfirmationMessage","filter","row","DeleteSingleModal","deleteOneModalClose","deleteOne","errorDialog","showError","ErrorDialog","closeModal","details","message","validationError","failureError","errorsList","serverError","values","defaultValue","formFields","filteringDialogSkin","filteringModalOpen","filteringSkin","ModalCloseButton","Filtering","onFilteringModalClose","onSubmitCallback","onSubmit","extendedSearchOperator","useForm","defaultValues","basic_operator","extended_search","control","handleSubmit","getValues","useFieldArray","fields","append","remove","insert","numberOfFields","data","extendedSearch","forEach","searchData","push","deepCloneArray","errors","e","render","field","item","oldValues","newValue","oldColumn","newColumn","doTriggerFilterRefresh","getFilterValueFromDataType","option","firstName","doTriggerFilterValueRefresh","emptyFilterMapping","originalValue","SearchInputComponent","getJssNameFromType","required","id","FilteringModal","onFilteringSubmit","selectCloseModalOnSave","closeModalOnSave","Form","readOnly","formIsReadOnly","formModalClose","formState","modalLoading","onFormSubmit","publishEvents","register","setValue","useEffect","handleCustomEvent","detail","fieldValue","subscribeEvent","EVENT_SET_FIELD_VALUE","unsubscribeEvent","transformedData","formSubmitTransformation","inputContainerClassName","jssClasses","labelClassName","labelContainerClassName","TOGGLE_CLOSE_MODAL_ON_SAVE","Modal","formModalLoading","FullPage","FormDialog","groupButtonSkin","GroupButtons","maxActionButtons","maxButtons","mobile","desktop","areWeGroupingButtons","__button","themeComponents","widthChanging","DatagridMiniGrid","previousSiblingElement","parentThElement","startOffsetX","startClientX","currentTarget","closest","previousSibling","left","clientX","clientWidth","offsetLeft","CHANGE_WIDTH","removeProperty","Math","max","document","body","selectMasterDetailApiUrl","groceryCrudLoader","require","default","MasterDetail","datagridRef","current","uniqueId","Date","now","selectPrimaryKeyValue","Input","isDependencyField","isNullable","valueLabel","InputComponent","getComponentFromDataType","getMountingCallbacks","onMount","onUnmount","InputContainer","inputClassName","isReadOnly","HIDDEN","htmlFor","isRequired"],"mappings":"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","file":"static/js/96.08bdcefd.chunk.js","sourcesContent":["const columnsModalSkin = {\n  \"@keyframes fadeIn\": {\n    \"0%\": { opacity: \"0.1\" },\n    \"66%\": { opacity: \" 0.5\" },\n    \"100%\": { opacity: \"1\" },\n  },\n  \"columns-modal\": {\n    composes: \"modal\",\n    \".modal&\": {\n      display: ({ columnsModalOpen }) => (columnsModalOpen ? \"block\" : \"none\"),\n      opacity: \"0\",\n      animation: ({ columnsModalOpen }) =>\n        columnsModalOpen ? \"$fadeIn 0.15s ease 0s normal forwards 1\" : \"none\",\n    },\n  },\n  \"close-button\": {\n    composes: \"btn-close\",\n    \"button&\": {\n      cursor: \"pointer\",\n    },\n  },\n  \"horizontal-line\": {\n    \"border-top\": \"1px solid var(--gc-border-separator-color)\",\n    \"margin-top\": \"3px\",\n    \"margin-bottom\": \"3px\",\n  },\n  tabs: {\n    composes: \"nav nav-pills\",\n    \".nav-pills&\": {\n      \"margin-bottom\": \"10px\",\n      \"list-style\": \"none\",\n      \"padding-inline-start\": \"unset\",\n    },\n  },\n  \"tab-button\": {\n    composes: \"nav-link\",\n    \".nav-link&\": {\n      cursor: \"pointer\",\n    },\n  },\n};\n\nexport default columnsModalSkin;\n","const orderingBox = {\n  position: \"relative\",\n  padding: \"16px\",\n  \"margin-bottom\": \"5px\",\n  background: \"var(--gc-light-background)\",\n  color: \"var(--gc-default-text-color)\",\n  border: \"1px solid var(--gc-border-separator-color)\",\n  \"border-radius\": \"4px\",\n};\n\nconst columnsOrderingSkin = {\n  \"ordering-box\": {\n    ...orderingBox,\n  },\n  \"ordering-box-disabled\": {\n    ...orderingBox,\n    opacity: 0.5,\n  },\n  \"horizontal-line\": {\n    \"border-top\": \"1px solid var(--gc-border-separator-color)\",\n    \"margin-top\": \"5px\",\n    \"margin-bottom\": \"5px\",\n  },\n  \"droppable-area\": {\n    background: \"var(--gc-light-background)\",\n    padding: \"4px\",\n  },\n  \"is-dragging-over\": {\n    background: \"var(--gc-dark-background)\",\n    padding: \"4px\",\n  },\n  description: {\n    display: \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"space-between\",\n  },\n};\n\nexport default columnsOrderingSkin;\n","import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { useSelector } from \"react-redux\";\nimport { createUseStyles } from \"react-jss\";\nimport columnsOrderingSkin from \"../skin/columns/columns-ordering.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\n\nconst selectOrderedColumns = (state) => state.datagrid.orderedColumns;\n\nconst useStyles = createUseStyles(columnsOrderingSkin);\n\nconst ColumnsOrdering = ({\n  columns,\n  visibleColumns,\n  changeOrdering,\n  resetColumnsOrdering,\n}) => {\n  const classes = useStyles();\n  const orderedColumns = useSelector(selectOrderedColumns);\n\n  return (\n    <>\n      <div className={classes[\"description\"]}>\n        <div>{i18n.t(\"ordering_drag_column\")}</div>\n        <div>\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-dark\"\n            onClick={() => resetColumnsOrdering(columns)}\n          >\n            {i18n.t(\"reset_ordering\")}\n          </button>\n        </div>\n      </div>\n      <div className={classes[\"horizontal-line\"]}></div>\n      <DragDropContext\n        onDragEnd={({ source, destination, draggableId }) => {\n          if (source && destination && source.index !== destination.index) {\n            changeOrdering(draggableId, source.index, destination.index);\n          }\n        }}\n      >\n        <Droppable droppableId=\"columns\">\n          {(provided, snapshot) => (\n            <div\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n              className={\n                snapshot.isDraggingOver\n                  ? classes[\"is-dragging-over\"]\n                  : classes[\"droppable-area\"]\n              }\n            >\n              {orderedColumns\n                .map((columnName) =>\n                  columns.find((column) => column.name === columnName)\n                )\n                .map((column, columnIndex) => (\n                  <Draggable\n                    draggableId={column.name}\n                    index={columnIndex}\n                    key={column.name}\n                  >\n                    {(provided) => (\n                      <div\n                        key={column.name}\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        className={\n                          visibleColumns.includes(column.name)\n                            ? classes[\"ordering-box\"]\n                            : classes[\"ordering-box-disabled\"]\n                        }\n                      >\n                        {column.displayAs}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </>\n  );\n};\n\nexport default ColumnsOrdering;\n","import PropTypes from \"prop-types\";\nimport i18n from \"../../../utils/locale/i18n\";\n\nconst ColumnsVisibility = ({\n  columns,\n  selectColumnsAllOrNone,\n  toggleVisibleColumn,\n  visibleColumns,\n  classes,\n}) => {\n  return (\n    <>\n      <div>\n        <label>\n          <input\n            type=\"checkbox\"\n            onChange={() => selectColumnsAllOrNone(columns)}\n            checked={visibleColumns.length === columns.length}\n          />\n          &nbsp;&nbsp;{i18n.t(\"select_all\")}\n        </label>\n      </div>\n      <div className={classes[\"horizontal-line\"]}></div>\n      {columns.map((column) => (\n        <div key={column.name}>\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={visibleColumns.includes(column.name)}\n              onChange={() => toggleVisibleColumn(column.name, columns)}\n            />\n            &nbsp;&nbsp;\n            {column.displayAs}\n          </label>\n        </div>\n      ))}\n    </>\n  );\n};\n\nColumnsVisibility.propTypes = {\n  classes: PropTypes.object,\n};\n\nexport default ColumnsVisibility;\n","import { createUseStyles } from \"react-jss\";\nimport miniGridSkin from \"../skin/datagrid/datagrid-mini.skin\";\nimport PropTypes from \"prop-types\";\nimport { fieldTypes } from \"../../../constants/field-types\";\nimport {\n  columnChangeWidthAction,\n  columnWidthOnDrag,\n  columnWidthOnDragEnd,\n  columnWidthOnDragStart,\n} from \"../../../utils/column-width\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { columnWidthActions } from \"../../../actions/column-width-actions\";\nimport i18n from \"../../../utils/locale/i18n\";\n\nconst useStyles = createUseStyles(miniGridSkin);\nconst selectColumnWidth = (state) => state.columnWidth;\n\nconst DatagridColumnWidth = ({ visibleColumns }) => {\n  const columnWidth = useSelector(selectColumnWidth);\n\n  const classes = useStyles({ columnWidth });\n\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <div className={classes[\"description\"]}>\n        <div>{i18n.t(\"column_width_drag\")}&nbsp;</div>\n        <div>\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-dark\"\n            onClick={() =>\n              dispatch({\n                type: columnWidthActions.RESET_COLUMN_WIDTH,\n              })\n            }\n          >\n            {i18n.t(\"reset_column_width\")}\n          </button>\n        </div>\n      </div>\n      <div className={classes[\"scrolling-wrapper\"]}>\n        <table className={classes[\"interactive-grid\"]}>\n          <thead>\n            <tr>\n              {visibleColumns.map((column, numRow) =>\n                column.dataType === fieldTypes.INVISIBLE ? null : (\n                  <th key={column.name}>\n                    <div\n                      className={classes[\"header-column\"]}\n                      style={{\n                        width: columnWidth[column.name],\n                        maxWidth: columnWidth[column.name],\n                      }}\n                    >\n                      <div\n                        className={\n                          visibleColumns[numRow + 1]\n                            ? classes[\"width-changing\"]\n                            : classes[\"width-changing-last\"]\n                        }\n                        style={{\n                          display: \"none\",\n                        }}\n                      ></div>\n                      <div\n                        className={\n                          visibleColumns[numRow + 1]\n                            ? classes[\"width-changing\"]\n                            : classes[\"width-changing-last\"]\n                        }\n                        draggable={true}\n                        onDragStart={columnWidthOnDragStart}\n                        onDrag={columnWidthOnDrag}\n                        onDragEnd={(event) =>\n                          columnWidthOnDragEnd(event, column.name, dispatch)\n                        }\n                      ></div>\n                      <span>{column.displayAs}</span>\n                    </div>\n                  </th>\n                )\n              )}\n            </tr>\n          </thead>\n        </table>\n      </div>\n      <div>\n        <br />\n        <p>{i18n.t(\"column_width_set_width_manually\")}</p>\n      </div>\n      <div>\n        {visibleColumns.map((column) => {\n          const columnWidthValue = columnWidth[column.name]\n            ? columnWidth[column.name].replace(\"px\", \"\")\n            : \"\";\n\n          return (\n            <div className=\"mb-3 row\" key={column.name}>\n              <label\n                className=\"col-sm-2 col-form-label\"\n                for={`gc-column-width-${column.name}`}\n              >\n                {column.displayAs}\n              </label>\n              <div className=\"col-sm-2\">\n                <input\n                  type=\"number\"\n                  value={columnWidthValue}\n                  name={`gc-column-width-${column.name}`}\n                  className=\"form-control\"\n                  onChange={(event) =>\n                    columnChangeWidthAction(\n                      column.name,\n                      event.target.value,\n                      dispatch\n                    )\n                  }\n                />\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nDatagridColumnWidth.propTypes = {\n  rows: PropTypes.array,\n  visibleColumns: PropTypes.array,\n};\n\nexport default DatagridColumnWidth;\n","import { createUseStyles } from \"react-jss\";\nimport classNames from \"classnames\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport columnsModalSkin from \"../skin/columns/columns-modal.skin\";\nimport ColumnsOrdering from \"./columns-ordering\";\nimport ColumnsVisibility from \"./columns-visibility\";\nimport { useState } from \"react\";\nimport DatagridColumnWidth from \"../datagrid/datagrid-column-width\";\n\nconst useStyles = createUseStyles(columnsModalSkin);\n\nconst TAB_VISIBILITY = \"tab-visibility\";\nconst TAB_ORDERING = \"tab-ordering\";\nconst TAB_WIDTH = \"tab-width\";\n\nconst ColumnsModal = ({\n  columns,\n  columnsModalOpen,\n  onColumnsModalClose,\n  selectColumnsAllOrNone,\n  toggleVisibleColumn,\n  visibleColumns,\n  visibleColumnsWithDetails,\n  changeOrdering,\n  resetColumnsOrdering,\n}) => {\n  const [tabSelected, setTabSelection] = useState(TAB_VISIBILITY);\n  const classes = useStyles({ columnsModalOpen });\n\n  return (\n    <div className={classes[\"columns-modal\"]} tabIndex=\"-1\" role=\"dialog\">\n      <div\n        className={classNames(\"modal-dialog\", {\n          \"modal-l\": tabSelected !== TAB_WIDTH,\n          \"w-100 mw-100\": tabSelected === TAB_WIDTH,\n        })}\n        role=\"document\"\n      >\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{i18n.t(\"columns\")}</h5>\n            <button\n              type=\"button\"\n              className={classes[\"close-button\"]}\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n              onClick={onColumnsModalClose}\n            />\n          </div>\n          <div className=\"modal-body\">\n            {columnsModalOpen && (\n              <>\n                <ul className={classes[\"tabs\"]}>\n                  <li className=\"nav-item\">\n                    <button\n                      className={classNames(classes[\"tab-button\"], {\n                        active: tabSelected === TAB_VISIBILITY,\n                      })}\n                      onClick={() => {\n                        setTabSelection(TAB_VISIBILITY);\n                      }}\n                    >\n                      {i18n.t(\"tab_visibility\")}\n                    </button>\n                  </li>\n                  <li className=\"nav-item\">\n                    <button\n                      className={classNames(classes[\"tab-button\"], {\n                        active: tabSelected === TAB_ORDERING,\n                      })}\n                      onClick={() => {\n                        setTabSelection(TAB_ORDERING);\n                      }}\n                    >\n                      {i18n.t(\"tab_ordering\")}\n                    </button>\n                  </li>\n                  <li className=\"nav-item\">\n                    <button\n                      className={classNames(classes[\"tab-button\"], {\n                        active: tabSelected === TAB_WIDTH,\n                      })}\n                      onClick={() => {\n                        setTabSelection(TAB_WIDTH);\n                      }}\n                    >\n                      {i18n.t(\"tab_width\")}\n                    </button>\n                  </li>\n                </ul>\n                {tabSelected === TAB_VISIBILITY && (\n                  <ColumnsVisibility\n                    columns={columns}\n                    selectColumnsAllOrNone={selectColumnsAllOrNone}\n                    toggleVisibleColumn={toggleVisibleColumn}\n                    visibleColumns={visibleColumns}\n                    classes={classes}\n                  />\n                )}\n                {tabSelected === TAB_ORDERING && (\n                  <ColumnsOrdering\n                    columns={columns}\n                    toggleVisibleColumn={toggleVisibleColumn}\n                    visibleColumns={visibleColumns}\n                    changeOrdering={changeOrdering}\n                    resetColumnsOrdering={resetColumnsOrdering}\n                  />\n                )}\n                {tabSelected === TAB_WIDTH && (\n                  <DatagridColumnWidth\n                    visibleColumns={visibleColumnsWithDetails}\n                  />\n                )}\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ColumnsModal;\n","const bodySkin = {\n  \"@keyframes flash\": {\n    \"0%\": { opacity: \"1\" },\n    \"25%\": { opacity: \"0\" },\n    \"50%\": { opacity: \"1\" },\n    \"75%\": { opacity: \"0\" },\n    \"100%\": { opacity: \"1\" },\n  },\n  \"animation-flash\": {\n    animation: \"$flash 1s ease 0s normal forwards 1\",\n    position: \"relative\",\n    \"z-index\": \"1\",\n  },\n  \"column-text\": {\n    \"&>span\": {\n      \"text-overflow\": \"ellipsis\",\n      \"white-space\": \"nowrap\",\n      overflow: \"hidden\",\n    },\n    \"align-items\": \"center\",\n    \"max-width\": \"350px\",\n    \"min-width\": \"0\", // small hack so we can have flex to work with ellipsis\n    \"vertical-align\": \"middle\",\n    display: \"flex\",\n    height: \"38px\",\n  },\n  \"column-action\": {\n    \"white-space\": \"nowrap\",\n    \"border-left\": \"none\",\n  },\n  \"table-body\": {\n    \".table &\": {\n      \"border-top\": \"none\",\n    },\n  },\n  \"open-row\": {\n    cursor: \"pointer\",\n    padding: \"0 5px\",\n    \"min-width\": \"28px\",\n  },\n};\n\nexport default bodySkin;\n","import { useLayoutEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ActionsColumn from \"../../../components/datagrid/body/actions-column\";\nimport { formatDatagridValue } from \"../../../utils/datagrid\";\nimport bodySkin from \"../skin/datagrid/body.skin\";\nimport { createUseStyles } from \"react-jss\";\nimport Icon from \"../../../components/common/icon\";\nimport { masterDetailActions } from \"../../../actions/master-detail-actions\";\nimport MasterDetail from \"../../../components/common/master-detail\";\n\nconst selectLocalCode = (state) => state.configuration.locale;\nconst selectDateFormat = (state) => state.configuration.dateFormat;\nconst selectHasMasterDetail = (state) => state.configuration.hasMasterDetail;\nconst selectColumnWidth = (state) => state.columnWidth;\nconst selectOpenedRows = (state) => state.masterDetail.openedRows;\n\nconst useStyles = createUseStyles(bodySkin);\n\nconst DatagridRow = ({\n  lastPrimaryKeyValue,\n  rowData,\n  hasActions,\n  visibleColumns,\n  settings,\n  configurationSettings: { onRowUpdate, onRowUnmount },\n  rightSideActions,\n  skin,\n  theme,\n  ...rest\n}) => {\n  const locale = useSelector(selectLocalCode);\n  const dateFormat = useSelector(selectDateFormat);\n  const columnWidth = useSelector(selectColumnWidth);\n  const hasMasterDetail = useSelector(selectHasMasterDetail);\n  const openedRows = useSelector(selectOpenedRows);\n\n  const dispatch = useDispatch();\n\n  const classes = useStyles();\n\n  const {\n    grocery_crud_extras: { primaryKeyValue },\n  } = rowData;\n\n  useLayoutEffect(() => {\n    if (onRowUpdate) {\n      onRowUpdate({ primaryKeyValue });\n    }\n\n    return () => {\n      if (onRowUnmount) {\n        onRowUnmount({ primaryKeyValue });\n      }\n    };\n  }, [primaryKeyValue, rowData, onRowUpdate, onRowUnmount]);\n\n  const ActionsTd = () => (\n    <td key=\"column__action\" className={classes[\"column-action\"]}>\n      <ActionsColumn\n        {...rest}\n        backendActionButtons={rowData.grocery_crud_extras.actionButtons}\n        actionButtons={settings.actionButtons}\n        primaryKeyValue={primaryKeyValue}\n      />\n    </td>\n  );\n\n  const isRowOpened =\n    hasMasterDetail && openedRows.find((rowId) => rowId === primaryKeyValue);\n\n  return (\n    <>\n      <tr\n        className={\n          lastPrimaryKeyValue &&\n          lastPrimaryKeyValue === rowData.grocery_crud_extras.primaryKeyValue\n            ? classes[\"animation-flash\"]\n            : undefined\n        }\n      >\n        {hasActions && !rightSideActions && visibleColumns.length > 0 && (\n          <ActionsTd />\n        )}\n        {visibleColumns.map((column, numRow) => (\n          <td key={column.name}>\n            <div\n              className={classes[\"column-text\"]}\n              style={{\n                width: columnWidth[column.name],\n                maxWidth: columnWidth[column.name],\n              }}\n            >\n              {hasMasterDetail && numRow === 0 && (\n                <>\n                  <span\n                    className={classes[\"open-row\"]}\n                    onClick={() =>\n                      dispatch({\n                        type: isRowOpened\n                          ? masterDetailActions.CLOSE_ROW\n                          : masterDetailActions.OPEN_ROW,\n                        rowId: primaryKeyValue,\n                      })\n                    }\n                  >\n                    <Icon icon={isRowOpened ? \"caret-down\" : \"caret-right\"} />\n                  </span>\n                </>\n              )}\n              {formatDatagridValue(rowData[column.name], column.dataType, {\n                dateFormat,\n                fieldName: column.name,\n                fieldOptions: column.options,\n                locale,\n                permittedValues: column.permittedValues,\n                primaryKeyValue,\n              })}\n            </div>\n          </td>\n        ))}\n        {hasActions && rightSideActions && visibleColumns.length > 0 && (\n          <ActionsTd />\n        )}\n      </tr>\n      {isRowOpened && (\n        <tr>\n          <td colSpan={visibleColumns.length + (hasActions ? 1 : 0)}>\n            <MasterDetail\n              primaryKeyValue={primaryKeyValue}\n              skin={skin}\n              theme={theme}\n            />\n          </td>\n        </tr>\n      )}\n    </>\n  );\n};\n\nDatagridRow.propTypes = {\n  settings: PropTypes.object,\n  configurationSettings: PropTypes.object,\n};\n\nDatagridRow.defaultProps = {\n  settings: {},\n  configurationSettings: {},\n};\n\nexport default DatagridRow;\n","import PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { createUseStyles } from \"react-jss\";\nimport bodySkin from \"../skin/datagrid/body.skin\";\nimport DatagridRow from \"./datagrid-row\";\n\nconst useStyles = createUseStyles(bodySkin);\n\nconst selectRows = (state) => state.datagridRows;\nconst selectRightSideActions = (state) => state.configuration.rightSideActions;\n\nconst DatagridBody = (props) => {\n  const rows = useSelector(selectRows);\n  const rightSideActions = useSelector(selectRightSideActions);\n\n  const classes = useStyles();\n\n  return (\n    <tbody className={classes[\"table-body\"]}>\n      {rows.map((rowData, numRow) => (\n        <DatagridRow\n          key={numRow}\n          rowData={rowData}\n          rightSideActions={rightSideActions}\n          {...props}\n        />\n      ))}\n    </tbody>\n  );\n};\n\nDatagridBody.propTypes = {\n  rows: PropTypes.array,\n};\n\nexport default DatagridBody;\n","const checkboxSkin = {\n  checkbox: {\n    \"margin-right\": \"10px\",\n    display: \"inline-flex\",\n  },\n};\n\nexport default checkboxSkin;\n","import { createUseStyles } from \"react-jss\";\nimport checkboxSkin from \"../skin/datagrid/checkbox.skin\";\n\nconst useStyles = createUseStyles(checkboxSkin);\n\nconst DatagridCheckbox = ({ onChange, checked }) => {\n  const classes = useStyles();\n\n  return (\n    <input\n      type=\"checkbox\"\n      className={classes[\"checkbox\"]}\n      onChange={onChange}\n      checked={checked}\n    />\n  );\n};\n\nexport default DatagridCheckbox;\n","const footerSkin = {\n  footer: {\n    alignItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: \"16px 5px\",\n    \"@media (max-width: 768px)\": {\n      \"flex-direction\": \"column\",\n    },\n  },\n  \"footer-bottom-border\": {\n    \"border-color\": \"var(--gc-border-separator-color)\",\n    \"border-width\": \"1px\",\n    \"border-style\": \"none none solid none\",\n    width: \"100%\",\n    height: \"1px\",\n  },\n  \"footer-error\": {\n    display: \"flex\",\n    \"flex-direction\": \"column\",\n    padding: \"16px 5px\",\n    \"border-color\": \"var(--gc-border-separator-color)\",\n    \"border-width\": \"1px\",\n    \"border-style\": \"none none solid none\",\n  },\n  \"footer-child\": {\n    display: \"flex\",\n    \"flex-direction\": ({ isMobileDevice }) =>\n      isMobileDevice ? \"column\" : \"row\",\n    \"& > div\": {\n      display: \"flex\",\n      \"flex-direction\": \"row\",\n      \"align-items\": \"center\",\n      padding: \"5px\",\n      \"justify-content\": \"end\",\n    },\n    \"& > div > div\": {\n      paddingRight: \"5px\",\n    },\n  },\n  pagination: {\n    composes: \"pagination\",\n    \".pagination&\": {\n      margin: \"0\",\n      \"list-style\": \"none\",\n    },\n  },\n  \"page-link\": {\n    composes: \"page-link\",\n    \".page-link&\": {\n      cursor: \"pointer\",\n    },\n  },\n  \"page-number\": {\n    composes: \"form-control\",\n    \"&.form-control\": {\n      borderRadius: \"0\",\n      width: \"100px\",\n      borderLeft: \"none\",\n      borderRight: \"none\",\n    },\n  },\n  \"@keyframes spin\": {\n    \"0%\": { transform: \"rotate(0deg)\" },\n    \"100%\": { transform: \"rotate(360deg)\" },\n  },\n  loader: {\n    border: \"4px solid #f3f3f3\",\n    \"border-radius\": \"50%\",\n    \"border-top\": \"4px solid #3498db\",\n    width: \"16px\",\n    height: \"16px\",\n    \"-webkit-animation\": \"$spin 2s linear infinite\" /* Safari */,\n    animation: \"$spin 2s linear infinite\",\n    \"margin-right\": \"10px\",\n  },\n  \"per-page-dropdown\": {\n    composes: \"form-control form-select\",\n    \"min-width\": \"70px\",\n  },\n};\n\nexport default footerSkin;\n","const MultipleButtons = ({ buttons, Button }) => {\n  return (\n    <>\n      {buttons.map((button, index) => {\n        return (\n          <Button\n            key={index}\n            label={button.label}\n            icon={button.iconName}\n            href={button.url}\n            newTab={button.newTab}\n            link={true}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default MultipleButtons;\n","const buttonsSkin = {\n  \"simple-button\": {\n    composes: \"btn btn-outline-dark\",\n    \"margin-left\": \"5px\",\n  },\n};\n\nexport default buttonsSkin;\n","import Icon from \"../../../components/common/icon\";\nimport buttonsSkin from \"../skin/buttons/buttons.skin\";\nimport { createUseStyles } from \"react-jss\";\n\nconst useStyles = createUseStyles(buttonsSkin);\n\nconst Button = ({\n  onClick,\n  icon,\n  label,\n  link = false,\n  href,\n  newTab = false,\n}) => {\n  const classes = useStyles();\n\n  if (link) {\n    return (\n      <a\n        className={classes[\"simple-button\"]}\n        onClick={onClick}\n        href={href}\n        title={label}\n        target={newTab ? \"_blank\" : undefined}\n        rel=\"noreferrer\"\n      >\n        {icon && (\n          <>\n            <Icon icon={icon}></Icon>&nbsp;\n          </>\n        )}\n        {label}\n      </a>\n    );\n  }\n\n  return (\n    <button\n      className={classes[\"simple-button\"]}\n      onClick={onClick}\n      title={label}\n    >\n      {icon && (\n        <>\n          <Icon icon={icon}></Icon>&nbsp;\n        </>\n      )}\n      {label}\n    </button>\n  );\n};\n\nexport default Button;\n","import { createUseStyles } from \"react-jss\";\nimport { useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport Icon from \"../../../components/common/icon\";\nimport DatagridPagingItemsLabel from \"../../../components/datagrid/footer/datagrid-paging-items-label\";\nimport footerSkin from \"../skin/datagrid/footer.skin\";\nimport MultipleButtons from \"../../../components/datagrid/button/MultipleButtons\";\nimport Button from \"../buttons/button\";\n\nconst useStyles = createUseStyles(footerSkin);\n\nconst DatagridFooter = (props) => {\n  const classes = useStyles(props);\n\n  const {\n    filteredTotalEntries,\n    goToFirstPage,\n    goToLastPage,\n    goToNextPage,\n    goToPreviousPage,\n    lastPage,\n    page: currentPage,\n    pageChange,\n    totalEntries,\n    perPage,\n    perPageChange,\n    forceSearch,\n    pagingLoading,\n    pagingOptions,\n    initError,\n    onClearAllCache,\n  } = props;\n\n  const hasBottomLeftButtons = useSelector(\n    (state) => state.configuration.hasBottomLeftButtons\n  );\n  const hasBottomRightButtons = useSelector(\n    (state) => state.configuration.hasBottomRightButtons\n  );\n\n  const datagridButtonsBottomLeft = useSelector(\n    (state) => state.configuration.datagridButtonsBottomLeft\n  );\n\n  const datagridButtonsBottomRight = useSelector(\n    (state) => state.configuration.datagridButtonsBottomRight\n  );\n\n  const hasBottomButtons = hasBottomLeftButtons || hasBottomRightButtons;\n\n  if (initError) {\n    return (\n      <div className={classes[\"footer-error\"]}>\n        <p>\n          Couldn't load initial data sorry 😞 . This message usually appears\n          when the server is down or there is an error in the code! If the issue\n          still persist, consider clearing the cache.\n        </p>\n        <p>\n          <button className=\"btn btn-outline-dark\" onClick={onClearAllCache}>\n            Clear Cache\n          </button>\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div className={classes.footer}>\n        <div className={classes[\"footer-child\"]}>\n          {pagingOptions.length > 0 && (\n            <div>\n              <div>Show</div>\n              <div>\n                <select\n                  className={classes[\"per-page-dropdown\"]}\n                  onChange={perPageChange}\n                  value={perPage}\n                >\n                  {pagingOptions.map((pageOption) => (\n                    <option key={pageOption} value={pageOption}>\n                      {pageOption}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div>entries</div>\n            </div>\n          )}\n        </div>\n        <div className={classes[\"footer-child\"]}>\n          {pagingLoading && (\n            <div>\n              <div className={classes.loader} />\n            </div>\n          )}\n          {filteredTotalEntries && !pagingLoading ? (\n            <div>\n              <DatagridPagingItemsLabel\n                currentPage={currentPage}\n                totalEntries={totalEntries}\n                perPage={perPage}\n                filteredTotalEntries={filteredTotalEntries}\n              />\n            </div>\n          ) : null}\n          <div>\n            <ul className={classes.pagination}>\n              <li\n                className={classNames(\"page-item\", {\n                  disabled: currentPage === 1,\n                })}\n              >\n                <button\n                  className={classes[\"page-link\"]}\n                  onClick={() => goToFirstPage(currentPage, lastPage)}\n                >\n                  <Icon icon=\"step-backward\" />\n                </button>\n              </li>\n              <li\n                className={classNames(\"page-item\", {\n                  disabled: currentPage === 1,\n                })}\n              >\n                <button\n                  className={classes[\"page-link\"]}\n                  onClick={() => goToPreviousPage(currentPage, lastPage)}\n                >\n                  <Icon icon=\"chevron-left\" />\n                </button>\n              </li>\n              <li className=\"page-item\">\n                <input\n                  type=\"number\"\n                  className={classes[\"page-number\"]}\n                  value={currentPage}\n                  onChange={(event) => pageChange(event, currentPage, lastPage)}\n                  disabled={filteredTotalEntries === 0}\n                  onKeyUp={(event) => {\n                    if (event.key === \"Enter\") {\n                      forceSearch();\n                    }\n                  }}\n                />\n              </li>\n              <li\n                className={classNames(\"page-item\", {\n                  disabled: currentPage === lastPage,\n                })}\n              >\n                <button\n                  className={classes[\"page-link\"]}\n                  onClick={() => goToNextPage(currentPage, lastPage)}\n                >\n                  <Icon icon=\"chevron-right\" />\n                </button>\n              </li>\n              <li\n                className={classNames(\"page-item\", {\n                  disabled: currentPage === lastPage,\n                })}\n              >\n                <button\n                  className={classes[\"page-link\"]}\n                  onClick={() => goToLastPage(currentPage, lastPage)}\n                >\n                  <Icon icon=\"step-forward\" />\n                </button>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      {hasBottomButtons && (\n        <div className={classes.footer}>\n          <div className={classes[\"footer-child\"]}>\n            <MultipleButtons\n              Button={Button}\n              buttons={datagridButtonsBottomLeft}\n            />\n          </div>\n          <div className={classes[\"footer-child\"]}>\n            <MultipleButtons\n              Button={Button}\n              buttons={datagridButtonsBottomRight}\n            />\n          </div>\n        </div>\n      )}\n      <div className={classes[\"footer-bottom-border\"]}></div>\n    </>\n  );\n};\n\nDatagridFooter.propTypes = {\n  page: PropTypes.number,\n};\n\nexport default DatagridFooter;\n","const headerSkin = {\n  \"search-column\": {\n    \"min-width\": \"160px\",\n    \"vertical-align\": \"middle\",\n  },\n  \"multiple-action-button\": {\n    composes: \"btn btn-default btn-outline-dark\",\n    display: \"inline-flex\",\n    \"margin-right\": \"5px\",\n    \"vertical-align\": \"middle\",\n    \"align-items\": \"center\",\n  },\n  \"table-th-with-ordering\": {\n    cursor: \"pointer\",\n  },\n  \"actions-column-header\": {\n    \"align-items\": \"center\",\n    display: \"flex\",\n    height: \"39px\",\n  },\n  \"with-ordering\": {\n    display: \"flex\",\n    \"justify-content\": \"space-between\",\n    \"align-items\": \"center\",\n    position: \"relative\",\n  },\n\n  \"input-text\": {\n    composes: \"form-control\",\n  },\n  \"input-select\": {\n    composes: \"form-control form-select\",\n  },\n  \"input-select-search\": {},\n  \"column-action\": {\n    \"white-space\": \"nowrap\",\n    \"border-left\": \"none\",\n  },\n};\n\nexport default headerSkin;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { createUseStyles } from \"react-jss\";\n\nimport i18n from \"../../../utils/locale/i18n\";\nimport headerSkin from \"../skin/datagrid/header.skin\";\nimport Icon from \"../../../components/common/icon\";\nimport {\n  getSearchInputComponent,\n  requireForceSearchOnChange,\n} from \"../../../utils/field-types\";\nimport { getClassNamesByDataType } from \"../../../utils/datagrid\";\nimport DatagridCheckbox from \"./datagrid-checkbox\";\nimport { getMultipleActionUrl } from \"../../../utils/urls\";\n\nconst useStyles = createUseStyles(headerSkin);\nconst selectRightSideActions = (state) => state.configuration.rightSideActions;\n\nconst DatagridHeader = (props) => {\n  const {\n    columnOrdering,\n    columnSearch,\n    columnSearchValues,\n    columnSearchValuesDisplayAs,\n    extendedSearchData,\n    forceSearch,\n    hasActions,\n    onMultipleDeleteModalOpen,\n    onSelectRowAllOrNone,\n    options: { actionButtonHasText, hasActionButtonsMultiple, deleteMultiple },\n    selectRowsAllOrNoneChecked,\n    selectedIds,\n    sorting,\n    sortingFor,\n    visibleColumns,\n    loadCssThirdParty,\n    isMobileDevice,\n    backendActionButtonsMultiple,\n    configurationSettings: { actionButtonsMultiple },\n  } = props;\n\n  const classes = useStyles(props);\n\n  const rightSideActions = useSelector(selectRightSideActions);\n\n  const hasQuickSearch = extendedSearchData.length === 0;\n\n  const isAnyColumnSearchable = visibleColumns.some(\n    (column) => column.isSearchable\n  );\n\n  const hasMultipleActions =\n    (deleteMultiple || hasActionButtonsMultiple) && !isMobileDevice;\n  const hasSecondaryHeader = isAnyColumnSearchable || hasMultipleActions;\n\n  const ActionsTd = () => (\n    <td className={classes[\"column-action\"]}>\n      <div className={classes[\"actions-column-header\"]}>\n        {hasMultipleActions && (\n          <>\n            <DatagridCheckbox\n              onChange={onSelectRowAllOrNone}\n              checked={selectRowsAllOrNoneChecked}\n            />\n            {selectedIds.length > 0 && (\n              <>\n                <button\n                  type=\"button\"\n                  className={classes[\"multiple-action-button\"]}\n                  onClick={onMultipleDeleteModalOpen}\n                >\n                  <Icon icon=\"trash\" />\n                  &nbsp;&nbsp;\n                  {actionButtonHasText && (\n                    <span>{i18n.t(\"action_delete\")}</span>\n                  )}\n                </button>\n                {hasActionButtonsMultiple &&\n                  backendActionButtonsMultiple.map((button) => (\n                    <a\n                      className={classes[\"multiple-action-button\"]}\n                      href={getMultipleActionUrl({ button, selectedIds })}\n                      target={button.newTab ? \"_blank\" : undefined}\n                      rel=\"noreferrer\"\n                    >\n                      <Icon icon={button.iconName} />\n                      &nbsp;&nbsp;\n                      <span>{button.label}</span>\n                    </a>\n                  ))}\n                {actionButtonsMultiple &&\n                  actionButtonsMultiple.map((button) => (\n                    <button\n                      className={classes[\"multiple-action-button\"]}\n                      onClick={() => {\n                        if (button.onClick) {\n                          button.onClick({ selectedIds });\n                        }\n                      }}\n                    >\n                      <Icon icon={button.iconName} />\n                      &nbsp;&nbsp;\n                      <span>{button.label}</span>\n                    </button>\n                  ))}\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </td>\n  );\n\n  return (\n    <thead>\n      <tr>\n        {hasActions && !rightSideActions && visibleColumns.length > 0 && (\n          <th className={classes[\"column-action\"]}>{i18n.t(\"actions\")}</th>\n        )}\n        {visibleColumns.map((column, numRow) => (\n          <th\n            className={\n              column.hasOrdering ? classes[\"table-th-with-ordering\"] : undefined\n            }\n            key={column.name}\n            onClick={() => {\n              if (column.hasOrdering) {\n                columnOrdering({\n                  columnName: column.name,\n                  sorting:\n                    sorting === \"\" || sorting === \"desc\" ? \"asc\" : \"desc\",\n                });\n              }\n            }}\n          >\n            <div className={classes[\"with-ordering\"]}>\n              <span>{column.displayAs}</span>\n              {column.hasOrdering && (\n                <>\n                  {sortingFor === column.name ? (\n                    <Icon\n                      icon={\n                        sorting === \"asc\"\n                          ? \"sort-amount-down-alt\"\n                          : \"sort-amount-down\"\n                      }\n                    />\n                  ) : (\n                    <Icon icon=\"sort\" />\n                  )}\n                </>\n              )}\n            </div>\n          </th>\n        ))}\n        {hasActions && rightSideActions && visibleColumns.length > 0 && (\n          <th>{i18n.t(\"actions\")}</th>\n        )}\n      </tr>\n      {hasSecondaryHeader && (\n        <tr>\n          {hasActions && !rightSideActions && visibleColumns.length > 0 && (\n            <ActionsTd />\n          )}\n          {visibleColumns.map((column) => {\n            const InputSearchComponent = getSearchInputComponent(\n              column.dataType\n            );\n\n            return (\n              <td key={column.name} className={classes[\"search-column\"]}>\n                {hasQuickSearch && column.isSearchable && (\n                  <InputSearchComponent\n                    className={\n                      classes[getClassNamesByDataType(column.dataType)]\n                    }\n                    placeholder={i18n.t(\"quick_search\")}\n                    permittedValues={column.permittedValues}\n                    loadCssThirdParty={loadCssThirdParty}\n                    onChange={(event) => {\n                      columnSearch({\n                        columnName: column.name,\n                        searchValue:\n                          typeof event.target.value === \"object\"\n                            ? event.target.value.key\n                            : event.target.value,\n                        searchValueDisplayAs:\n                          typeof event.target.value === \"object\"\n                            ? event.target.value.displayAs\n                            : \"\",\n                      });\n                      if (\n                        requireForceSearchOnChange(column.dataType) === true\n                      ) {\n                        forceSearch();\n                      }\n                    }}\n                    onKeyUp={(event) => {\n                      if (event.key === \"Enter\") {\n                        forceSearch();\n                      }\n                    }}\n                    value={\n                      columnSearchValues[column.name]\n                        ? columnSearchValues[column.name]\n                        : \"\"\n                    }\n                    displayAs={\n                      columnSearchValuesDisplayAs[column.name]\n                        ? columnSearchValuesDisplayAs[column.name]\n                        : \"\"\n                    }\n                    fieldName={column.name}\n                  />\n                )}\n              </td>\n            );\n          })}\n          {hasActions && rightSideActions && visibleColumns.length > 0 && (\n            <ActionsTd />\n          )}\n        </tr>\n      )}\n    </thead>\n  );\n};\n\nDatagridHeader.propTypes = {\n  actionButtonsMultiple: PropTypes.array,\n  columnSearchValues: PropTypes.object,\n  columnSearchValuesDisplayAs: PropTypes.object,\n  configurationSettings: PropTypes.object,\n  extendedSearchData: PropTypes.array,\n  hasActions: PropTypes.bool,\n  options: PropTypes.object,\n  selectedIds: PropTypes.array,\n  visibleColumns: PropTypes.array,\n};\n\nDatagridHeader.defaultProps = {\n  actionButtonsMultiple: [],\n  columnSearchValues: {},\n  columnSearchValuesDisplayAs: {},\n  configurationSettings: { actionButtonsMultiple: [] },\n  extendedSearchData: [],\n  hasActions: false,\n  options: { actionButtonHasText: true, hasActionButtonsMultiple: false },\n  selectedIds: [],\n  visibleColumns: [],\n};\n\nexport default DatagridHeader;\n","const bodySkin = {\n  title: {\n    composes: \"gc-caption-title\",\n    background: \"var(--gc-dark-background)\",\n    color: \"var(--gc-dark-background-text-color)\",\n    width: \"100%\",\n    padding: \"5px 10px\",\n    \"text-align\": \"left\",\n  },\n};\n\nexport default bodySkin;\n","import { createUseStyles } from \"react-jss\";\nimport titleSkin from \"../skin/datagrid/title.skin\";\n\nconst useStyles = createUseStyles(titleSkin);\n\nconst DatagridTitle = (props) => {\n  const { title } = props;\n\n  const classes = useStyles(props);\n\n  return <div className={classes[\"title\"]}>{title ? title : <>&nbsp;</>}</div>;\n};\n\nexport default DatagridTitle;\n","const toolsSkin = {\n  \"datagrid-tools\": {\n    position: \"relative\",\n    padding: \"10px\",\n    display: \"flex\",\n    \"justify-content\": \"space-between\",\n  },\n  \"simple-button\": {\n    composes: \"btn btn-outline-dark\",\n    \"margin-left\": \"5px\",\n  },\n  \"success-button\": {\n    composes: \"btn btn-success\",\n    \"margin-left\": \"5px\",\n  },\n  \"danger-button\": {\n    composes: \"btn btn-danger\",\n    \"margin-left\": \"5px\",\n  },\n};\n\nexport default toolsSkin;\n","import { DROPDOWN_DIRECTION } from \"../../../../constants/dropdown\";\n\nconst buttonDropdown = {\n  \"dropdown-menu\": {\n    composes: \"dropdown-menu\",\n    \".dropdown-menu&\": {\n      \"margin-top\": \"38px\",\n      display: ({ opened }) => (opened ? \"block\" : \"none\"),\n      right: ({ direction }) =>\n        direction === DROPDOWN_DIRECTION.RIGHT ? \"0\" : \"auto\",\n    },\n  },\n  \"dropdown-menu-container\": {\n    composes: \"btn-group\",\n    \"margin-left\": ({ leftSpace }) => (leftSpace ? \"5px\" : \"0\"),\n  },\n  \"dropdown-menu-button\": {\n    composes: \"btn btn-outline-dark dropdown-toggle\",\n  },\n};\n\nexport default buttonDropdown;\n","import PropTypes from \"prop-types\";\nimport { createUseStyles } from \"react-jss\";\nimport { useState, useRef } from \"react\";\n\nimport buttonDropdown from \"../skin/buttons/button-dropdown.skin\";\nimport Icon from \"../../../components/common/icon\";\n\nconst useStyles = createUseStyles(buttonDropdown);\n\nconst ButtonDropdown = ({\n  buttons,\n  buttonIcon,\n  buttonLabel,\n  direction,\n  leftSpace,\n}) => {\n  const buttonDropdownRef = useRef(null);\n  const [opened, setOpen] = useState(false);\n\n  function openToggle() {\n    setOpen(!opened);\n  }\n\n  function close(event) {\n    // Having enough time to close in case you press any click into the dropdown\n    setTimeout(() => {\n      setOpen(false);\n    }, 200);\n  }\n\n  const classes = useStyles({ opened, direction, leftSpace });\n\n  if (buttons.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={classes[\"dropdown-menu-container\"]} ref={buttonDropdownRef}>\n      <button\n        className={classes[\"dropdown-menu-button\"]}\n        onClick={openToggle}\n        onBlur={close}\n      >\n        {buttonIcon && (\n          <>\n            <Icon icon={buttonIcon} />\n            &nbsp;\n          </>\n        )}\n        {buttonLabel}&nbsp;\n        <Icon icon=\"caret\" />\n      </button>\n\n      <ul className={classes[\"dropdown-menu\"]}>\n        {buttons.map((button) => (\n          <li key={button.key}>\n            <a\n              href={button.url ? button.url : \"\"}\n              target={button.newTab ? \"_blank\" : undefined}\n              className=\"dropdown-item\"\n              rel=\"noreferrer\"\n              onClick={\n                button.onClick\n                  ? (event) => {\n                      event.preventDefault();\n                      if (button.onClick) {\n                        button.onClick({\n                          primaryKeyValue: button.primaryKeyValue,\n                        });\n                      }\n                    }\n                  : undefined\n              }\n            >\n              {button.icon && (\n                <>\n                  <Icon icon={button.icon} />\n                  &nbsp;&nbsp;\n                </>\n              )}\n              {button.text}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nButtonDropdown.propTypes = {\n  buttons: PropTypes.array,\n  buttonIcon: PropTypes.string,\n  buttonLabel: PropTypes.string,\n  direction: PropTypes.oneOf([\"left\", \"right\"]),\n  leftSpace: PropTypes.bool,\n};\n\nButtonDropdown.defaultProps = {\n  buttons: [],\n  buttonIcon: \"\",\n  buttonLabel: \"\",\n  direction: \"left\",\n  leftSpace: false,\n};\n\nexport default ButtonDropdown;\n","import { createUseStyles } from \"react-jss\";\nimport toolsSkin from \"../skin/datagrid/tools.skin\";\nimport Icon from \"../../../components/common/icon\";\nimport {\n  getFiltersTranslation,\n  getTitleTranslation,\n} from \"../../../utils/translations-helper\";\nimport { formActions } from \"../../../actions/form-actions\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport ButtonDropdown from \"../buttons/button-dropdown\";\nimport { DROPDOWN_DIRECTION } from \"../../../constants/dropdown\";\nimport { excelExportUrl, pdfExportUrl, printUrl } from \"../../../utils/urls\";\nimport Button from \"../buttons/button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { columnsActions } from \"../../../actions/columns-actions\";\nimport FatalErrorMessage from \"../../../components/common/error/fatal-error-message\";\nimport MultipleButtons from \"../../../components/datagrid/button/MultipleButtons\";\n\nconst useStyles = createUseStyles(toolsSkin);\n\nconst onColumnsModalOpen = (dispatch) =>\n  dispatch({\n    type: columnsActions.MODAL_OPEN,\n  });\n\nconst DatagridTools = (props) => {\n  const {\n    apiUrl,\n    columnSearchValues,\n    extendedSearchData,\n    hasAdd,\n    onAdd,\n    onClearCache,\n    onClearFiltering,\n    onFilteringModalOpen,\n    onOrderingReset,\n    onRefresh,\n    sorting,\n    sortingFor,\n    subject,\n    urlUniqueHash,\n    visibleColumnsAsShortString,\n  } = props;\n\n  const classes = useStyles(props);\n  const dispatch = useDispatch();\n\n  const urlHistory = useSelector((state) => state.configuration.urlHistory);\n  const landingPageUrl = useSelector(\n    (state) => state.configuration.landingPageUrl\n  );\n\n  const hasSettings = useSelector((state) => state.configuration.hasSettings);\n  const hasPrint = useSelector((state) => state.configuration.hasPrint);\n  const hasFilters = useSelector((state) => state.configuration.hasFilters);\n  const hasColumnsButton = useSelector(\n    (state) => state.configuration.hasColumnsButton\n  );\n  const hasExportData = useSelector(\n    (state) => state.configuration.hasExportData\n  );\n  const hasExportPdf = useSelector((state) => state.configuration.hasExportPdf);\n  const hasExportExcel = useSelector(\n    (state) => state.configuration.hasExportExcel\n  );\n\n  const hasTopLeftButtons = useSelector(\n    (state) => state.configuration.hasTopLeftButtons\n  );\n  const hasTopRightButtons = useSelector(\n    (state) => state.configuration.hasTopRightButtons\n  );\n\n  const datagridButtonsTopLeft = useSelector(\n    (state) => state.configuration.datagridButtonsTopLeft\n  );\n\n  const datagridButtonsTopRight = useSelector(\n    (state) => state.configuration.datagridButtonsTopRight\n  );\n\n  const hasTopButtons = hasTopLeftButtons || hasTopRightButtons;\n  // TODO: To pass the urlUniqueHash at the future\n  const uniqueHashPrefix = urlUniqueHash ? `/${urlUniqueHash}` : \"\";\n\n  const dataForExport = {\n    apiUrl,\n    columnSearchValues,\n    sorting,\n    sortingFor,\n    visibleColumnsAsShortString,\n    extendedSearchData,\n  };\n\n  try {\n    return hasTopButtons ? (\n      <div className={classes[\"datagrid-tools\"]}>\n        <div>\n          {hasTopLeftButtons && (\n            <>\n              {hasAdd && (\n                <Button\n                  link={true}\n                  href={\n                    urlHistory ? `${landingPageUrl}${uniqueHashPrefix}/add` : \"\"\n                  }\n                  icon=\"plus\"\n                  label={getTitleTranslation(formActions.ADD, subject)}\n                  onClick={(event) => {\n                    event.preventDefault();\n                    onAdd();\n                  }}\n                />\n              )}\n            </>\n          )}\n          <MultipleButtons Button={Button} buttons={datagridButtonsTopLeft} />\n        </div>\n        <div>\n          {hasTopRightButtons && (\n            <>\n              <MultipleButtons\n                Button={Button}\n                buttons={datagridButtonsTopRight}\n              />\n              {hasFilters && (\n                <button\n                  className={\n                    extendedSearchData.length > 0\n                      ? classes[\"success-button\"]\n                      : classes[\"simple-button\"]\n                  }\n                  onClick={onFilteringModalOpen}\n                >\n                  <Icon icon=\"filter\"></Icon>&nbsp;\n                  {getFiltersTranslation(extendedSearchData.length)}\n                </button>\n              )}\n              {hasFilters && extendedSearchData.length > 0 && (\n                <button\n                  className={classes[\"danger-button\"]}\n                  onClick={onClearFiltering}\n                >\n                  <Icon icon=\"eraser\"></Icon>&nbsp;\n                  {i18n.t(\"filtering_remove_filters\")}\n                </button>\n              )}\n              {hasColumnsButton && (\n                <Button\n                  onClick={() => onColumnsModalOpen(dispatch)}\n                  label={i18n.t(\"columns\")}\n                  icon=\"list-alt\"\n                />\n              )}\n              {hasPrint && (\n                <a\n                  className={classes[\"simple-button\"]}\n                  href={printUrl(dataForExport)}\n                  rel=\"noreferrer\"\n                  target=\"_blank\"\n                >\n                  <Icon icon=\"print\"></Icon>&nbsp;\n                  {i18n.t(\"print\")}\n                </a>\n              )}\n              {hasExportData && (\n                <ButtonDropdown\n                  buttons={[\n                    hasExportExcel && {\n                      icon: \"file-excel\",\n                      text: \"Excel\",\n                      url: excelExportUrl(dataForExport),\n                      newTab: true,\n                      key: \"excel\",\n                    },\n                    hasExportPdf && {\n                      icon: \"file-pdf\",\n                      text: \"PDF\",\n                      url: pdfExportUrl(dataForExport),\n                      newTab: true,\n                      key: \"pdf\",\n                    },\n                  ]}\n                  buttonLabel={i18n.t(\"export_to_file\")}\n                  buttonIcon=\"download\"\n                  leftSpace={true}\n                />\n              )}\n              {hasSettings && (\n                <ButtonDropdown\n                  leftSpace={true}\n                  direction={DROPDOWN_DIRECTION.RIGHT}\n                  buttons={[\n                    {\n                      icon: \"broom\",\n                      text: i18n.t(\"clear_cache\"),\n                      onClick: onClearCache,\n                      key: \"clear_cache\",\n                    },\n                    {\n                      icon: \"eraser\",\n                      text: i18n.t(\"clear_filtering\"),\n                      onClick: onClearFiltering,\n                      key: \"clear_filtering\",\n                    },\n                    {\n                      icon: \"unlink\",\n                      text: i18n.t(\"reset_ordering\"),\n                      onClick: onOrderingReset,\n                      key: \"reset_ordering\",\n                    },\n                    {\n                      icon: \"sync-alt\",\n                      text: i18n.t(\"refresh\"),\n                      onClick: onRefresh,\n                      key: \"refresh\",\n                    },\n                  ]}\n                  buttonLabel={i18n.t(\"settings\")}\n                  buttonIcon=\"cog\"\n                />\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    ) : null;\n  } catch (error) {\n    console.log(error);\n    return <FatalErrorMessage />;\n  }\n};\n\nexport default DatagridTools;\n","const wrapperSkin = {\n  wrapper: {\n    composes: \"table table-bordered table-hover\",\n    \"margin-bottom\": \"0px\",\n    width: ({ columnWidth }) =>\n      Object.keys(columnWidth).length > 0 ? \"auto\" : \"100%\",\n  },\n  \"wrapper-no-hover\": {\n    composes: \"table table-bordered\",\n    \"margin-bottom\": \"0px\",\n    width: ({ columnWidth }) =>\n      Object.keys(columnWidth).length > 0 ? \"auto\" : \"100%\",\n  },\n};\n\nexport default wrapperSkin;\n","import { createUseStyles } from \"react-jss\";\nimport wrapperSkin from \"../skin/datagrid/wrapper.skin\";\nimport { useSelector } from \"react-redux\";\nimport { selectColumnWidth } from \"../../../selectors/column-width\";\n\nconst useStyles = createUseStyles(wrapperSkin);\nconst selectOpenedRows = (state) => state.masterDetail.openedRows;\n\nconst DatagridWrapper = ({ children }) => {\n  const columnWidth = useSelector(selectColumnWidth);\n  const openedRows = useSelector(selectOpenedRows);\n  const classes = useStyles({ columnWidth, openedRows });\n\n  return (\n    <table\n      className={\n        openedRows.length > 0 ? classes[\"wrapper-no-hover\"] : classes.wrapper\n      }\n    >\n      {children}\n    </table>\n  );\n};\n\nexport default DatagridWrapper;\n","import i18n from \"../../../../utils/locale/i18n\";\n\nconst formDialog = {\n  \"@keyframes fadeIn\": {\n    \"0%\": { opacity: \"0.1\" },\n    \"66%\": { opacity: \" 0.5\" },\n    \"100%\": { opacity: \"1\" },\n  },\n  \"@keyframes shine\": {\n    to: {\n      \"background-position\": \"100% 0\",\n    },\n  },\n  \"form-dialog\": {\n    composes: \"modal\",\n    \".modal&\": {\n      display: ({ formModalOpen }) => (formModalOpen ? \"block\" : \"none\"),\n      opacity: \"0\",\n      animation: ({ formModalOpen }) =>\n        formModalOpen ? \"$fadeIn 0.15s ease 0s normal forwards 1\" : \"none\",\n    },\n  },\n  \"modal-delete-one\": {\n    composes: \"modal\",\n    \".modal&\": {\n      display: ({ deleteOneModalOpen }) =>\n        deleteOneModalOpen ? \"block\" : \"none\",\n      opacity: \"0\",\n      animation: ({ deleteOneModalOpen }) =>\n        deleteOneModalOpen ? \"$fadeIn 0.15s ease 0s normal forwards 1\" : \"none\",\n    },\n  },\n  \"button-close\": {\n    composes: \"btn-close\",\n    \"button&\": {\n      cursor: \"pointer\",\n    },\n  },\n  \"modal-delete-multiple\": {\n    composes: \"modal\",\n    \".modal&\": {\n      display: ({ deleteMultipleModalOpen }) =>\n        deleteMultipleModalOpen ? \"block\" : \"none\",\n      opacity: \"0\",\n      animation: ({ deleteMultipleModalOpen }) =>\n        deleteMultipleModalOpen\n          ? \"$fadeIn 0.15s ease 0s normal forwards 1\"\n          : \"none\",\n    },\n  },\n  \"close-button\": {\n    composes: \"btn-close\",\n    \"button&\": {\n      cursor: \"pointer\",\n    },\n  },\n  \"form-fields\": {\n    \"overflow-x\": \"hidden\",\n    \"overflow-y\": \"auto\",\n    position: \"relative\",\n    \"max-height\": ({ openInModal }) =>\n      openInModal ? \"calc(100vh - 240px)\" : undefined,\n    padding: \"0px 10px\",\n  },\n  \"@media (max-height: 300px)\": {\n    \"form-fields\": {\n      \"max-height\": \"none\",\n    },\n  },\n  \"skeleton-loader\": {\n    width: \"100%\",\n    height: \"15px\",\n    border: \"1px solid rgb(239,239,239)\",\n    \"border-radius\": \"4px\",\n    display: \"block\",\n    \"background-repeat\": \"repeat-y\",\n    \"background-size\": \"50px 500px\",\n    \"background-position\": \"0 0\",\n    background:\n      \"linear-gradient(to right, rgba(239, 239, 239, 0), rgba(239, 239, 239, 0.5) 50%, rgba(239, 239, 239, 0) 80%),rgb(255,255,255)\",\n    animation: \"$shine 2s infinite\",\n    \"animation-delay\": \"0.3s\",\n  },\n  \"form-input-read-only\": {\n    padding: \"7px 0px\",\n    border: \"none\",\n    \"background-color\": \"var(--gc-input-light-background)\",\n    \"&:focus-visible, &:focus\": {\n      border: \"none\",\n      outline: \"none\",\n      \"background-color\": \"var(--gc-input-light-background)\",\n    },\n  },\n  \"form-input\": {\n    composes: \"form-control\",\n  },\n  \"form-textarea\": {\n    composes: \"form-control\",\n    \"textarea&\": {\n      \"min-height\": \"250px\",\n    },\n  },\n  \"form-select\": {\n    composes: \"form-control form-select\",\n  },\n  form: {\n    composes: \"form-horizontal\",\n    position: \"relative\",\n    \"&:before\": {\n      display: (props) => (props.formLoadingOverlay ? \"block\" : \"none\"),\n      content: (props) =>\n        props.formLoadingOverlay ? `\"${i18n.t(\"loading\")}\"` : \"none\",\n      opacity: (props) => (props.formLoadingOverlay ? \"0.5\" : \"0\"),\n      \"font-size\": \"26px\",\n      position: \"absolute\",\n      \"text-align\": \"center\",\n      \"z-index\": \"9999\",\n      color: \"var(--gc-light-background-text-color)\",\n      background: \"var(--gc-light-background)\",\n      cursor: \"default\",\n      width: \"100%\",\n      height: \"100%\",\n    },\n  },\n  \"full-page-title\": {\n    background: \"var(--gc-dark-background)\",\n    color: \"var(--gc-dark-background-text-color)\",\n    width: \"100%\",\n    padding: \"5px 10px\",\n    \"text-align\": \"left\",\n  },\n};\n\nexport default formDialog;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport { getDeleteConfirmationMessage } from \"../../../utils/translations-helper\";\nimport DatagridMiniGrid from \"../datagrid/datagrid-mini-grid\";\n\nconst useStyles = createUseStyles(formDialog);\n\nconst DeleteMultipleModal = (props) => {\n  const {\n    deleteMultipleModalOpen,\n    deleteMultipleModalClose,\n    deleteMultiple,\n    selectedIds,\n    visibleColumnsWithDetails,\n    rows,\n  } = props;\n\n  const classes = useStyles({ deleteMultipleModalOpen });\n\n  return (\n    <div\n      className={classes[\"modal-delete-multiple\"]}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel\"\n    >\n      <div className=\"modal-dialog modal-xl\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{i18n.t(\"action_delete\")}</h5>\n            <button\n              type=\"button\"\n              className={classes[\"close-button\"]}\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n              onClick={deleteMultipleModalClose}\n            />\n          </div>\n          <div className=\"modal-body\">\n            <p>{getDeleteConfirmationMessage(selectedIds.length)}</p>\n            {deleteMultipleModalOpen && (\n              <DatagridMiniGrid\n                visibleColumns={visibleColumnsWithDetails}\n                rows={rows.filter((row) =>\n                  selectedIds.includes(row.grocery_crud_extras.primaryKeyValue)\n                )}\n              />\n            )}\n          </div>\n          {deleteMultipleModalOpen && (\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-default btn-outline-dark\"\n                data-dismiss=\"modal\"\n                onClick={deleteMultipleModalClose}\n              >\n                {i18n.t(\"cancel\")}\n              </button>\n              {/* making sure that we have at least one selection to remove */}\n              {selectedIds.length > 0 && (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger delete-single-confirmation-button\"\n                  onClick={deleteMultiple}\n                >\n                  {i18n.t(\"action_delete\")}\n                </button>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDeleteMultipleModal.propTypes = {\n  modalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n};\n\nexport default DeleteMultipleModal;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport DatagridMiniGrid from \"../datagrid/datagrid-mini-grid\";\n\nconst useStyles = createUseStyles(formDialog);\n\nconst DeleteSingleModal = (props) => {\n  const {\n    deleteOneModalOpen,\n    deleteOneModalClose,\n    deleteOne,\n    visibleColumnsWithDetails,\n    primaryKeyValue,\n    rows,\n  } = props;\n\n  const classes = useStyles({ deleteOneModalOpen });\n\n  return (\n    <div\n      className={classes[\"modal-delete-one\"]}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel\"\n    >\n      <div className=\"modal-dialog modal-xl\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h4 className=\"modal-title\">{i18n.t(\"action_delete\")}</h4>\n            <button\n              type=\"button\"\n              className={classes[\"close-button\"]}\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n              onClick={deleteOneModalClose}\n            />\n          </div>\n          <div className=\"modal-body\">\n            <p>{i18n.t(\"confirm_delete\")}</p>\n            {deleteOneModalOpen && (\n              <DatagridMiniGrid\n                visibleColumns={visibleColumnsWithDetails}\n                rows={rows.filter(\n                  (row) =>\n                    row.grocery_crud_extras.primaryKeyValue === primaryKeyValue\n                )}\n              />\n            )}\n          </div>\n          {deleteOneModalOpen && (\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-default btn-outline-dark\"\n                data-dismiss=\"modal\"\n                onClick={deleteOneModalClose}\n              >\n                {i18n.t(\"cancel\")}\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-danger delete-single-confirmation-button\"\n                onClick={deleteOne}\n              >\n                {i18n.t(\"action_delete\")}\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDeleteSingleModal.propTypes = {\n  modalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n};\n\nexport default DeleteSingleModal;\n","const errorDialog = {\n  \"error-dialog\": {\n    composes: \"modal\",\n    \".modal&\": {\n      \"z-index\": \"1100\", // more than 1050 that is the default of bootstrap modal\n      display: ({ showError }) => (showError ? \"block\" : \"none\"),\n    },\n  },\n  \"error-details\": {\n    width: \"100%\",\n    height: \"200px\",\n  },\n};\n\nexport default errorDialog;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport errorDialog from \"../skin/error-dialog/error-dialog.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\n\nconst useStyles = createUseStyles(errorDialog);\n\nconst ErrorDialog = ({\n  closeModal,\n  showError,\n  details,\n  message,\n  validationError,\n  failureError,\n  errorsList,\n}) => {\n  const classes = useStyles({ showError });\n\n  const serverError = !failureError && !validationError;\n\n  return (\n    <div\n      className={classes[\"error-dialog\"]}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel\"\n    >\n      <div className=\"modal-dialog modal-xl\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{i18n.t(\"error_generic_title\")}</h5>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n              onClick={closeModal}\n            />\n          </div>\n          <div className=\"modal-body\">\n            {validationError && (\n              <ul>\n                {Object.values(errorsList).map((error, index) => (\n                  <li key={index}>{error}</li>\n                ))}\n              </ul>\n            )}\n            {failureError && <div>{message}</div>}\n            {serverError && (\n              <>\n                <div>\n                  {i18n.t(\"error_message\")}: {message}\n                </div>\n                <div>{i18n.t(\"error_text\")}:</div>\n                <div>\n                  <textarea\n                    defaultValue={details || \"\"}\n                    className={classes[\"error-details\"]}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-default btn-outline-dark\"\n              data-dismiss=\"modal\"\n              onClick={closeModal}\n            >\n              {i18n.t(\"close_modal\")}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nErrorDialog.propTypes = {\n  formModalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n};\n\nErrorDialog.defaultProps = {\n  formFields: [],\n};\n\nexport default ErrorDialog;\n","const filteringDialogSkin = {\n  \"@keyframes fadeIn\": {\n    \"0%\": { opacity: \"0.1\" },\n    \"66%\": { opacity: \" 0.5\" },\n    \"100%\": { opacity: \"1\" },\n  },\n  \"filtering-modal\": {\n    composes: \"modal\",\n    \".modal&\": {\n      display: ({ filteringModalOpen }) =>\n        filteringModalOpen ? \"block\" : \"none\",\n      opacity: \"0\",\n      animation: ({ filteringModalOpen }) =>\n        filteringModalOpen ? \"$fadeIn 0.15s ease 0s normal forwards 1\" : \"none\",\n    },\n  },\n  \"form-fields\": {\n    \"overflow-x\": \"hidden\",\n    \"overflow-y\": \"auto\",\n    position: \"relative\",\n    \"max-height\": \"calc(100vh - 240px)\",\n  },\n};\n\nexport default filteringDialogSkin;\n","const filteringSkin = {\n  \"filtering-row\": {\n    composes: \"row\",\n    \"padding-top\": \"10px\",\n    \"padding-bottom\": \"10px\",\n  },\n  \"filtering-column\": {\n    // hardcoding the color here since we have an issue with third party components that inherits the color from the parent\n    color: \"#212529\",\n  },\n  \"form-input\": {\n    composes: \"form-control\",\n  },\n  \"form-select\": {\n    composes: \"form-control form-select\",\n  },\n  \"close-button\": {\n    composes: \"btn-close\",\n    \"button&\": {\n      cursor: \"pointer\",\n    },\n  },\n};\n\nexport default filteringSkin;\n","const ModalCloseButton = ({ className, onClick }) => {\n  return (\n    <button\n      type=\"button\"\n      className={className}\n      data-dismiss=\"modal\"\n      aria-label=\"Close\"\n      onClick={onClick}\n    />\n  );\n};\n\nexport default ModalCloseButton;\n","import { useForm, useFieldArray, Controller } from \"react-hook-form\";\nimport Select from \"react-select\";\nimport { createUseStyles } from \"react-jss\";\n\nimport i18n from \"../../../utils/locale/i18n\";\nimport classNames from \"classnames\";\n\nimport filteringSkin from \"../skin/filtering/filtering.skin\";\nimport Icon from \"../../../components/common/icon\";\nimport { deepCloneArray } from \"../../../utils/array-helper\";\nimport {\n  doTriggerFilterRefresh,\n  doTriggerFilterValueRefresh,\n  emptyFilterMapping,\n  getFilterValueFromDataType,\n} from \"../../../utils/filtering-helper\";\nimport FilterComparisonSelect from \"../../../components/filtering/filter-comparison-select\";\nimport {\n  getJssNameFromType,\n  getSearchInputComponent,\n} from \"../../../utils/field-types\";\nimport ModalCloseButton from \"../theme-common/modal-close-button\";\n\nconst useStyles = createUseStyles(filteringSkin);\n\nconst Filtering = (props) => {\n  const {\n    onFilteringModalClose,\n    columns,\n    onSubmit: onSubmitCallback,\n    extendedSearchOperator,\n    extendedSearchData,\n    loadCssThirdParty,\n  } = props;\n\n  const { control, handleSubmit, getValues } = useForm({\n    defaultValues: {\n      basic_operator: extendedSearchOperator || \"AND\",\n      extended_search:\n        extendedSearchData.length > 0\n          ? extendedSearchData\n          : [\n              {\n                name: columns[0].name,\n                filter: \"contains\",\n                value: \"\",\n              },\n            ],\n    },\n  });\n  const { fields, append, remove, insert } = useFieldArray({\n    control,\n    name: \"extended_search\",\n  });\n\n  const classes = useStyles(props);\n\n  const onSubmit = (data) => {\n    if (onSubmitCallback) {\n      // making sure that we are not sending any data by reference\n      let extendedSearch = [];\n      data[\"extended_search\"].forEach((searchData) => {\n        extendedSearch.push(searchData);\n      });\n      onSubmitCallback(\n        deepCloneArray({\n          ...data,\n          extended_search: extendedSearch,\n        })\n      );\n    }\n  };\n  const onError = (errors, e) => console.log(errors, e);\n\n  const numberOfFields = fields.length;\n\n  return (\n    <form\n      className=\"form-horizontal\"\n      onSubmit={handleSubmit(onSubmit, onError)}\n    >\n      <div className=\"modal-header\">\n        <h5 className=\"modal-title\">{i18n.t(\"filtering_filter_text\")}</h5>\n        <ModalCloseButton\n          className={classes[\"close-button\"]}\n          onClick={onFilteringModalClose}\n        />\n      </div>\n\n      <div className=\"modal-body\">\n        <div className=\"row\">\n          <label className=\"col-md-3 control-label\">\n            {i18n.t(\"filtering_operator\")} :\n          </label>\n          <div className=\"col-md-3\">\n            <Controller\n              render={({ field: { onChange, onBlur, value } }) => (\n                <select\n                  name=\"basic_operator\"\n                  onChange={onChange}\n                  className=\"form-control form-select\"\n                  defaultValue={value}\n                >\n                  <option value=\"AND\">\n                    {i18n.t(\"filtering_and_statement\")}\n                  </option>\n                  <option value=\"OR\">{i18n.t(\"filtering_or_statement\")}</option>\n                </select>\n              )}\n              name=\"basic_operator\"\n              control={control}\n              defaultValue=\"AND\"\n            />\n          </div>\n        </div>\n        <div>\n          {fields.map((item, index) => {\n            const columnName = getValues(`extended_search[${index}]`).name;\n\n            const column = columns.find((column) => column.name === columnName);\n\n            return (\n              <div className={classes[\"filtering-row\"]} key={item.id}>\n                <div className=\"col-md-1\">\n                  <button\n                    className=\"btn btn-outline-dark btn-block\"\n                    type=\"button\"\n                    onClick={() => remove(index)}\n                    disabled={numberOfFields === 1}\n                  >\n                    <Icon icon=\"trash\" />\n                  </button>\n                </div>\n                <div\n                  className={classNames(\n                    \"col-md-3\",\n                    classes[\"filtering-column\"]\n                  )}\n                >\n                  <Controller\n                    render={({ field: { onChange, onBlur, value } }) => {\n                      const name = `extended_search[${index}].name`;\n                      const options = columns\n                        .filter((column) => column.isSearchable)\n                        .map((column) => ({\n                          value: column.name,\n                          label: column.displayAs,\n                        }));\n                      return (\n                        <Select\n                          onChange={(event) => {\n                            const oldValues = {\n                              ...getValues(`extended_search[${index}]`),\n                            };\n                            const newValue = event.value;\n\n                            const oldColumn = columns.find(\n                              (column) => column.name === oldValues.name\n                            );\n                            const newColumn = columns.find(\n                              (column) => column.name === newValue\n                            );\n\n                            if (\n                              doTriggerFilterRefresh(\n                                oldColumn.dataType,\n                                newColumn.dataType\n                              )\n                            ) {\n                              remove(index);\n                              insert(index, {\n                                name: newValue,\n                                filter: getFilterValueFromDataType(\n                                  newColumn.dataType\n                                ),\n                                value: \"\",\n                              });\n                            }\n\n                            onChange({ target: { name, value: event.value } });\n                          }}\n                          name={name}\n                          value={options.filter(\n                            (option) => option.value === value\n                          )}\n                          options={options}\n                        />\n                      );\n                    }}\n                    name={`extended_search[${index}].name`}\n                    control={control}\n                    defaultValue={item.firstName} // make sure to set up defaultValue\n                  />\n                </div>\n                <div\n                  className={classNames(\n                    \"col-md-3\",\n                    classes[\"filtering-column\"]\n                  )}\n                >\n                  <Controller\n                    render={({ field: { onChange, value } }) => {\n                      return (\n                        <FilterComparisonSelect\n                          onChange={(event) => {\n                            const oldValues = {\n                              ...getValues(`extended_search[${index}]`),\n                            };\n                            const newValue = event.target.value;\n                            if (\n                              doTriggerFilterValueRefresh(\n                                oldValues.filter,\n                                newValue\n                              )\n                            ) {\n                              remove(index);\n                              insert(index, {\n                                name: oldValues.name,\n                                filter: newValue,\n                                // null is an indication to not show an input\n                                value: emptyFilterMapping[newValue] ? null : \"\",\n                              });\n                            }\n\n                            onChange(event);\n                          }}\n                          className=\"form-control form-select\"\n                          name={`extended_search[${index}].filter`}\n                          value={value}\n                          dataType={column.dataType}\n                        />\n                      );\n                    }}\n                    name={`extended_search[${index}].filter`}\n                    control={control}\n                    defaultValue={item.filter}\n                  />\n                </div>\n                <div\n                  className={classNames(\n                    \"col-md-5\",\n                    classes[\"filtering-column\"]\n                  )}\n                >\n                  <Controller\n                    render={({\n                      field: { onChange, onBlur, value: originalValue },\n                    }) => {\n                      // null is an indication that we will not show an input\n                      if (originalValue === null) {\n                        return null;\n                      }\n\n                      const { dataType, permittedValues } = column;\n\n                      const displayAs =\n                        typeof originalValue === \"object\"\n                          ? originalValue.displayAs\n                          : \"\";\n                      const value =\n                        typeof originalValue === \"object\"\n                          ? originalValue.key\n                          : originalValue;\n\n                      const SearchInputComponent =\n                        getSearchInputComponent(dataType);\n\n                      return (\n                        <SearchInputComponent\n                          onChange={onChange}\n                          onBlur={onBlur}\n                          className={classes[getJssNameFromType(dataType)]}\n                          name={`extended_search[${index}].value`}\n                          value={value}\n                          required={true}\n                          permittedValues={permittedValues}\n                          fieldName={column.name}\n                          displayAs={displayAs}\n                          loadCssThirdParty={loadCssThirdParty}\n                        />\n                      );\n                    }}\n                    name={`extended_search[${index}].value`}\n                    control={control}\n                    defaultValue={item.value}\n                  />\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <div className={classes[\"filtering-row\"]}>\n          <div className=\"col-md-12\">\n            <button\n              type=\"button\"\n              className=\"btn btn-default btn-outline-dark\"\n              onClick={() => {\n                append({\n                  name: columns[0].name,\n                  filter: \"contains\",\n                  value: \"\",\n                });\n              }}\n            >\n              <Icon icon=\"plus\" />\n              &nbsp;\n              {i18n.t(\"filtering_add_more\")}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"modal-footer\">\n        <button\n          type=\"button\"\n          className=\"btn btn-default btn-outline-dark\"\n          data-dismiss=\"modal\"\n          onClick={onFilteringModalClose}\n        >\n          {i18n.t(\"filtering_cancel\")}\n        </button>\n        <button\n          type=\"submit\"\n          className=\"btn btn-success delete-multiple-confirmation-button\"\n        >\n          {i18n.t(\"filtering_filter_text\")}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Filtering;\n","import { createUseStyles } from \"react-jss\";\nimport filteringDialogSkin from \"../skin/filtering/filtering-dialog.skin\";\nimport Filtering from \"./filtering\";\n\nconst useStyles = createUseStyles(filteringDialogSkin);\n\nconst FilteringModal = (props) => {\n  const { filteringModalOpen, onFilteringSubmit, columns } = props;\n\n  const classes = useStyles(props);\n\n  return (\n    <div\n      className={classes[\"filtering-modal\"]}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel\"\n    >\n      <div className=\"modal-dialog modal-xl\">\n        <div className=\"modal-content\">\n          {filteringModalOpen && (\n            <Filtering\n              {...props}\n              columns={columns}\n              onSubmit={onFilteringSubmit}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FilteringModal;\n","import { useEffect } from \"react\";\nimport { createUseStyles } from \"react-jss\";\nimport { useForm } from \"react-hook-form\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport { formSubmitTransformation } from \"../../../utils/form-fields\";\nimport InputContainer from \"../../../components/common/input-container\";\nimport { formActions } from \"../../../actions/form-actions\";\nimport {\n  EVENT_SET_FIELD_VALUE,\n  subscribeEvent,\n  unsubscribeEvent,\n} from \"../../../utils/events\";\n\nconst selectCloseModalOnSave = (state) => state.form.closeModalOnSave;\n\nconst useStyles = createUseStyles(formDialog);\n\nconst Form = ({\n  configurationSettings,\n  formFields,\n  formIsReadOnly: readOnly,\n  formLoadingOverlay,\n  formModalClose,\n  formState,\n  loadCssThirdParty,\n  modalLoading,\n  onFormSubmit,\n  publishEvents,\n}) => {\n  const closeModalOnSave = useSelector(selectCloseModalOnSave);\n  const openInModal = useSelector((state) => state.configuration.openInModal);\n  const dispatch = useDispatch();\n  const { handleSubmit, control, register, setValue } = useForm();\n\n  useEffect(() => {\n    const handleCustomEvent = ({ detail }) => {\n      setValue(detail.fieldName, detail.fieldValue);\n    };\n\n    if (publishEvents) {\n      subscribeEvent(EVENT_SET_FIELD_VALUE, handleCustomEvent);\n    }\n\n    // Clean up event listener on component unmount\n    return () => {\n      if (publishEvents) {\n        unsubscribeEvent(EVENT_SET_FIELD_VALUE, handleCustomEvent);\n      }\n    };\n  }, [setValue, publishEvents]);\n\n  const onSubmit = (data) => {\n    const transformedData = formSubmitTransformation(data, formFields);\n\n    onFormSubmit({\n      formState,\n      data: transformedData,\n    });\n  };\n  const onError = (errors, e) => console.log(errors, e);\n\n  const classes = useStyles({\n    formFields,\n    formLoadingOverlay,\n    formModalClose,\n    modalLoading,\n    readOnly,\n    openInModal,\n  });\n\n  return (\n    <form\n      className={classes[\"form\"]}\n      onSubmit={handleSubmit(onSubmit, onError)}\n    >\n      <div className={classes[\"form-fields\"]}>\n        {modalLoading\n          ? \"Loading...\"\n          : formFields.map((field) => {\n              return (\n                <InputContainer\n                  control={control}\n                  field={field}\n                  inputContainerClassName=\"col-sm-9\"\n                  jssClasses={classes}\n                  key={field.fieldName}\n                  labelClassName=\"col-sm-3 col-form-label\"\n                  labelContainerClassName=\"mb-3 row\"\n                  loadCssThirdParty={loadCssThirdParty}\n                  readOnly={readOnly}\n                  register={register}\n                  setValue={setValue}\n                  configurationSettings={configurationSettings}\n                  formState={formState}\n                />\n              );\n            })}\n      </div>\n      <div className=\"modal-footer\">\n        {!readOnly && (\n          <>\n            <label className=\"options-on-save\">\n              <input\n                type=\"checkbox\"\n                checked={closeModalOnSave}\n                onChange={() =>\n                  dispatch({\n                    type: formActions.TOGGLE_CLOSE_MODAL_ON_SAVE,\n                  })\n                }\n              />{\" \"}\n              {i18n.t(\"close_modal_on_save\")}\n            </label>{\" \"}\n            &nbsp; &nbsp;\n          </>\n        )}\n        <button\n          type=\"button\"\n          className=\"btn btn-default btn-outline-dark\"\n          data-dismiss=\"modal\"\n          onClick={formModalClose}\n        >\n          {i18n.t(\"close_modal\")}\n        </button>\n        {!readOnly && (\n          <button type=\"submit\" className=\"btn btn-primary\">\n            {i18n.t(\"modal_save\")}\n          </button>\n        )}\n      </div>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  configurationSettings: PropTypes.object,\n};\n\nForm.defaultProps = {\n  configurationSettings: {},\n};\n\nexport default Form;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport { getTitleTranslation } from \"../../../utils/translations-helper\";\nimport Form from \"./form\";\n\nconst useStyles = createUseStyles(formDialog);\n\nconst Modal = (props) => {\n  const { formModalLoading, formModalClose, formState, formModalOpen } = props;\n\n  const classes = useStyles(props);\n\n  return (\n    <div className={classes[\"form-dialog\"]} tabIndex=\"-1\" role=\"dialog\">\n      <div className=\"modal-dialog modal-xl\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{getTitleTranslation(formState)}</h5>\n            <button\n              type=\"button\"\n              className={classes[\"close-button\"]}\n              aria-label=\"Close\"\n              onClick={formModalClose}\n            />\n          </div>\n          {formModalOpen && (\n            <div className=\"modal-body\">\n              {formModalLoading ? (\n                <div className={classes[\"skeleton-loader\"]} />\n              ) : (\n                <Form {...props} />\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  formModalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n  openInModal: PropTypes.bool,\n};\n\nModal.defaultProps = {\n  formFields: [],\n  openInModal: true,\n};\n\nexport default Modal;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport { getTitleTranslation } from \"../../../utils/translations-helper\";\nimport Form from \"./form\";\n\nconst useStyles = createUseStyles(formDialog);\n\nconst FullPage = (props) => {\n  const { formModalLoading, formState, formModalOpen } = props;\n\n  const classes = useStyles(props);\n\n  return (\n    <div className={classes[\"full-page\"]} tabIndex=\"-1\">\n      <div className={classes[\"full-page-title\"]}>\n        {getTitleTranslation(formState)}\n      </div>\n      <div>\n        {formModalOpen && (\n          <div className=\"modal-body\">\n            {formModalLoading ? (\n              <div className={classes[\"skeleton-loader\"]} />\n            ) : (\n              <Form {...props} />\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nFullPage.propTypes = {\n  formModalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n  openInModal: PropTypes.bool,\n};\n\nFullPage.defaultProps = {\n  formFields: [],\n  openInModal: true,\n};\n\nexport default FullPage;\n","import Modal from \"./modal\";\nimport FullPage from \"./full-page\";\nimport { useSelector } from \"react-redux\";\n\nconst FormDialog = ({ ...props }) => {\n  const openInModal = useSelector((state) => state.configuration.openInModal);\n  return openInModal ? <Modal {...props} /> : <FullPage {...props} />;\n};\n\nexport default FormDialog;\n","import { createUseStyles } from \"react-jss\";\n\nimport groupButtonSkin from \"../skin/buttons/buttons.skin\";\nimport Icon from \"../../../components/common/icon\";\nimport ButtonDropdown from \"./button-dropdown\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = createUseStyles(groupButtonSkin);\n\nconst GroupButtons = (props) => {\n  const { buttons, maxActionButtons, isMobileDevice } = props;\n  const classes = useStyles(props);\n\n  const maxButtons = isMobileDevice\n    ? maxActionButtons.mobile\n    : maxActionButtons.desktop;\n\n  const areWeGroupingButtons = buttons.length > maxButtons;\n\n  return (\n    <>\n      {buttons\n        // The logic here is that when we need to group buttons then we don't want to have the edge case situation\n        // when the grouping button is the last one button. In that case if we keep it as is (e.g. maxButtons -1)\n        // then we will have a More button that will lead to only one button which is undesirable.\n        .filter((__button, key) =>\n          areWeGroupingButtons ? key < maxButtons - 1 : key < maxButtons\n        )\n        .map((button) => (\n          <a\n            href={button.url ? button.url : \"\"}\n            className={classes[\"simple-button\"]}\n            key={button.key}\n            title={button.label}\n            onClick={\n              button.onClick\n                ? (event) => {\n                    event.preventDefault();\n                    if (button.onClick) {\n                      button.onClick({\n                        primaryKeyValue: button.primaryKeyValue,\n                      });\n                    }\n                  }\n                : undefined\n            }\n          >\n            {button.icon && (\n              <>\n                <Icon icon={button.icon} />\n                &nbsp;\n              </>\n            )}\n            {button.text}\n          </a>\n        ))}\n      <ButtonDropdown\n        buttons={\n          areWeGroupingButtons\n            ? buttons.filter((__button, key) => key >= maxButtons - 1)\n            : []\n        }\n        buttonLabel={maxButtons === 1 ? i18n.t(\"actions\") : i18n.t(\"more\")}\n        leftSpace={true}\n      />\n    </>\n  );\n};\n\nGroupButtons.propTypes = {\n  buttons: PropTypes.array,\n  maxActionButtons: PropTypes.shape({\n    mobile: PropTypes.number,\n    desktop: PropTypes.number,\n  }),\n};\n\nGroupButtons.defaultProps = {\n  buttons: [],\n  maxActionButtons: {\n    mobile: 1,\n    desktop: 2,\n  },\n};\n\nexport default GroupButtons;\n","import ColumnsModal from \"./columns/columns-modal\";\nimport DatagridBody from \"./datagrid/datagrid-body\";\nimport DatagridCheckbox from \"./datagrid/datagrid-checkbox\";\nimport DatagridFooter from \"./datagrid/datagrid-footer\";\nimport DatagridHeader from \"./datagrid/datagrid-header\";\nimport DatagridTitle from \"./datagrid/datagrid-title\";\nimport DatagridTools from \"./datagrid/datagrid-tools\";\nimport DatagridWrapper from \"./datagrid/datagrid-wrapper\";\nimport DeleteMultipleModal from \"./delete-multiple/delete-multiple-modal\";\nimport DeleteSingleModal from \"./delete-single/delete-single-modal\";\nimport ErrorDialog from \"./error/error-dialog\";\nimport FilteringModal from \"./filtering/filtering-modal\";\nimport FormDialog from \"./form/form-dialog\";\nimport GroupButtons from \"./buttons/group-buttons\";\n\nconst themeComponents = {\n  ColumnsModal,\n  DatagridBody,\n  DatagridCheckbox,\n  DatagridFooter,\n  DatagridHeader,\n  DatagridTitle,\n  DatagridTools,\n  DatagridWrapper,\n  DeleteMultipleModal,\n  DeleteSingleModal,\n  ErrorDialog,\n  FilteringModal,\n  FormDialog,\n  GroupButtons,\n};\n\nexport default themeComponents;\n","export const selectColumnWidth = (state) => state.columnWidth;\n","const widthChanging = {\n  display: \"block\",\n  position: \"absolute\",\n  right: \"-13px\",\n  height: \"39px\",\n  width: \"10px\",\n  cursor: \"col-resize\",\n  opacity: \"0.8\",\n  \"z-index\": \"10\",\n  \"&:hover\": {\n    background: \"var(--gc-emphasis-background-color)\",\n    cursor: \"col-resize\",\n  },\n  \"&:focus, &:active\": {\n    background: \"transparent\",\n    cursor: \"col-resize\",\n  },\n};\n\nconst miniGridSkin = {\n  \"mini-grid\": {\n    composes: \"table table-bordered table-hover\",\n    \"margin-bottom\": \"0px\",\n  },\n  \"interactive-grid\": {\n    composes: \"table table-bordered\",\n    width: ({ columnWidth }) =>\n      typeof columnWidth === \"object\" && Object.keys(columnWidth).length > 0\n        ? \"auto\"\n        : \"100%\",\n  },\n  \"scrolling-wrapper\": {\n    composes: \"gc-mini-grid-scrolling-wrapper\",\n    width: \"100%\",\n    position: \"relative\",\n    \"overflow-x\": \"auto\",\n  },\n  \"column-text\": {\n    \"&>span\": {\n      \"text-overflow\": \"ellipsis\",\n      \"white-space\": \"nowrap\",\n      overflow: \"hidden\",\n    },\n    \"align-items\": \"center\",\n    \"max-width\": \"350px\",\n    \"min-width\": \"0\", // small hack so we can have flex to work with ellipsis\n    \"vertical-align\": \"middle\",\n    display: \"flex\",\n    height: \"38px\",\n  },\n  \"mini-grid-body\": {\n    \".table &\": {\n      \"border-top\": \"none\",\n    },\n  },\n  description: {\n    display: \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"space-between\",\n    \"margin-bottom\": \"10px\",\n  },\n  \"width-changing\": {\n    ...widthChanging,\n  },\n  \"width-changing-last\": {\n    ...widthChanging,\n    right: \"-8px\",\n  },\n  \"header-column\": {\n    display: \"flex\",\n    \"justify-content\": \"space-between\",\n    \"align-items\": \"center\",\n    position: \"relative\",\n    \"min-width\": \"100px\",\n    \"white-space\": \"nowrap\",\n    \"padding-right\": \"10px\",\n  },\n};\n\nexport default miniGridSkin;\n","import { createUseStyles } from \"react-jss\";\nimport miniGridSkin from \"../skin/datagrid/datagrid-mini.skin\";\nimport { formatDatagridValue } from \"../../../utils/datagrid\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { fieldTypes } from \"../../../constants/field-types\";\nimport { selectColumnWidth } from \"../../../selectors/column-width\";\n\nconst useStyles = createUseStyles(miniGridSkin);\n\nconst selectLocalCode = (state) => state.configuration.locale;\nconst selectDateFormat = (state) => state.configuration.dateFormat;\n\nconst DatagridMiniGrid = ({ visibleColumns, rows }) => {\n  const locale = useSelector(selectLocalCode);\n  const dateFormat = useSelector(selectDateFormat);\n  const columnWidth = useSelector(selectColumnWidth);\n\n  const classes = useStyles({ columnWidth });\n\n  return (\n    <div className={classes[\"scrolling-wrapper\"]}>\n      <table className={classes[\"mini-grid\"]}>\n        <thead>\n          <tr>\n            {visibleColumns.map((column) =>\n              column.dataType === fieldTypes.INVISIBLE ? null : (\n                <th key={column.name}>{column.displayAs}</th>\n              )\n            )}\n          </tr>\n        </thead>\n        <tbody className={classes[\"mini-grid-body\"]}>\n          {rows.map((rowData, numRow) => (\n            <tr key={numRow}>\n              {visibleColumns.map((column) =>\n                column.dataType === fieldTypes.INVISIBLE ? null : (\n                  <td key={column.name}>\n                    <div className={classes[\"column-text\"]}>\n                      {formatDatagridValue(\n                        rowData[column.name],\n                        column.dataType,\n                        {\n                          permittedValues: column.permittedValues,\n                          fieldName: column.name,\n                          locale,\n                          dateFormat,\n                          primaryKeyValue:\n                            rowData.grocery_crud_extras.primaryKeyValue,\n                        }\n                      )}\n                    </div>\n                  </td>\n                )\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nDatagridMiniGrid.propTypes = {\n  rows: PropTypes.array,\n  visibleColumns: PropTypes.array,\n};\n\nexport default DatagridMiniGrid;\n","import { columnWidthActions } from \"../actions/column-width-actions\";\n\nlet previousSiblingElement;\nlet parentThElement;\nlet startOffsetX;\nlet startClientX;\nlet columnWidth;\nconst MIN_WIDTH = 100;\nconst EXTRA_PADDING = 13;\n\nexport const columnWidthOnDragStart = (event) => {\n  const currentTarget = event.currentTarget;\n\n  currentTarget.closest(\"th\").style.background = \"var(--gc-dark-background)\";\n  currentTarget.style.opacity = \"0\";\n\n  previousSiblingElement = event.currentTarget.previousSibling;\n  parentThElement = event.currentTarget.closest(\"th\");\n\n  previousSiblingElement.style.background =\n    \"var(--gc-emphasis-background-color)\";\n  previousSiblingElement.style.right = \"0\";\n  previousSiblingElement.style.position = \"fixed\";\n  previousSiblingElement.style.left = event.clientX - EXTRA_PADDING + \"px\";\n  previousSiblingElement.style.display = \"block\";\n\n  startClientX = event.clientX;\n  columnWidth = parentThElement.clientWidth;\n  startOffsetX = parentThElement.offsetLeft + columnWidth;\n};\n\nexport const columnWidthOnDrag = (event) => {\n  if (previousSiblingElement !== null) {\n    previousSiblingElement.style.left =\n      startOffsetX + event.clientX - startClientX + \"px\";\n  }\n};\n\nexport const columnChangeWidthAction = (columnName, columnWidth, dispatch) => {\n  dispatch({\n    type: columnWidthActions.CHANGE_WIDTH,\n    columnName,\n    columnWidth,\n  });\n};\n\nexport const columnWidthOnDragEnd = (event, columnName, dispatch) => {\n  if (parentThElement !== null) {\n    parentThElement.style.removeProperty(\"background\");\n    columnChangeWidthAction(\n      columnName,\n      Math.max(\n        columnWidth + event.clientX - startClientX - EXTRA_PADDING,\n        MIN_WIDTH\n      ),\n      dispatch\n    );\n  }\n  event.currentTarget.style.removeProperty(\"right\");\n  event.currentTarget.style.removeProperty(\"background\");\n  event.currentTarget.style.removeProperty(\"position\");\n  event.currentTarget.style.removeProperty(\"left\");\n  event.currentTarget.style.removeProperty(\"opacity\");\n\n  previousSiblingElement.style.removeProperty(\"right\");\n  previousSiblingElement.style.removeProperty(\"background\");\n  previousSiblingElement.style.removeProperty(\"position\");\n  previousSiblingElement.style.removeProperty(\"left\");\n  previousSiblingElement.style.removeProperty(\"opacity\");\n\n  document.body.style.removeProperty(\"cursor\");\n};\n","import { useSelector } from \"react-redux\";\nimport { useLayoutEffect, useRef } from \"react\";\n\nconst selectMasterDetailApiUrl = (state) => state.masterDetail.apiUrl;\nconst groceryCrudLoader = require(\"../../grocery-crud-loader\").default;\n\nconst MasterDetail = ({ primaryKeyValue, skin, theme }) => {\n  const apiUrl = useSelector(selectMasterDetailApiUrl);\n  const datagridRef = useRef(null);\n\n  useLayoutEffect(() => {\n    if (datagridRef.current) {\n      groceryCrudLoader(datagridRef.current);\n    }\n  }, [datagridRef]);\n\n  const uniqueId = Date.now();\n\n  return (\n    <div\n      ref={datagridRef}\n      className=\"grocery-crud\"\n      data-api-url={apiUrl}\n      data-unique-id={uniqueId}\n      data-skin={skin}\n      data-theme={theme}\n      data-master-primary-key-value={primaryKeyValue}\n      data-load-css-theme=\"false\"\n      data-load-css-icons=\"false\"\n      data-remember-state=\"false\"\n    ></div>\n  );\n};\n\nexport default MasterDetail;\n","import PropTypes from \"prop-types\";\nimport {\n  getComponentFromDataType,\n  getMountingCallbacks,\n} from \"../../utils/field-types\";\nimport { useSelector } from \"react-redux\";\n\nconst selectPrimaryKeyValue = (state) => state.form.primaryKeyValue;\n\nconst Input = ({\n  className,\n  control,\n  dataType,\n  fieldOptions,\n  id,\n  isDependencyField,\n  isNullable,\n  loadCssThirdParty,\n  name,\n  permittedValues,\n  readOnly,\n  register,\n  setValue,\n  value,\n  valueLabel,\n  formState,\n  configurationSettings,\n}) => {\n  const primaryKeyValue = useSelector(selectPrimaryKeyValue);\n\n  const InputComponent = getComponentFromDataType({ dataType, readOnly });\n  const { onMount, onUnmount } = getMountingCallbacks({\n    configurationSettings,\n    dataType,\n    fieldName: name,\n    formState,\n  });\n\n  return (\n    <InputComponent\n      className={className}\n      control={control}\n      fieldOptions={fieldOptions}\n      id={id}\n      isDependencyField={isDependencyField}\n      isNullable={isNullable}\n      loadCssThirdParty={loadCssThirdParty}\n      name={name}\n      permittedValues={permittedValues}\n      primaryKeyValue={primaryKeyValue}\n      register={register}\n      setValue={setValue}\n      value={value}\n      valueLabel={valueLabel}\n      onMount={onMount}\n      onUnmount={onUnmount}\n    />\n  );\n};\n\nInput.propTypes = {\n  className: PropTypes.string,\n  control: PropTypes.object,\n  dataType: PropTypes.string,\n  id: PropTypes.string,\n  isNullable: PropTypes.bool,\n  name: PropTypes.string,\n  permittedValues: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  readOnly: PropTypes.bool,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.array,\n    PropTypes.number,\n  ]),\n};\n\nexport default Input;\n","import PropTypes from \"prop-types\";\nimport Input from \"./input\";\nimport { fieldTypes } from \"../../constants/field-types\";\nimport { getJssNameFromType } from \"../../utils/field-types\";\nconst InputContainer = ({\n  control,\n  field,\n  inputClassName,\n  inputContainerClassName,\n  jssClasses,\n  labelClassName,\n  labelContainerClassName,\n  loadCssThirdParty,\n  readOnly,\n  register,\n  setValue,\n  configurationSettings,\n  formState,\n}) => {\n  const isReadOnly = readOnly || field.isReadOnly;\n  const isVisibleField = field.dataType !== fieldTypes.HIDDEN;\n\n  if (isVisibleField) {\n    return (\n      <div className={labelContainerClassName}>\n        <label\n          className={labelClassName}\n          htmlFor={`gc-form-${field.fieldName}`}\n        >\n          {field.isRequired && <span>*</span>}\n          {field.displayAs}\n        </label>\n        <div className={inputContainerClassName}>\n          <Input\n            className={\n              jssClasses[getJssNameFromType(field.dataType, isReadOnly)]\n            }\n            control={control}\n            dataType={field.dataType}\n            fieldOptions={field.options || {}}\n            id={`gc-form-${field.fieldName}`}\n            isDependencyField={field.isDependencyField}\n            isNullable={field.isNullable}\n            loadCssThirdParty={loadCssThirdParty}\n            name={field.fieldName}\n            permittedValues={field.permittedValues}\n            readOnly={isReadOnly}\n            register={register}\n            setValue={setValue}\n            value={field.fieldValue}\n            valueLabel={field.valueLabel}\n            formState={formState}\n            configurationSettings={configurationSettings}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  // Not visible fields (e.g. hidden)\n  return (\n    <Input\n      className={inputClassName}\n      control={control}\n      dataType={field.dataType}\n      id={`gc-form-${field.fieldName}`}\n      isNullable={field.isNullable}\n      name={field.fieldName}\n      readOnly={isReadOnly}\n      value={field.fieldValue}\n    />\n  );\n};\n\nInputContainer.propTypes = {\n  jssClasses: PropTypes.object,\n};\n\nInputContainer.defaultProps = {\n  jssClasses: {},\n};\n\nexport default InputContainer;\n"],"sourceRoot":""}