{"version":3,"sources":["themes/tailwind-v2/skin/columns/columns-modal.skin.js","themes/tailwind-v2/columns/columns-modal.jsx","themes/tailwind-v2/skin/datagrid/body.skin.js","themes/tailwind-v2/datagrid/datagrid-body.jsx","themes/tailwind-v2/skin/datagrid/checkbox.skin.js","themes/tailwind-v2/datagrid/datagrid-checkbox.jsx","themes/tailwind-v2/skin/datagrid/footer.skin.js","themes/tailwind-v2/datagrid/datagrid-footer.jsx","themes/tailwind-v2/skin/datagrid/header.skin.js","themes/tailwind-v2/skin/buttons/buttons.skin.js","themes/tailwind-v2/buttons/button.jsx","themes/tailwind-v2/datagrid/datagrid-header.jsx","themes/tailwind-v2/datagrid/datagrid-title.jsx","themes/tailwind-v2/skin/datagrid/tools.skin.js","themes/tailwind-v2/skin/buttons/button-dropdown.skin.js","themes/tailwind-v2/buttons/button-dropdown-list.jsx","themes/tailwind-v2/buttons/button-dropdown.jsx","themes/tailwind-v2/datagrid/datagrid-tools.jsx","themes/tailwind-v2/skin/datagrid/wrapper.skin.js","themes/tailwind-v2/datagrid/datagrid-wrapper.jsx","themes/tailwind-v2/skin/form-dialog/form-dialog.skin.js","themes/tailwind-v2/skin/datagrid/datagrid-mini.skin.js","themes/tailwind-v2/datagrid/datagrid-mini-grid.jsx","themes/tailwind-v2/delete-multiple/delete-multiple-modal.jsx","themes/tailwind-v2/delete-single/delete-single-modal.jsx","themes/tailwind-v2/skin/error-dialog/error-dialog.skin.js","themes/tailwind-v2/error/error-dialog.jsx","themes/tailwind-v2/skin/filtering/filtering-dialog.skin.js","themes/tailwind-v2/skin/filtering/filtering.skin.js","themes/tailwind-v2/filtering/filtering.jsx","themes/tailwind-v2/filtering/filtering-modal.jsx","themes/tailwind-v2/common/modal-header.jsx","themes/tailwind-v2/form/form.jsx","themes/tailwind-v2/form/form-dialog.jsx","themes/tailwind-v2/buttons/group-buttons.jsx","themes/tailwind-v2/index.js","selectors/column-width.js","themes/bootstrap-v5/skin/datagrid/datagrid-mini.skin.js","themes/bootstrap-v5/datagrid/datagrid-mini-grid.jsx"],"names":["columnsModalSkin","opacity","composes","display","columnsModalOpen","animation","position","useStyles","createUseStyles","ColumnsModal","columns","onColumnsModalClose","selectColumnsAllOrNone","toggleVisibleColumn","visibleColumns","classes","className","tabIndex","role","i18n","t","type","onClick","onChange","checked","length","map","column","includes","name","displayAs","bodySkin","overflow","selectLocalCode","state","configuration","locale","selectDateFormat","dateFormat","DatagridBody","props","useSelector","rows","hasActions","lastPrimaryKeyValue","rowData","numRow","grocery_crud_extras","primaryKeyValue","undefined","formatDatagridValue","dataType","fieldName","fieldOptions","options","permittedValues","checkboxSkin","checkbox","DatagridCheckbox","footerSkin","footer","padding","justifyContent","alignItems","paddingRight","pagination","margin","borderRadius","width","transform","loader","border","height","DatagridFooter","filteredTotalEntries","goToFirstPage","goToLastPage","goToNextPage","goToPreviousPage","lastPage","currentPage","page","pageChange","totalEntries","perPage","perPageChange","forceSearch","pagingLoading","pagingOptions","value","pageOption","classNames","icon","event","disabled","onKeyUp","key","headerSkin","cursor","background","groupButtonSkin","buttonsSkin","Button","label","link","href","DatagridHeader","columnOrdering","columnSearch","columnSearchValues","columnSearchValuesDisplayAs","extendedSearchData","onMultipleDeleteModalOpen","onSelectRowAllOrNone","actionButtonHasText","selectRowsAllOrNoneChecked","selectedIds","sorting","sortingFor","loadCssThirdParty","isMobileDevice","hasQuickSearch","columnName","InputSearchComponent","getSearchInputComponent","getClassNamesByDataType","placeholder","searchValue","target","searchValueDisplayAs","requireForceSearchOnChange","defaultProps","DatagridTitle","title","toolsSkin","buttonDropdown","left","top","opened","right","direction","DROPDOWN_DIRECTION","RIGHT","leftSpace","ButtonDropdownList","buttons","button","url","newTab","rel","preventDefault","text","ButtonDropdown","buttonIcon","buttonLabel","buttonDropdownRef","useRef","useState","setOpen","ref","onBlur","setTimeout","tabindex","DatagridTools","apiUrl","hasAdd","onAdd","onClearCache","onClearFiltering","onFilteringModalOpen","onOrderingReset","onRefresh","subject","visibleColumnsAsShortString","dispatch","useDispatch","hasSettings","hasPrint","hasFilters","hasColumnsButton","hasExportData","hasExportPdf","hasExportExcel","hasDatagridTools","dataForExport","getTitleTranslation","formActions","ADD","getFiltersTranslation","columnsActions","MODAL_OPEN","onColumnsModalOpen","printUrl","excelExportUrl","pdfExportUrl","error","console","log","wrapperSkin","wrapper","DatagridWrapper","children","formDialog","to","formModalOpen","deleteOneModalOpen","deleteMultipleModalOpen","miniGridSkin","DatagridMiniGrid","fieldTypes","INVISIBLE","DeleteMultipleModal","deleteMultipleModalClose","deleteMultiple","visibleColumnsWithDetails","fill","viewBox","xmlns","fillRule","d","clipRule","getDeleteConfirmationMessage","filter","row","DeleteSingleModal","deleteOneModalClose","deleteOne","errorDialog","showError","ErrorDialog","closeModal","details","message","defaultValue","formFields","filteringDialogSkin","filteringModalOpen","filteringSkin","Filtering","onFilteringModalClose","onSubmitCallback","onSubmit","extendedSearchOperator","useForm","defaultValues","basic_operator","extended_search","control","handleSubmit","getValues","useFieldArray","fields","append","remove","insert","numberOfFields","data","extendedSearch","forEach","searchData","push","deepCloneArray","errors","e","render","field","item","index","find","oldValues","newValue","oldColumn","newColumn","doTriggerFilterRefresh","getFilterValueFromDataType","isSearchable","firstName","doTriggerFilterValueRefresh","emptyFilterMapping","SearchInputComponent","getJssNameFromType","required","id","FilteringModal","onFilteringSubmit","ModalHeader","onClose","Form","modalLoading","formModalClose","formState","onFormSubmit","readOnly","publishEvents","setValue","useEffect","handleCustomEvent","detail","fieldValue","subscribeEvent","EVENT_SET_FIELD_VALUE","unsubscribeEvent","htmlFor","FormDialog","formIsReadOnly","GroupButtons","maxButtons","__button","themeComponents","selectColumnWidth","columnWidth","widthChanging","Object","keys","description"],"mappings":"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","file":"static/js/98.96e808f9.chunk.js","sourcesContent":["const columnsModalSkin = {\n  \"@keyframes fadeIn\": {\n    \"0%\": { opacity: \"0.1\" },\n    \"66%\": { opacity: \" 0.5\" },\n    \"100%\": { opacity: \"1\" },\n  },\n  \"columns-modal\": {\n    composes: \"modal\",\n    display: ({ columnsModalOpen }) => (columnsModalOpen ? \"block\" : \"none\"),\n    opacity: \"0\",\n    \"z-index\": \"10\",\n    animation: ({ columnsModalOpen }) =>\n      columnsModalOpen ? \"$fadeIn 0.15s ease 0s normal forwards 1\" : \"none\",\n  },\n  \"form-fields\": {\n    \"overflow-x\": \"hidden\",\n    \"overflow-y\": \"auto\",\n    position: \"relative\",\n    \"max-height\": \"calc(100vh - 240px)\",\n  },\n};\n\nexport default columnsModalSkin;\n","import { createUseStyles } from \"react-jss\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport columnsModalSkin from \"../skin/columns/columns-modal.skin\";\n\nconst useStyles = createUseStyles(columnsModalSkin);\n\nconst ColumnsModal = ({\n  columns,\n  columnsModalOpen,\n  onColumnsModalClose,\n  selectColumnsAllOrNone,\n  toggleVisibleColumn,\n  visibleColumns,\n}) => {\n  const classes = useStyles({ columnsModalOpen });\n\n  return (\n    <div className={classes[\"columns-modal\"]} tabIndex=\"-1\" role=\"dialog\">\n      <div className=\"modal-dialog modal-l\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{i18n.t(\"columns\")}</h5>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n              onClick={onColumnsModalClose}\n            />\n          </div>\n          <div className=\"modal-body\">\n            {columnsModalOpen && (\n              <>\n                <div>\n                  <input\n                    type=\"checkbox\"\n                    onChange={() => selectColumnsAllOrNone(columns)}\n                    checked={visibleColumns.length === columns.length}\n                  />\n                </div>\n                {columns.map((column) => (\n                  <div key={column.name}>\n                    <label>\n                      <input\n                        type=\"checkbox\"\n                        checked={visibleColumns.includes(column.name)}\n                        onChange={() =>\n                          toggleVisibleColumn(column.name, columns)\n                        }\n                      />{\" \"}\n                      {column.displayAs}\n                    </label>\n                  </div>\n                ))}\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ColumnsModal;\n","const bodySkin = {\n  \"column-text\": {\n    overflow: \"hidden\",\n    \"max-width\": \"350px\",\n    \"text-overflow\": \"ellipsis\",\n    \"white-space\": \"nowrap\",\n    \"vertical-align\": \"middle\",\n  },\n  \"column-action\": {\n    composes: \"border px-4 py-2 font-normal flex\",\n    \"white-space\": \"nowrap\",\n    \"align-items\": \"center\",\n  },\n};\n\nexport default bodySkin;\n","import PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { createUseStyles } from \"react-jss\";\nimport bodySkin from \"../skin/datagrid/body.skin\";\nimport ActionsColumn from \"../../../components/datagrid/body/actions-column\";\nimport { formatDatagridValue } from \"../../../utils/datagrid\";\n\nconst useStyles = createUseStyles(bodySkin);\nconst selectLocalCode = (state) => state.configuration.locale;\nconst selectDateFormat = (state) => state.configuration.dateFormat;\n\nconst DatagridBody = (props) => {\n  const locale = useSelector(selectLocalCode);\n  const dateFormat = useSelector(selectDateFormat);\n  const { rows, visibleColumns, hasActions, lastPrimaryKeyValue } = props;\n\n  const classes = useStyles(props);\n\n  return (\n    <tbody className={classes[\"table-body\"]}>\n      {rows.map((rowData, numRow) => (\n        <tr\n          key={numRow}\n          className={\n            lastPrimaryKeyValue &&\n            lastPrimaryKeyValue === rowData.grocery_crud_extras.primaryKeyValue\n              ? classes[\"animation-flash\"]\n              : undefined\n          }\n        >\n          {hasActions && visibleColumns.length > 0 && (\n            <td key=\"column__action\" className={classes[\"column-action\"]}>\n              <ActionsColumn\n                {...props}\n                primaryKeyValue={rowData.grocery_crud_extras.primaryKeyValue}\n              />\n            </td>\n          )}\n          {visibleColumns.map((column) => (\n            <td key={column.name}>\n              <div className={classes[\"column-text\"]}>\n                {formatDatagridValue(rowData[column.name], column.dataType, {\n                  dateFormat,\n                  fieldName: column.name,\n                  fieldOptions: column.options,\n                  locale,\n                  permittedValues: column.permittedValues,\n                  primaryKeyValue: rowData.grocery_crud_extras.primaryKeyValue,\n                })}\n              </div>\n            </td>\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  );\n};\n\nDatagridBody.propTypes = {\n  visibleColumns: PropTypes.array,\n  hasActions: PropTypes.bool,\n  rows: PropTypes.array,\n};\n\nexport default DatagridBody;\n","const checkboxSkin = {\n  checkbox: {\n    \"margin-right\": \"10px\",\n  },\n};\n\nexport default checkboxSkin;\n","import { createUseStyles } from \"react-jss\";\nimport checkboxSkin from \"../skin/datagrid/checkbox.skin\";\n\nconst useStyles = createUseStyles(checkboxSkin);\n\nconst DatagridCheckbox = ({ onChange, checked }) => {\n  const classes = useStyles();\n\n  return (\n    <input\n      type=\"checkbox\"\n      className={classes[\"checkbox\"]}\n      onChange={onChange}\n      checked={checked}\n    />\n  );\n};\n\nexport default DatagridCheckbox;\n","const footerSkin = {\n  footer: {\n    display: \"flex\",\n    padding: \"5px\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  \"footer-child\": {\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& > div\": {\n      paddingRight: \"5px\",\n    },\n  },\n  pagination: {\n    composes: \"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\",\n    margin: \"0\",\n  },\n  \"page-number\": {\n    composes:\n      \"relative inline-flex items-center px-2 py-2 border border-gray-300 bg-white text-sm font-medium\",\n    borderRadius: \"0\",\n    width: \"100px\",\n  },\n  \"@keyframes spin\": {\n    \"0%\": { transform: \"rotate(0deg)\" },\n    \"100%\": { transform: \"rotate(360deg)\" },\n  },\n  loader: {\n    border: \"4px solid #f3f3f3\",\n    \"border-radius\": \"50%\",\n    \"border-top\": \"4px solid #3498db\",\n    width: \"16px\",\n    height: \"16px\",\n    \"-webkit-animation\": \"$spin 2s linear infinite\" /* Safari */,\n    animation: \"$spin 2s linear infinite\",\n    \"margin-right\": \"10px\",\n  },\n};\n\nexport default footerSkin;\n","import { createUseStyles } from \"react-jss\";\nimport Icon from \"../../../components/common/icon\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport DatagridPagingItemsLabel from \"../../../components/datagrid/footer/datagrid-paging-items-label\";\nimport footerSkin from \"../skin/datagrid/footer.skin\";\n\nconst useStyles = createUseStyles(footerSkin);\n\nconst DatagridFooter = (props) => {\n  const classes = useStyles(props);\n\n  const {\n    filteredTotalEntries,\n    goToFirstPage,\n    goToLastPage,\n    goToNextPage,\n    goToPreviousPage,\n    lastPage,\n    page: currentPage,\n    pageChange,\n    totalEntries,\n    perPage,\n    perPageChange,\n    forceSearch,\n    pagingLoading,\n    pagingOptions,\n  } = props;\n\n  return (\n    <div className={classes.footer}>\n      <div className={classes[\"footer-child\"]}>\n        <div>Show</div>\n        <div className=\"floatL r5 l5 t3 per-page-container\">\n          <select\n            className=\"form-control form-select\"\n            onChange={perPageChange}\n            value={perPage}\n          >\n            {pagingOptions.map((pageOption) => (\n              <option key={pageOption} value={pageOption}>\n                {pageOption}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div>entries</div>\n      </div>\n      <div className={classes[\"footer-child\"]}>\n        {pagingLoading && <div className={classes.loader} />}\n        {filteredTotalEntries && !pagingLoading ? (\n          <div>\n            <DatagridPagingItemsLabel\n              currentPage={currentPage}\n              totalEntries={totalEntries}\n              perPage={perPage}\n              filteredTotalEntries={filteredTotalEntries}\n            />\n          </div>\n        ) : null}\n        <div>\n          <div className={classes.pagination}>\n            <button\n              className={classNames(\n                \"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium\",\n                {\n                  \"disabled text-gray-500\": currentPage === 1,\n                  \"cursor-pointer hover:bg-gray-50\": currentPage > 1,\n                }\n              )}\n              onClick={() => goToFirstPage(currentPage, lastPage)}\n            >\n              <Icon icon=\"step-backward\" />\n            </button>\n            <button\n              className={classNames(\n                \"relative inline-flex items-center px-2 py-2 border border-gray-300 bg-white text-sm font-medium\",\n                {\n                  \"disabled text-gray-500\": currentPage === 1,\n                  \"cursor-pointer hover:bg-gray-50\": currentPage > 1,\n                }\n              )}\n              onClick={() => goToPreviousPage(currentPage, lastPage)}\n            >\n              <Icon icon=\"chevron-left\" />\n            </button>\n            <input\n              type=\"number\"\n              className={classes[\"page-number\"]}\n              value={currentPage}\n              onChange={(event) => pageChange(event, currentPage, lastPage)}\n              disabled={filteredTotalEntries === 0}\n              onKeyUp={(event) => {\n                if (event.key === \"Enter\") {\n                  forceSearch();\n                }\n              }}\n            />\n            <button\n              className={classNames(\n                \"relative inline-flex items-center px-2 py-2 border border-gray-300 bg-white text-sm font-medium\",\n                {\n                  \"disabled text-gray-500\": currentPage === lastPage,\n                  \"cursor-pointer hover:bg-gray-50\": currentPage < lastPage,\n                }\n              )}\n              onClick={() => goToNextPage(currentPage, lastPage)}\n            >\n              <Icon icon=\"chevron-right\" />\n            </button>\n            <button\n              className={classNames(\n                \"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium\",\n                {\n                  \"disabled text-gray-500\": currentPage === lastPage,\n                  \"cursor-pointer hover:bg-gray-50\": currentPage < lastPage,\n                }\n              )}\n              onClick={() => goToLastPage(currentPage, lastPage)}\n            >\n              <Icon icon=\"step-forward\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDatagridFooter.propTypes = {\n  page: PropTypes.number,\n};\n\nexport default DatagridFooter;\n","const headerSkin = {\n  \"search-column\": {\n    \"min-width\": \"160px\",\n  },\n  \"table-th-with-ordering\": {\n    cursor: \"pointer\",\n    \"&:hover\": {\n      background: \"var(--gc-table-hover-background)\",\n    },\n  },\n  \"actions-column-header\": {\n    \"align-items\": \"center\",\n    display: \"flex\",\n    height: \"39px\",\n  },\n  \"with-ordering\": {\n    display: \"flex\",\n    \"justify-content\": \"space-between\",\n    \"align-items\": \"center\",\n  },\n  \"input-text\": {\n    composes: \"px-4 py-3 border border-gray-200 w-full\",\n  },\n  \"input-select\": {\n    composes: \"px-4 py-3 border border-gray-200 w-full\",\n  },\n  \"input-select-search\": {},\n};\n\nexport default headerSkin;\n","const groupButtonSkin = {\n  \"simple-button\": {\n    composes:\n      \"bg-white hover:bg-gray-50 text-gray-700 font-bold py-2 px-4 rounded border border-gray-700 shadow-sm text-gray-700 hover:bg-gray-100 focus:ring-4 focus:ring-gray-300\",\n    \"margin-right\": \"5px\",\n  },\n  \"buttons-group\": {\n    display: \"flex\",\n  },\n};\n\nexport default groupButtonSkin;\n","import Icon from \"../../../components/common/icon\";\nimport buttonsSkin from \"../skin/buttons/buttons.skin\";\nimport { createUseStyles } from \"react-jss\";\n\nconst useStyles = createUseStyles(buttonsSkin);\n\nconst Button = ({ onClick, icon, label, link = false, href }) => {\n  const classes = useStyles();\n\n  if (link) {\n    return (\n      <a className={classes[\"simple-button\"]} onClick={onClick} href={href}>\n        {icon && (\n          <>\n            <Icon icon={icon}></Icon>&nbsp;\n          </>\n        )}\n        {label}\n      </a>\n    );\n  }\n\n  return (\n    <button className={classes[\"simple-button\"]} onClick={onClick}>\n      {icon && (\n        <>\n          <Icon icon={icon}></Icon>&nbsp;\n        </>\n      )}\n      {label}\n    </button>\n  );\n};\n\nexport default Button;\n","import PropTypes from \"prop-types\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport headerSkin from \"../skin/datagrid/header.skin\";\nimport { createUseStyles } from \"react-jss\";\nimport Icon from \"../../../components/common/icon\";\nimport {\n  getSearchInputComponent,\n  requireForceSearchOnChange,\n} from \"../../../utils/field-types\";\nimport { getClassNamesByDataType } from \"../../../utils/datagrid\";\nimport React from \"react\";\nimport Button from \"../buttons/button\";\n\nconst useStyles = createUseStyles(headerSkin);\n\nconst DatagridHeader = (props) => {\n  const {\n    DatagridCheckbox,\n    columnOrdering,\n    columnSearch,\n    columnSearchValues,\n    columnSearchValuesDisplayAs,\n    extendedSearchData,\n    forceSearch,\n    hasActions,\n    onMultipleDeleteModalOpen,\n    onSelectRowAllOrNone,\n    options: { actionButtonHasText },\n    selectRowsAllOrNoneChecked,\n    selectedIds,\n    sorting,\n    sortingFor,\n    visibleColumns,\n    loadCssThirdParty,\n    isMobileDevice,\n  } = props;\n\n  const classes = useStyles(props);\n\n  const hasQuickSearch = extendedSearchData.length === 0;\n\n  return (\n    <thead>\n      <tr>\n        {hasActions && visibleColumns.length > 0 && (\n          <th>{i18n.t(\"actions\")}</th>\n        )}\n        {visibleColumns.map((column) => (\n          <th\n            className={classes[\"table-th-with-ordering\"]}\n            key={column.name}\n            onClick={() =>\n              columnOrdering({\n                columnName: column.name,\n                sorting: sorting === \"\" || sorting === \"desc\" ? \"asc\" : \"desc\",\n              })\n            }\n          >\n            <div className={classes[\"with-ordering\"]}>\n              <span>{column.displayAs}</span>\n              {sortingFor === column.name ? (\n                <Icon\n                  icon={\n                    sorting === \"asc\"\n                      ? \"sort-amount-down-alt\"\n                      : \"sort-amount-down\"\n                  }\n                />\n              ) : (\n                <Icon icon=\"sort\" />\n              )}\n            </div>\n          </th>\n        ))}\n      </tr>\n      <tr>\n        {hasActions && visibleColumns.length > 0 && (\n          <td>\n            <div className={classes[\"actions-column-header\"]}>\n              {!isMobileDevice && (\n                <>\n                  <DatagridCheckbox\n                    onChange={onSelectRowAllOrNone}\n                    checked={selectRowsAllOrNoneChecked}\n                  />\n                  {selectedIds.length > 0 && (\n                    <Button\n                      onClick={onMultipleDeleteModalOpen}\n                      icon=\"trash\"\n                      label={actionButtonHasText ? i18n.t(\"action_delete\") : \"\"}\n                    />\n                  )}\n                </>\n              )}\n            </div>\n          </td>\n        )}\n        {visibleColumns.map((column) => {\n          const InputSearchComponent = getSearchInputComponent(column.dataType);\n\n          return (\n            <td key={column.name} className={classes[\"search-column\"]}>\n              {hasQuickSearch && (\n                <InputSearchComponent\n                  className={classes[getClassNamesByDataType(column.dataType)]}\n                  placeholder={i18n.t(\"quick_search\")}\n                  permittedValues={column.permittedValues}\n                  loadCssThirdParty={loadCssThirdParty}\n                  onChange={(event) => {\n                    columnSearch({\n                      columnName: column.name,\n                      searchValue:\n                        typeof event.target.value === \"object\"\n                          ? event.target.value.key\n                          : event.target.value,\n                      searchValueDisplayAs:\n                        typeof event.target.value === \"object\"\n                          ? event.target.value.displayAs\n                          : \"\",\n                    });\n                    if (requireForceSearchOnChange(column.dataType) === true) {\n                      forceSearch();\n                    }\n                  }}\n                  onKeyUp={(event) => {\n                    if (event.key === \"Enter\") {\n                      forceSearch();\n                    }\n                  }}\n                  value={\n                    columnSearchValues[column.name]\n                      ? columnSearchValues[column.name]\n                      : \"\"\n                  }\n                  displayAs={\n                    columnSearchValuesDisplayAs[column.name]\n                      ? columnSearchValuesDisplayAs[column.name]\n                      : \"\"\n                  }\n                  fieldName={column.name}\n                />\n              )}\n            </td>\n          );\n        })}\n      </tr>\n    </thead>\n  );\n};\n\nDatagridHeader.propTypes = {\n  hasActions: PropTypes.bool,\n  visibleColumns: PropTypes.array,\n};\n\nDatagridHeader.defaultProps = {\n  hasActions: false,\n  visibleColumns: [],\n  options: {\n    actionButtonHasText: true,\n  },\n};\n\nexport default DatagridHeader;\n","const DatagridTitle = ({ title }) => {\n  return <div className=\"gc-datagrid-title\">{title}</div>;\n};\n\nexport default DatagridTitle;\n","const toolsSkin = {\n  \"datagrid-tools\": {\n    position: \"relative\",\n    padding: \"10px\",\n    \"border-left\": \"1px solid var(--gc-border-separator-color)\",\n    \"border-right\": \"1px solid var(--gc-border-separator-color)\",\n    display: \"flex\",\n    \"justify-content\": \"space-between\",\n  },\n  \"simple-button\": {\n    composes:\n      \"bg-white hover:bg-gray-50 text-gray-700 font-bold py-2 px-4 rounded border border-gray-700 shadow-sm text-gray-700 hover:bg-gray-100\",\n    \"margin-right\": \"5px\",\n  },\n  \"tools-container\": {\n    display: \"flex\",\n  },\n};\n\nexport default toolsSkin;\n","import { DROPDOWN_DIRECTION } from \"../../../../constants/dropdown\";\n\nconst buttonDropdown = {\n  \"dropdown-menu\": {\n    composes:\n      \"origin-top-right absolute right-0 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 text-gray-700 font-bold focus:outline-none\",\n    left: \"auto\",\n    top: \"auto\",\n    display: ({ opened }) => (opened ? \"block\" : \"none\"),\n    opacity: ({ opened }) => (opened ? \"1\" : \"0\"),\n    right: ({ direction }) =>\n      direction === DROPDOWN_DIRECTION.RIGHT ? \"0\" : \"auto\",\n    \"margin-top\": \"38px\",\n    \"z-index\": \"100\",\n  },\n  \"dropdown-menu-container\": {\n    composes: \"inline-flex\",\n    \"margin-left\": ({ leftSpace }) => (leftSpace ? \"5px\" : \"0\"),\n  },\n  \"dropdown-menu-button\": {\n    composes:\n      \"inline-flex justify-center bg-white hover:bg-gray-50 text-gray-700 font-bold py-2 px-4 rounded border border-gray-700 shadow-sm hover:bg-gray-100\",\n    \"align-items\": \"center\",\n  },\n};\n\nexport default buttonDropdown;\n","import Icon from \"../../../components/common/icon\";\n\nconst ButtonDropdownList = ({ buttons }) => {\n  return (\n    <ul className=\"py-1 text-sm text-gray-700 dark:text-gray-20\">\n      {buttons.map((button) => (\n        <li>\n          <a\n            key={button.key}\n            href={button.url ? button.url : \"\"}\n            target={button.newTab ? \"_blank\" : undefined}\n            className=\"text-gray-700 block px-4 py-2 text-sm hover:bg-gray-100\"\n            rel=\"noreferrer\"\n            onClick={\n              button.onClick\n                ? (event) => {\n                    event.preventDefault();\n                    if (button.onClick) {\n                      button.onClick({\n                        primaryKeyValue: button.primaryKeyValue,\n                      });\n                    }\n                  }\n                : undefined\n            }\n          >\n            {button.icon && (\n              <>\n                <Icon icon={button.icon} />\n                &nbsp;&nbsp;\n              </>\n            )}\n            {button.text}\n          </a>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ButtonDropdownList;\n","import PropTypes from \"prop-types\";\nimport { createUseStyles } from \"react-jss\";\nimport { useState, useRef } from \"react\";\n\nimport buttonDropdown from \"../skin/buttons/button-dropdown.skin\";\nimport Icon from \"../../../components/common/icon\";\nimport ButtonDropdownList from \"./button-dropdown-list\";\n\nconst useStyles = createUseStyles(buttonDropdown);\n\nconst ButtonDropdown = ({\n  buttons,\n  buttonIcon,\n  buttonLabel,\n  direction,\n  leftSpace,\n}) => {\n  const buttonDropdownRef = useRef(null);\n  const [opened, setOpen] = useState(false);\n\n  function openToggle() {\n    setOpen(!opened);\n  }\n\n  function close(event) {\n    // Having enough time to close in case you press any click into the dropdown\n    setTimeout(() => {\n      setOpen(false);\n    }, 200);\n  }\n\n  const classes = useStyles({ opened, direction, leftSpace });\n\n  if (buttons.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={classes[\"dropdown-menu-container\"]} ref={buttonDropdownRef}>\n      <button\n        className={classes[\"dropdown-menu-button\"]}\n        onClick={openToggle}\n        onBlur={close}\n      >\n        {buttonIcon && (\n          <>\n            <Icon icon={buttonIcon} />\n            &nbsp;\n          </>\n        )}\n        {buttonLabel}&nbsp;\n        <Icon icon=\"caret-down\" />\n      </button>\n\n      <div\n        className={classes[\"dropdown-menu\"]}\n        role=\"menu\"\n        aria-orientation=\"vertical\"\n        aria-labelledby=\"menu-button\"\n        tabindex=\"-1\"\n      >\n        <div className=\"py-1\" role=\"none\">\n          <ButtonDropdownList buttons={buttons} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nButtonDropdown.propTypes = {\n  buttons: PropTypes.array,\n  buttonIcon: PropTypes.string,\n  buttonLabel: PropTypes.string,\n  direction: PropTypes.oneOf([\"left\", \"right\"]),\n  leftSpace: PropTypes.bool,\n};\n\nButtonDropdown.defaultProps = {\n  buttons: [],\n  buttonIcon: \"\",\n  buttonLabel: \"\",\n  direction: \"left\",\n  leftSpace: false,\n};\n\nexport default ButtonDropdown;\n","import { createUseStyles } from \"react-jss\";\nimport toolsSkin from \"../skin/datagrid/tools.skin\";\nimport Icon from \"../../../components/common/icon\";\nimport {\n  getFiltersTranslation,\n  getTitleTranslation,\n} from \"../../../utils/translations-helper\";\nimport { formActions } from \"../../../actions/form-actions\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport ButtonDropdown from \"../buttons/button-dropdown\";\nimport { DROPDOWN_DIRECTION } from \"../../../constants/dropdown\";\nimport { excelExportUrl, pdfExportUrl, printUrl } from \"../../../utils/urls\";\nimport Button from \"../buttons/button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { columnsActions } from \"../../../actions/columns-actions\";\nimport FatalErrorMessage from \"../../../components/common/error/fatal-error-message\";\n\nconst useStyles = createUseStyles(toolsSkin);\n\nconst onColumnsModalOpen = (dispatch) =>\n  dispatch({\n    type: columnsActions.MODAL_OPEN,\n  });\n\nconst DatagridTools = (props) => {\n  const {\n    apiUrl,\n    columnSearchValues,\n    extendedSearchData,\n    hasAdd,\n    onAdd,\n    onClearCache,\n    onClearFiltering,\n    onFilteringModalOpen,\n    onOrderingReset,\n    onRefresh,\n    sorting,\n    sortingFor,\n    subject,\n    visibleColumnsAsShortString,\n  } = props;\n\n  const classes = useStyles(props);\n  const dispatch = useDispatch();\n  const hasSettings = useSelector((state) => state.configuration.hasSettings);\n  const hasPrint = useSelector((state) => state.configuration.hasPrint);\n  const hasFilters = useSelector((state) => state.configuration.hasFilters);\n  const hasColumnsButton = useSelector(\n    (state) => state.configuration.hasColumnsButton\n  );\n  const hasExportData = useSelector(\n    (state) => state.configuration.hasExportData\n  );\n  const hasExportPdf = useSelector((state) => state.configuration.hasExportPdf);\n  const hasExportExcel = useSelector(\n    (state) => state.configuration.hasExportExcel\n  );\n\n  const hasDatagridTools = hasAdd;\n\n  const dataForExport = {\n    apiUrl,\n    columnSearchValues,\n    sorting,\n    sortingFor,\n    visibleColumnsAsShortString,\n    extendedSearchData,\n  };\n\n  try {\n    return hasDatagridTools ? (\n      <div className={classes[\"datagrid-tools\"]}>\n        {hasAdd && (\n          <Button\n            link={true}\n            href=\"/add\"\n            icon=\"plus\"\n            label={getTitleTranslation(formActions.ADD, subject)}\n            onClick={(event) => {\n              event.preventDefault();\n              onAdd();\n            }}\n          />\n        )}\n        <div>\n          {hasFilters && (\n            <button\n              className={\n                extendedSearchData.length > 0\n                  ? classes[\"success-button\"]\n                  : classes[\"simple-button\"]\n              }\n              onClick={onFilteringModalOpen}\n            >\n              <Icon icon=\"filter\"></Icon>&nbsp;\n              {getFiltersTranslation(extendedSearchData.length)}\n            </button>\n          )}\n          {hasFilters && extendedSearchData.length > 0 && (\n            <button\n              className={classes[\"danger-button\"]}\n              onClick={onClearFiltering}\n            >\n              <Icon icon=\"eraser\"></Icon>&nbsp;\n              {i18n.t(\"filtering_remove_filters\")}\n            </button>\n          )}\n          {hasColumnsButton && (\n            <Button\n              onClick={() => onColumnsModalOpen(dispatch)}\n              label={i18n.t(\"columns\")}\n              icon=\"list-alt\"\n            />\n          )}\n          {hasPrint && (\n            <a\n              className={classes[\"simple-button\"]}\n              href={printUrl(dataForExport)}\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              <Icon icon=\"print\"></Icon>&nbsp;\n              {i18n.t(\"print\")}\n            </a>\n          )}\n          {hasExportData && (\n            <ButtonDropdown\n              buttons={[\n                hasExportExcel && {\n                  icon: \"file-excel\",\n                  text: \"Excel\",\n                  url: excelExportUrl(dataForExport),\n                  newTab: true,\n                  key: \"excel\",\n                },\n                hasExportPdf && {\n                  icon: \"file-pdf\",\n                  text: \"PDF\",\n                  url: pdfExportUrl(dataForExport),\n                  newTab: true,\n                  key: \"pdf\",\n                },\n              ]}\n              buttonLabel={i18n.t(\"export_to_file\")}\n              buttonIcon=\"download\"\n              leftSpace={true}\n            />\n          )}\n          {hasSettings && (\n            <ButtonDropdown\n              leftSpace={true}\n              direction={DROPDOWN_DIRECTION.RIGHT}\n              buttons={[\n                {\n                  icon: \"broom\",\n                  text: i18n.t(\"clear_cache\"),\n                  onClick: onClearCache,\n                  key: \"clear_cache\",\n                },\n                {\n                  icon: \"eraser\",\n                  text: i18n.t(\"clear_filtering\"),\n                  onClick: onClearFiltering,\n                  key: \"clear_filtering\",\n                },\n                {\n                  icon: \"unlink\",\n                  text: i18n.t(\"reset_ordering\"),\n                  onClick: onOrderingReset,\n                  key: \"reset_ordering\",\n                },\n                {\n                  icon: \"sync-alt\",\n                  text: i18n.t(\"refresh\"),\n                  onClick: onRefresh,\n                  key: \"refresh\",\n                },\n              ]}\n              buttonLabel={i18n.t(\"settings\")}\n              buttonIcon=\"cog\"\n            />\n          )}\n        </div>\n      </div>\n    ) : null;\n  } catch (error) {\n    console.log(error);\n    return <FatalErrorMessage />;\n  }\n};\n\nexport default DatagridTools;\n","const wrapperSkin = {\n  wrapper: {\n    composes: \"border table-auto\",\n    width: \"100%\",\n  },\n};\n\nexport default wrapperSkin;\n","import { createUseStyles } from \"react-jss\";\n\nimport wrapperSkin from \"../skin/datagrid/wrapper.skin\";\n\nconst useStyles = createUseStyles(wrapperSkin);\n\nconst DatagridWrapper = (props) => {\n  const classes = useStyles(props);\n\n  return <table className={classes.wrapper}>{props.children}</table>;\n};\n\nexport default DatagridWrapper;\n","const formDialog = {\n  \"@keyframes fadeIn\": {\n    \"0%\": { opacity: \"0.1\" },\n    \"66%\": { opacity: \" 0.5\" },\n    \"100%\": { opacity: \"1\" },\n  },\n  \"@keyframes shine\": {\n    to: {\n      \"background-position\": \"100% 0\",\n    },\n  },\n  \"form-dialog\": {\n    composes:\n      \"hidden overflow-y-auto overflow-x-hidden fixed right-0 left-0 top-4 z-50 justify-center items-center h-modal md:h-full md:inset-0\",\n    display: ({ formModalOpen }) => (formModalOpen ? \"block\" : \"none\"),\n    opacity: \"0\",\n    \"z-index\": \"10\",\n    animation: ({ formModalOpen }) =>\n      formModalOpen ? \"$fadeIn 0.15s ease 0s normal forwards 1\" : \"none\",\n  },\n  \"primary-button\": {\n    composes:\n      \"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\",\n  },\n  \"secondary-button\": {\n    composes:\n      \"text-gray-500 bg-white hover:bg-gray-100 focus:ring-4 focus:ring-gray-300 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600\",\n  },\n  \"form-fields\": {\n    composes: \"w-full md:w-auto overflow-auto\",\n    position: \"relative\",\n    \"max-height\": \"calc(100vh - 240px)\",\n  },\n  \"skeleton-loader\": {\n    width: \"100%\",\n    height: \"15px\",\n    border: \"1px solid rgb(239,239,239)\",\n    \"border-radius\": \"4px\",\n    display: \"block\",\n    \"background-repeat\": \"repeat-y\",\n    \"background-size\": \"50px 500px\",\n    \"background-position\": \"0 0\",\n    background:\n      \"linear-gradient(to right, rgba(239, 239, 239, 0), rgba(239, 239, 239, 0.5) 50%, rgba(239, 239, 239, 0) 80%),rgb(255,255,255)\",\n    animation: \"$shine 2s infinite\",\n    \"animation-delay\": \"0.3s\",\n  },\n  \"modal-delete-one\": {\n    composes:\n      \"overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 w-full md:inset-0 h-modal md:h-full\",\n    display: ({ deleteOneModalOpen }) =>\n      deleteOneModalOpen ? \"block\" : \"none\",\n  },\n  \"modal-delete-multiple\": {\n    composes:\n      \"overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 w-full md:inset-0 h-modal md:h-full\",\n    display: ({ deleteMultipleModalOpen }) =>\n      deleteMultipleModalOpen ? \"block\" : \"none\",\n  },\n  \"modal-header\": {\n    composes:\n      \"flex justify-between items-start p-4 rounded-t border-b dark:border-gray-600\",\n  },\n  \"modal-header-label\": {\n    composes: \"text-xl font-semibold text-gray-900 dark:text-white\",\n  },\n  \"modal-dialog\": {\n    composes: \"relative p-4 w-full max-w-2xl h-full md:h-auto\",\n  },\n  \"modal-content\": {\n    composes: \"relative bg-white rounded-lg shadow dark:bg-gray-700\",\n  },\n};\n\nexport default formDialog;\n","const miniGridSkin = {\n  \"mini-grid\": {\n    composes: \"table table-bordered table-hover\",\n    \"margin-bottom\": \"0px\",\n  },\n  \"scrolling-wrapper\": {\n    width: \"100%\",\n    position: \"relative\",\n    \"overflow-x\": \"auto\",\n  },\n  \"column-text\": {\n    \"&>span\": {\n      \"text-overflow\": \"ellipsis\",\n      \"white-space\": \"nowrap\",\n      overflow: \"hidden\",\n    },\n    \"align-items\": \"center\",\n    \"max-width\": \"350px\",\n    \"min-width\": \"0\", // small hack so we can have flex to work with ellipsis\n    \"vertical-align\": \"middle\",\n    display: \"flex\",\n    height: \"38px\",\n  },\n  \"mini-grid-body\": {\n    \".table &\": {\n      \"border-top\": \"none\",\n    },\n  },\n};\n\nexport default miniGridSkin;\n","import { createUseStyles } from \"react-jss\";\nimport miniGridSkin from \"../skin/datagrid/datagrid-mini.skin\";\nimport { formatDatagridValue } from \"../../../utils/datagrid\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { fieldTypes } from \"../../../constants/field-types\";\n\nconst useStyles = createUseStyles(miniGridSkin);\n\nconst selectLocalCode = (state) => state.configuration.locale;\nconst selectDateFormat = (state) => state.configuration.dateFormat;\n\nconst DatagridMiniGrid = ({ visibleColumns, rows }) => {\n  const classes = useStyles();\n\n  const locale = useSelector(selectLocalCode);\n  const dateFormat = useSelector(selectDateFormat);\n\n  return (\n    <div className={classes[\"scrolling-wrapper\"]}>\n      <table className={classes[\"mini-grid\"]}>\n        <thead>\n          <tr>\n            {visibleColumns.map((column) =>\n              column.dataType === fieldTypes.INVISIBLE ? null : (\n                <th key={column.name}>{column.displayAs}</th>\n              )\n            )}\n          </tr>\n        </thead>\n        <tbody className={classes[\"mini-grid-body\"]}>\n          {rows.map((rowData, numRow) => (\n            <tr key={numRow}>\n              {visibleColumns.map((column) =>\n                column.dataType === fieldTypes.INVISIBLE ? null : (\n                  <td key={column.name}>\n                    <div className={classes[\"column-text\"]}>\n                      {formatDatagridValue(\n                        rowData[column.name],\n                        column.dataType,\n                        {\n                          permittedValues: column.permittedValues,\n                          fieldName: column.name,\n                          locale,\n                          dateFormat,\n                          primaryKeyValue:\n                            rowData.grocery_crud_extras.primaryKeyValue,\n                        }\n                      )}\n                    </div>\n                  </td>\n                )\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nDatagridMiniGrid.propTypes = {\n  rows: PropTypes.array,\n  visibleColumns: PropTypes.array,\n};\n\nexport default DatagridMiniGrid;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport { getDeleteConfirmationMessage } from \"../../../utils/translations-helper\";\nimport DatagridMiniGrid from \"../datagrid/datagrid-mini-grid\";\nimport Button from \"../buttons/button\";\n\nconst useStyles = createUseStyles(formDialog);\n\nconst DeleteMultipleModal = (props) => {\n  const {\n    deleteMultipleModalOpen,\n    deleteMultipleModalClose,\n    deleteMultiple,\n    selectedIds,\n    visibleColumnsWithDetails,\n    rows,\n  } = props;\n\n  const classes = useStyles(props);\n\n  return (\n    <div\n      className={classes[\"modal-delete-multiple\"]}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel\"\n    >\n      <div className={classes[\"modal-dialog\"]}>\n        <div className={classes[\"modal-content\"]}>\n          <div className={classes[\"modal-header\"]}>\n            <h3 className={classes[\"modal-header-label\"]}>\n              {i18n.t(\"action_delete\")}\n            </h3>\n            <button\n              type=\"button\"\n              className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white\"\n              onClick={deleteMultipleModalClose}\n            >\n              <svg\n                className=\"w-5 h-5\"\n                fill=\"currentColor\"\n                viewBox=\"0 0 20 20\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                  clipRule=\"evenodd\"\n                ></path>\n              </svg>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <p>{getDeleteConfirmationMessage(selectedIds.length)}</p>\n            {deleteMultipleModalOpen && (\n              <DatagridMiniGrid\n                visibleColumns={visibleColumnsWithDetails}\n                rows={rows.filter((row) =>\n                  selectedIds.includes(row.grocery_crud_extras.primaryKeyValue)\n                )}\n              />\n            )}\n          </div>\n          {deleteMultipleModalOpen && (\n            <div className=\"flex items-center p-6 space-x-2 rounded-b border-t border-gray-200 dark:border-gray-600\">\n              <Button\n                label={i18n.t(\"cancel\")}\n                onClick={deleteMultipleModalClose}\n              />\n              {/* making sure that we have at least one selection to remove */}\n              {selectedIds.length > 0 && (\n                <button\n                  type=\"button\"\n                  className=\"bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 text-white dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900 font-bold py-2 px-4 rounded border border-red-500 shadow-sm\"\n                  onClick={deleteMultiple}\n                >\n                  {i18n.t(\"action_delete\")}\n                </button>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDeleteMultipleModal.propTypes = {\n  modalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n};\n\nexport default DeleteMultipleModal;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport Button from \"../buttons/button\";\nimport DatagridMiniGrid from \"../../bootstrap-v5/datagrid/datagrid-mini-grid\";\n\nconst useStyles = createUseStyles(formDialog);\n\nconst DeleteSingleModal = ({\n  deleteOneModalOpen,\n  deleteOneModalClose,\n  deleteOne,\n  visibleColumnsWithDetails,\n  primaryKeyValue,\n  rows,\n}) => {\n  const classes = useStyles({\n    deleteOneModalOpen,\n  });\n\n  // Tailwind CSS modal component\n\n  return (\n    <div\n      className={classes[\"modal-delete-one\"]}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel\"\n    >\n      <div className={classes[\"modal-dialog\"]}>\n        <div className={classes[\"modal-content\"]}>\n          <div className={classes[\"modal-header\"]}>\n            <h3 className={classes[\"modal-header-label\"]}>\n              {i18n.t(\"action_delete\")}\n            </h3>\n            <button\n              type=\"button\"\n              className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white\"\n              onClick={deleteOneModalClose}\n            >\n              <svg\n                className=\"w-5 h-5\"\n                fill=\"currentColor\"\n                viewBox=\"0 0 20 20\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                  clipRule=\"evenodd\"\n                ></path>\n              </svg>\n            </button>\n          </div>\n          <div className=\"p-6 space-y-6\">\n            <p>{i18n.t(\"confirm_delete\")}</p>\n            {deleteOneModalOpen && (\n              <DatagridMiniGrid\n                visibleColumns={visibleColumnsWithDetails}\n                rows={rows.filter(\n                  (row) =>\n                    row.grocery_crud_extras.primaryKeyValue === primaryKeyValue\n                )}\n              />\n            )}\n          </div>\n          {deleteOneModalOpen && (\n            <div className=\"flex items-center p-6 space-x-2 rounded-b border-t border-gray-200 dark:border-gray-600\">\n              <Button label={i18n.t(\"cancel\")} onClick={deleteOneModalClose} />\n              <button\n                type=\"button\"\n                className=\"bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 text-white dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900 font-bold py-2 px-4 rounded border border-red-500 shadow-sm\"\n                onClick={deleteOne}\n              >\n                {i18n.t(\"action_delete\")}\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDeleteSingleModal.propTypes = {\n  modalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n};\n\nexport default DeleteSingleModal;\n","const errorDialog = {\n  \"error-dialog\": {\n    composes: \"modal\",\n    \"z-index\": \"1100\", // more than 1050 that is the default of bootstrap modal\n    display: ({ showError }) => (showError ? \"block\" : \"none\"),\n  },\n  \"error-details\": {\n    width: \"100%\",\n    height: \"200px\",\n  },\n};\n\nexport default errorDialog;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport errorDialog from \"../skin/error-dialog/error-dialog.skin\";\nimport i18n from \"../../../utils/locale/i18n\";\n\nconst useStyles = createUseStyles(errorDialog);\n\nconst ErrorDialog = ({ closeModal, showError, details, message }) => {\n  const classes = useStyles({ showError });\n\n  return (\n    <div\n      className={classes[\"error-dialog\"]}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel\"\n    >\n      <div className=\"modal-dialog modal-xl\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{i18n.t(\"error_generic_title\")}</h5>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n              onClick={closeModal}\n            />\n          </div>\n          <div className=\"modal-body\">\n            <div>Message: {message}</div>\n            <div>Error:</div>\n            <div>\n              <textarea\n                defaultValue={details || \"\"}\n                className={classes[\"error-details\"]}\n              />\n            </div>\n          </div>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-default btn-outline-dark\"\n              data-dismiss=\"modal\"\n              onClick={closeModal}\n            >\n              {i18n.t(\"close_modal\")}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nErrorDialog.propTypes = {\n  formModalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n};\n\nErrorDialog.defaultProps = {\n  formFields: [],\n};\n\nexport default ErrorDialog;\n","const filteringDialogSkin = {\n  \"@keyframes fadeIn\": {\n    \"0%\": { opacity: \"0.1\" },\n    \"66%\": { opacity: \" 0.5\" },\n    \"100%\": { opacity: \"1\" },\n  },\n  \"filtering-modal\": {\n    composes: \"modal\",\n    display: ({ filteringModalOpen }) =>\n      filteringModalOpen ? \"block\" : \"none\",\n    opacity: \"0\",\n    animation: ({ filteringModalOpen }) =>\n      filteringModalOpen ? \"$fadeIn 0.15s ease 0s normal forwards 1\" : \"none\",\n  },\n  \"form-fields\": {\n    \"overflow-x\": \"hidden\",\n    \"overflow-y\": \"auto\",\n    position: \"relative\",\n    \"max-height\": \"calc(100vh - 240px)\",\n  },\n};\n\nexport default filteringDialogSkin;\n","const filteringSkin = {\n  \"filtering-row\": {\n    composes: \"row\",\n    \"padding-top\": \"10px\",\n    \"padding-bottom\": \"10px\",\n  },\n};\n\nexport default filteringSkin;\n","import { useForm, useFieldArray, Controller } from \"react-hook-form\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport React from \"react\";\nimport filteringSkin from \"../skin/filtering/filtering.skin\";\nimport { createUseStyles } from \"react-jss\";\nimport Icon from \"../../../components/common/icon\";\nimport { deepCloneArray } from \"../../../utils/array-helper\";\nimport {\n  doTriggerFilterRefresh,\n  doTriggerFilterValueRefresh,\n  emptyFilterMapping,\n  getFilterValueFromDataType,\n} from \"../../../utils/filtering-helper\";\nimport FilterComparisonSelect from \"../../../components/filtering/filter-comparison-select\";\nimport {\n  getJssNameFromType,\n  getSearchInputComponent,\n} from \"../../../utils/field-types\";\n\nconst useStyles = createUseStyles(filteringSkin);\n\nconst Filtering = (props) => {\n  const {\n    onFilteringModalClose,\n    columns,\n    onSubmit: onSubmitCallback,\n    extendedSearchOperator,\n    extendedSearchData,\n  } = props;\n\n  const { control, handleSubmit, getValues } = useForm({\n    defaultValues: {\n      basic_operator: extendedSearchOperator || \"AND\",\n      extended_search:\n        extendedSearchData.length > 0\n          ? extendedSearchData\n          : [\n              {\n                name: columns[0].name,\n                filter: \"contains\",\n                value: \"\",\n              },\n            ],\n    },\n  });\n  const { fields, append, remove, insert } = useFieldArray({\n    control,\n    name: \"extended_search\",\n  });\n\n  const classes = useStyles(props);\n\n  const onSubmit = (data) => {\n    if (onSubmitCallback) {\n      // making sure that we are not sending any data by reference\n      let extendedSearch = [];\n      data[\"extended_search\"].forEach((searchData) => {\n        if (searchData !== null) {\n          extendedSearch.push(searchData);\n        }\n      });\n      onSubmitCallback(\n        deepCloneArray({\n          ...data,\n          extended_search: extendedSearch,\n        })\n      );\n    }\n  };\n  const onError = (errors, e) => console.log(errors, e);\n\n  const numberOfFields = fields.length;\n\n  return (\n    <form\n      className=\"form-horizontal\"\n      onSubmit={handleSubmit(onSubmit, onError)}\n    >\n      <div className=\"modal-header\">\n        <h5 className=\"modal-title\">{i18n.t(\"filtering_filter_text\")}</h5>\n        <button\n          type=\"button\"\n          className=\"btn-close\"\n          data-dismiss=\"modal\"\n          aria-label=\"Close\"\n          onClick={onFilteringModalClose}\n        />\n      </div>\n\n      <div className=\"modal-body\">\n        <div className=\"row\">\n          <label className=\"col-md-3 control-label\">\n            {i18n.t(\"filtering_operator\")} :\n          </label>\n          <div className=\"col-md-3\">\n            <Controller\n              render={({ field: { onChange, onBlur, value } }) => (\n                <select\n                  name=\"basic_operator\"\n                  onChange={onChange}\n                  className=\"form-control form-select\"\n                  defaultValue={value}\n                >\n                  <option value=\"AND\">\n                    {i18n.t(\"filtering_and_statement\")}\n                  </option>\n                  <option value=\"OR\">{i18n.t(\"filtering_or_statement\")}</option>\n                </select>\n              )}\n              name=\"basic_operator\"\n              control={control}\n              defaultValue=\"AND\"\n            />\n          </div>\n        </div>\n        <div>\n          {fields.map((item, index) => {\n            const columnName = getValues(`extended_search[${index}]`).name;\n\n            const column = columns.find((column) => column.name === columnName);\n\n            return (\n              <div className={classes[\"filtering-row\"]} key={item.id}>\n                <div className=\"col-md-1\">\n                  <button\n                    className=\"btn btn-outline-dark btn-block\"\n                    type=\"button\"\n                    onClick={() => remove(index)}\n                    disabled={numberOfFields === 1}\n                  >\n                    <Icon icon=\"trash\" />\n                  </button>\n                </div>\n                <div className=\"col-md-3\">\n                  <Controller\n                    render={({ field: { onChange, onBlur, value } }) => (\n                      <select\n                        onChange={(event) => {\n                          const oldValues = {\n                            ...getValues(`extended_search[${index}]`),\n                          };\n                          const newValue = event.target.value;\n\n                          const oldColumn = columns.find(\n                            (column) => column.name === oldValues.name\n                          );\n                          const newColumn = columns.find(\n                            (column) => column.name === newValue\n                          );\n\n                          if (\n                            doTriggerFilterRefresh(\n                              oldColumn.dataType,\n                              newColumn.dataType\n                            )\n                          ) {\n                            remove(index);\n                            insert(index, {\n                              name: newValue,\n                              filter: getFilterValueFromDataType(\n                                newColumn.dataType\n                              ),\n                              value: \"\",\n                            });\n                          }\n\n                          onChange(event);\n                        }}\n                        className=\"form-control form-select\"\n                        name={`extended_search[${index}].name`}\n                        value={value}\n                      >\n                        {columns.map(\n                          (column) =>\n                            column.isSearchable && (\n                              <option value={column.name} key={column.name}>\n                                {column.displayAs}\n                              </option>\n                            )\n                        )}\n                      </select>\n                    )}\n                    name={`extended_search[${index}].name`}\n                    control={control}\n                    defaultValue={item.firstName} // make sure to set up defaultValue\n                  />\n                </div>\n                <div className=\"col-md-3\">\n                  <Controller\n                    render={({ field: { onChange, value } }) => {\n                      return (\n                        <FilterComparisonSelect\n                          onChange={(event) => {\n                            const oldValues = {\n                              ...getValues(`extended_search[${index}]`),\n                            };\n                            const newValue = event.target.value;\n                            if (\n                              doTriggerFilterValueRefresh(\n                                oldValues.filter,\n                                newValue\n                              )\n                            ) {\n                              remove(index);\n                              insert(index, {\n                                name: oldValues.name,\n                                filter: newValue,\n                                // null is an indication to not show an input\n                                value: emptyFilterMapping[newValue] ? null : \"\",\n                              });\n                            }\n\n                            onChange(event);\n                          }}\n                          className=\"form-control form-select\"\n                          name={`extended_search[${index}].filter`}\n                          value={value}\n                          dataType={column.dataType}\n                        />\n                      );\n                    }}\n                    name={`extended_search[${index}].filter`}\n                    control={control}\n                    defaultValue={item.filter}\n                  />\n                </div>\n                <div className=\"col-md-5\">\n                  <Controller\n                    render={({ field: { onChange, onBlur, value } }) => {\n                      // null is an indication that we will not show an input\n                      if (value === null) {\n                        return null;\n                      }\n\n                      const { dataType, permittedValues } = column;\n\n                      const SearchInputComponent =\n                        getSearchInputComponent(dataType);\n\n                      return (\n                        <SearchInputComponent\n                          onChange={onChange}\n                          onBlur={onBlur}\n                          className={classes[getJssNameFromType(dataType)]}\n                          name={`extended_search[${index}].value`}\n                          value={value}\n                          required={true}\n                          permittedValues={permittedValues}\n                        />\n                      );\n                    }}\n                    name={`extended_search[${index}].value`}\n                    control={control}\n                    defaultValue={item.value}\n                  />\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <div className={classes[\"filtering-row\"]}>\n          <div className=\"col-md-12\">\n            <button\n              type=\"button\"\n              className=\"btn btn-default btn-outline-dark\"\n              onClick={() => {\n                append({\n                  name: columns[0].name,\n                  filter: \"contains\",\n                  value: \"\",\n                });\n              }}\n            >\n              <Icon icon=\"plus\" />\n              &nbsp;\n              {i18n.t(\"filtering_add_more\")}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"modal-footer\">\n        <button\n          type=\"button\"\n          className=\"btn btn-default btn-outline-dark\"\n          data-dismiss=\"modal\"\n          onClick={onFilteringModalClose}\n        >\n          {i18n.t(\"filtering_cancel\")}\n        </button>\n        <button\n          type=\"submit\"\n          className=\"btn btn-success delete-multiple-confirmation-button\"\n        >\n          {i18n.t(\"filtering_filter_text\")}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Filtering;\n","import { createUseStyles } from \"react-jss\";\nimport filteringDialogSkin from \"../skin/filtering/filtering-dialog.skin\";\nimport Filtering from \"./filtering\";\n\nconst useStyles = createUseStyles(filteringDialogSkin);\n\nconst FilteringModal = (props) => {\n  const { filteringModalOpen, onFilteringSubmit, columns } = props;\n\n  const classes = useStyles(props);\n\n  return (\n    <div\n      className={classes[\"filtering-modal\"]}\n      tabIndex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"myModalLabel\"\n    >\n      {filteringModalOpen && (\n        <Filtering {...props} fields={columns} onSubmit={onFilteringSubmit} />\n      )}\n    </div>\n  );\n};\n\nexport default FilteringModal;\n","const ModalHeader = ({ title, onClose }) => {\n  return (\n    <div className=\"flex justify-between items-start p-5 rounded-t border-b dark:border-gray-600\">\n      <h3 className=\"text-xl font-semibold text-gray-900 lg:text-2xl dark:text-white\">\n        {title}\n      </h3>\n      <button\n        onClick={onClose}\n        type=\"button\"\n        className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white\"\n        data-modal-toggle=\"defaultModal\"\n      >\n        <svg\n          className=\"w-5 h-5\"\n          fill=\"currentColor\"\n          viewBox=\"0 0 20 20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n            clip-rule=\"evenodd\"\n          ></path>\n        </svg>\n      </button>\n    </div>\n  );\n};\n\nexport default ModalHeader;\n","import { createUseStyles } from \"react-jss\";\nimport { useForm } from \"react-hook-form\";\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport InputText from \"../../../components/common/input-type/input-text\";\nimport { getTitleTranslation } from \"../../../utils/translations-helper\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport ModalHeader from \"../common/modal-header\";\nimport Button from \"../buttons/button\";\nimport {\n  EVENT_SET_FIELD_VALUE,\n  subscribeEvent,\n  unsubscribeEvent,\n} from \"../../../utils/events\";\nimport { useEffect } from \"react\";\n\nconst useStyles = createUseStyles(formDialog);\n\nconst Form = ({\n  modalLoading,\n  formModalClose,\n  formFields,\n  formState,\n  onFormSubmit,\n  readOnly,\n  publishEvents,\n}) => {\n  const { handleSubmit, control, setValue } = useForm();\n\n  useEffect(() => {\n    const handleCustomEvent = ({ detail }) => {\n      setValue(detail.fieldName, detail.fieldValue);\n    };\n\n    if (publishEvents) {\n      subscribeEvent(EVENT_SET_FIELD_VALUE, handleCustomEvent);\n    }\n\n    // Clean up event listener on component unmount\n    return () => {\n      if (publishEvents) {\n        unsubscribeEvent(EVENT_SET_FIELD_VALUE, handleCustomEvent);\n      }\n    };\n  }, [setValue, publishEvents]);\n\n  const onSubmit = (data) => {\n    onFormSubmit({ formState, data });\n  };\n  const onError = (errors, e) => console.log(errors, e);\n\n  const classes = useStyles({ modalLoading, formModalClose, formFields });\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onSubmit, onError)}>\n        <div className=\"relative px-4 w-full h-full md:h-auto\">\n          <div className=\"relative bg-white rounded-lg shadow dark:bg-gray-700\">\n            <ModalHeader\n              title={getTitleTranslation(formState)}\n              onClose={formModalClose}\n            />\n            <div className={classes[\"form-fields\"]}>\n              {modalLoading\n                ? \"Loading...\"\n                : formFields.map((field) => {\n                    return (\n                      <div className=\"flex px-4 py-3\" key={field.fieldName}>\n                        <label\n                          className=\"w-1/4\"\n                          htmlFor={`gc-form-${field.fieldName}`}\n                        >\n                          {field.displayAs}\n                        </label>\n                        <div className=\"w-3/4\">\n                          <InputText\n                            className=\"px-4 py-3 border border-gray-200 w-full\"\n                            name={field.fieldName}\n                            value={field.fieldValue}\n                            control={control}\n                            id={`form-${field.fieldName}`}\n                          />\n                        </div>\n                      </div>\n                    );\n                  })}\n            </div>\n            <div className=\"flex items-center p-6 space-x-2 rounded-b border-t border-gray-200 dark:border-gray-600\">\n              {!readOnly && (\n                <>\n                  <label>\n                    <input type=\"checkbox\" />\n                    {/* Extra span is needed for checkbox to work for materialize UI*/}\n                    {i18n.t(\"close_modal_on_save\")}\n                  </label>{\" \"}\n                  &nbsp; &nbsp;\n                </>\n              )}\n              <Button onClick={formModalClose} label={i18n.t(\"close_modal\")} />\n              {!readOnly && (\n                <button type=\"submit\" className={classes[\"primary-button\"]}>\n                  {i18n.t(\"modal_save\")}\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default Form;\n","import { createUseStyles } from \"react-jss\";\nimport PropTypes from \"prop-types\";\nimport formDialog from \"../skin/form-dialog/form-dialog.skin\";\nimport { getTitleTranslation } from \"../../../utils/translations-helper\";\nimport Form from \"./form\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport ModalHeader from \"../common/modal-header\";\n\nconst useStyles = createUseStyles(formDialog);\n\nconst FormDialog = (props) => {\n  const {\n    modalLoading,\n    formModalClose,\n    formFields,\n    formState,\n    onFormSubmit,\n    formIsReadOnly,\n  } = props;\n\n  const classes = useStyles(props);\n\n  return (\n    <div className={classes[\"form-dialog\"]} tabIndex=\"-1\">\n      {modalLoading ? (\n        <>\n          <div className=\"relative px-4 w-full h-full md:h-auto\">\n            <div className=\"relative bg-white rounded-lg shadow dark:bg-gray-700\">\n              <ModalHeader\n                title={getTitleTranslation(formState)}\n                onClose={formModalClose}\n              />\n              <div className=\"p-6 space-y-6\">\n                <div className={classes[\"skeleton-loader\"]} />\n              </div>\n              <div className=\"flex items-center p-6 space-x-2 rounded-b border-t border-gray-200 dark:border-gray-600\">\n                <button\n                  type=\"button\"\n                  onClick={formModalClose}\n                  className={classes[\"secondary-button\"]}\n                >\n                  {i18n.t(\"close_modal\")}\n                </button>\n              </div>\n            </div>\n          </div>\n        </>\n      ) : (\n        <Form\n          formFields={formFields}\n          formModalClose={formModalClose}\n          modalLoading={modalLoading}\n          formState={formState}\n          onFormSubmit={onFormSubmit}\n          readOnly={formIsReadOnly}\n        />\n      )}\n    </div>\n  );\n};\n\nFormDialog.propTypes = {\n  modalLoading: PropTypes.bool,\n  formModalOpen: PropTypes.bool,\n  formState: PropTypes.string,\n  formFields: PropTypes.array,\n};\n\nFormDialog.defaultProps = {\n  formFields: [],\n};\n\nexport default FormDialog;\n","import { createUseStyles } from \"react-jss\";\n\nimport groupButtonSkin from \"../skin/buttons/buttons.skin\";\nimport ButtonDropdown from \"./button-dropdown\";\nimport i18n from \"../../../utils/locale/i18n\";\nimport PropTypes from \"prop-types\";\nimport Button from \"./button\";\n\nconst useStyles = createUseStyles(groupButtonSkin);\n\nconst GroupButtons = (props) => {\n  const { buttons, maxButtons } = props;\n  const classes = useStyles(props);\n\n  return (\n    <div className={classes[\"buttons-group\"]}>\n      {buttons\n        .filter((__button, key) => key < maxButtons - 1)\n        .map((button) => (\n          <Button\n            key={button.key}\n            onClick={(event) => {\n              event.preventDefault();\n              if (button.onClick) {\n                button.onClick({ primaryKeyValue: button.primaryKeyValue });\n              }\n            }}\n            link={true}\n            href={button.url ? button.url : \"\"}\n            icon={button.icon}\n            label={button.text}\n          />\n        ))}\n      <ButtonDropdown\n        buttons={buttons.filter((__button, key) => key >= maxButtons - 1)}\n        buttonLabel={maxButtons === 1 ? i18n.t(\"actions\") : i18n.t(\"more\")}\n      />\n    </div>\n  );\n};\n\nGroupButtons.propTypes = {\n  buttons: PropTypes.array,\n  maxButtons: PropTypes.number,\n};\n\nGroupButtons.defaultProps = {\n  buttons: [],\n  maxButtons: 2,\n};\n\nexport default GroupButtons;\n","import ColumnsModal from \"./columns/columns-modal\";\nimport DatagridBody from \"./datagrid/datagrid-body\";\nimport DatagridCheckbox from \"./datagrid/datagrid-checkbox\";\nimport DatagridFooter from \"./datagrid/datagrid-footer\";\nimport DatagridHeader from \"./datagrid/datagrid-header\";\nimport DatagridTitle from \"./datagrid/datagrid-title\";\nimport DatagridTools from \"./datagrid/datagrid-tools\";\nimport DatagridWrapper from \"./datagrid/datagrid-wrapper\";\nimport DeleteMultipleModal from \"./delete-multiple/delete-multiple-modal\";\nimport DeleteSingleModal from \"./delete-single/delete-single-modal\";\nimport ErrorDialog from \"./error/error-dialog\";\nimport FilteringModal from \"./filtering/filtering-modal\";\nimport FormDialog from \"./form/form-dialog\";\nimport GroupButtons from \"./buttons/group-buttons\";\n\nconst themeComponents = {\n  ColumnsModal,\n  DatagridBody,\n  DatagridCheckbox,\n  DatagridFooter,\n  DatagridHeader,\n  DatagridTitle,\n  DatagridTools,\n  DatagridWrapper,\n  DeleteMultipleModal,\n  DeleteSingleModal,\n  ErrorDialog,\n  FilteringModal,\n  FormDialog,\n  GroupButtons,\n};\n\nexport default themeComponents;\n","export const selectColumnWidth = (state) => state.columnWidth;\n","const widthChanging = {\n  display: \"block\",\n  position: \"absolute\",\n  right: \"-13px\",\n  height: \"39px\",\n  width: \"10px\",\n  cursor: \"col-resize\",\n  opacity: \"0.8\",\n  \"z-index\": \"10\",\n  \"&:hover\": {\n    background: \"var(--gc-emphasis-background-color)\",\n    cursor: \"col-resize\",\n  },\n  \"&:focus, &:active\": {\n    background: \"transparent\",\n    cursor: \"col-resize\",\n  },\n};\n\nconst miniGridSkin = {\n  \"mini-grid\": {\n    composes: \"table table-bordered table-hover\",\n    \"margin-bottom\": \"0px\",\n  },\n  \"interactive-grid\": {\n    composes: \"table table-bordered\",\n    width: ({ columnWidth }) =>\n      typeof columnWidth === \"object\" && Object.keys(columnWidth).length > 0\n        ? \"auto\"\n        : \"100%\",\n  },\n  \"scrolling-wrapper\": {\n    composes: \"gc-mini-grid-scrolling-wrapper\",\n    width: \"100%\",\n    position: \"relative\",\n    \"overflow-x\": \"auto\",\n  },\n  \"column-text\": {\n    \"&>span\": {\n      \"text-overflow\": \"ellipsis\",\n      \"white-space\": \"nowrap\",\n      overflow: \"hidden\",\n    },\n    \"align-items\": \"center\",\n    \"max-width\": \"350px\",\n    \"min-width\": \"0\", // small hack so we can have flex to work with ellipsis\n    \"vertical-align\": \"middle\",\n    display: \"flex\",\n    height: \"38px\",\n  },\n  \"mini-grid-body\": {\n    \".table &\": {\n      \"border-top\": \"none\",\n    },\n  },\n  description: {\n    display: \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"space-between\",\n    \"margin-bottom\": \"10px\",\n  },\n  \"width-changing\": {\n    ...widthChanging,\n  },\n  \"width-changing-last\": {\n    ...widthChanging,\n    right: \"-8px\",\n  },\n  \"header-column\": {\n    display: \"flex\",\n    \"justify-content\": \"space-between\",\n    \"align-items\": \"center\",\n    position: \"relative\",\n    \"min-width\": \"100px\",\n    \"white-space\": \"nowrap\",\n    \"padding-right\": \"10px\",\n  },\n};\n\nexport default miniGridSkin;\n","import { createUseStyles } from \"react-jss\";\nimport miniGridSkin from \"../skin/datagrid/datagrid-mini.skin\";\nimport { formatDatagridValue } from \"../../../utils/datagrid\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { fieldTypes } from \"../../../constants/field-types\";\nimport { selectColumnWidth } from \"../../../selectors/column-width\";\n\nconst useStyles = createUseStyles(miniGridSkin);\n\nconst selectLocalCode = (state) => state.configuration.locale;\nconst selectDateFormat = (state) => state.configuration.dateFormat;\n\nconst DatagridMiniGrid = ({ visibleColumns, rows }) => {\n  const locale = useSelector(selectLocalCode);\n  const dateFormat = useSelector(selectDateFormat);\n  const columnWidth = useSelector(selectColumnWidth);\n\n  const classes = useStyles({ columnWidth });\n\n  return (\n    <div className={classes[\"scrolling-wrapper\"]}>\n      <table className={classes[\"mini-grid\"]}>\n        <thead>\n          <tr>\n            {visibleColumns.map((column) =>\n              column.dataType === fieldTypes.INVISIBLE ? null : (\n                <th key={column.name}>{column.displayAs}</th>\n              )\n            )}\n          </tr>\n        </thead>\n        <tbody className={classes[\"mini-grid-body\"]}>\n          {rows.map((rowData, numRow) => (\n            <tr key={numRow}>\n              {visibleColumns.map((column) =>\n                column.dataType === fieldTypes.INVISIBLE ? null : (\n                  <td key={column.name}>\n                    <div className={classes[\"column-text\"]}>\n                      {formatDatagridValue(\n                        rowData[column.name],\n                        column.dataType,\n                        {\n                          permittedValues: column.permittedValues,\n                          fieldName: column.name,\n                          locale,\n                          dateFormat,\n                          primaryKeyValue:\n                            rowData.grocery_crud_extras.primaryKeyValue,\n                        }\n                      )}\n                    </div>\n                  </td>\n                )\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nDatagridMiniGrid.propTypes = {\n  rows: PropTypes.array,\n  visibleColumns: PropTypes.array,\n};\n\nexport default DatagridMiniGrid;\n"],"sourceRoot":""}